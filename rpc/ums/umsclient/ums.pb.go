// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.19.4
// source: rpc/ums/ums.proto

package umsclient

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 添加积分消费设置
type AddIntegrationConsumeSettingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                               //
	DeductionPerAmount int32 `protobuf:"varint,2,opt,name=deduction_per_amount,json=deductionPerAmount,proto3" json:"deduction_per_amount,omitempty"`   //每一元需要抵扣的积分数量
	MaxPercentPerOrder int32 `protobuf:"varint,3,opt,name=max_percent_per_order,json=maxPercentPerOrder,proto3" json:"max_percent_per_order,omitempty"` //每笔订单最高抵用百分比
	UseUnit            int32 `protobuf:"varint,4,opt,name=use_unit,json=useUnit,proto3" json:"use_unit,omitempty"`                                      //每次使用积分最小单位100
	IsDefault          int32 `protobuf:"varint,5,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`                                //是否默认：0->否；1->是
	CouponStatus       int32 `protobuf:"varint,6,opt,name=coupon_status,json=couponStatus,proto3" json:"coupon_status,omitempty"`                       //是否可以和优惠券同用；0->不可以；1->可以
}

func (x *AddIntegrationConsumeSettingReq) Reset() {
	*x = AddIntegrationConsumeSettingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddIntegrationConsumeSettingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddIntegrationConsumeSettingReq) ProtoMessage() {}

func (x *AddIntegrationConsumeSettingReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddIntegrationConsumeSettingReq.ProtoReflect.Descriptor instead.
func (*AddIntegrationConsumeSettingReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{0}
}

func (x *AddIntegrationConsumeSettingReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddIntegrationConsumeSettingReq) GetDeductionPerAmount() int32 {
	if x != nil {
		return x.DeductionPerAmount
	}
	return 0
}

func (x *AddIntegrationConsumeSettingReq) GetMaxPercentPerOrder() int32 {
	if x != nil {
		return x.MaxPercentPerOrder
	}
	return 0
}

func (x *AddIntegrationConsumeSettingReq) GetUseUnit() int32 {
	if x != nil {
		return x.UseUnit
	}
	return 0
}

func (x *AddIntegrationConsumeSettingReq) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

func (x *AddIntegrationConsumeSettingReq) GetCouponStatus() int32 {
	if x != nil {
		return x.CouponStatus
	}
	return 0
}

type AddIntegrationConsumeSettingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddIntegrationConsumeSettingResp) Reset() {
	*x = AddIntegrationConsumeSettingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddIntegrationConsumeSettingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddIntegrationConsumeSettingResp) ProtoMessage() {}

func (x *AddIntegrationConsumeSettingResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddIntegrationConsumeSettingResp.ProtoReflect.Descriptor instead.
func (*AddIntegrationConsumeSettingResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{1}
}

func (x *AddIntegrationConsumeSettingResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除积分消费设置
type DeleteIntegrationConsumeSettingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteIntegrationConsumeSettingReq) Reset() {
	*x = DeleteIntegrationConsumeSettingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteIntegrationConsumeSettingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIntegrationConsumeSettingReq) ProtoMessage() {}

func (x *DeleteIntegrationConsumeSettingReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIntegrationConsumeSettingReq.ProtoReflect.Descriptor instead.
func (*DeleteIntegrationConsumeSettingReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteIntegrationConsumeSettingReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteIntegrationConsumeSettingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteIntegrationConsumeSettingResp) Reset() {
	*x = DeleteIntegrationConsumeSettingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteIntegrationConsumeSettingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIntegrationConsumeSettingResp) ProtoMessage() {}

func (x *DeleteIntegrationConsumeSettingResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIntegrationConsumeSettingResp.ProtoReflect.Descriptor instead.
func (*DeleteIntegrationConsumeSettingResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteIntegrationConsumeSettingResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新积分消费设置
type UpdateIntegrationConsumeSettingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                               //
	DeductionPerAmount int32 `protobuf:"varint,2,opt,name=deduction_per_amount,json=deductionPerAmount,proto3" json:"deduction_per_amount,omitempty"`   //每一元需要抵扣的积分数量
	MaxPercentPerOrder int32 `protobuf:"varint,3,opt,name=max_percent_per_order,json=maxPercentPerOrder,proto3" json:"max_percent_per_order,omitempty"` //每笔订单最高抵用百分比
	UseUnit            int32 `protobuf:"varint,4,opt,name=use_unit,json=useUnit,proto3" json:"use_unit,omitempty"`                                      //每次使用积分最小单位100
	IsDefault          int32 `protobuf:"varint,5,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`                                //是否默认：0->否；1->是
	CouponStatus       int32 `protobuf:"varint,6,opt,name=coupon_status,json=couponStatus,proto3" json:"coupon_status,omitempty"`                       //是否可以和优惠券同用；0->不可以；1->可以
}

func (x *UpdateIntegrationConsumeSettingReq) Reset() {
	*x = UpdateIntegrationConsumeSettingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIntegrationConsumeSettingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIntegrationConsumeSettingReq) ProtoMessage() {}

func (x *UpdateIntegrationConsumeSettingReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIntegrationConsumeSettingReq.ProtoReflect.Descriptor instead.
func (*UpdateIntegrationConsumeSettingReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateIntegrationConsumeSettingReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateIntegrationConsumeSettingReq) GetDeductionPerAmount() int32 {
	if x != nil {
		return x.DeductionPerAmount
	}
	return 0
}

func (x *UpdateIntegrationConsumeSettingReq) GetMaxPercentPerOrder() int32 {
	if x != nil {
		return x.MaxPercentPerOrder
	}
	return 0
}

func (x *UpdateIntegrationConsumeSettingReq) GetUseUnit() int32 {
	if x != nil {
		return x.UseUnit
	}
	return 0
}

func (x *UpdateIntegrationConsumeSettingReq) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

func (x *UpdateIntegrationConsumeSettingReq) GetCouponStatus() int32 {
	if x != nil {
		return x.CouponStatus
	}
	return 0
}

type UpdateIntegrationConsumeSettingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateIntegrationConsumeSettingResp) Reset() {
	*x = UpdateIntegrationConsumeSettingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIntegrationConsumeSettingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIntegrationConsumeSettingResp) ProtoMessage() {}

func (x *UpdateIntegrationConsumeSettingResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIntegrationConsumeSettingResp.ProtoReflect.Descriptor instead.
func (*UpdateIntegrationConsumeSettingResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateIntegrationConsumeSettingResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新积分消费设置状态
type UpdateIntegrationConsumeSettingStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                //
	IsDefault int32 `protobuf:"varint,2,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"` //是否默认：0->否；1->是
}

func (x *UpdateIntegrationConsumeSettingStatusReq) Reset() {
	*x = UpdateIntegrationConsumeSettingStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIntegrationConsumeSettingStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIntegrationConsumeSettingStatusReq) ProtoMessage() {}

func (x *UpdateIntegrationConsumeSettingStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIntegrationConsumeSettingStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateIntegrationConsumeSettingStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateIntegrationConsumeSettingStatusReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateIntegrationConsumeSettingStatusReq) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

type UpdateIntegrationConsumeSettingStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateIntegrationConsumeSettingStatusResp) Reset() {
	*x = UpdateIntegrationConsumeSettingStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIntegrationConsumeSettingStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIntegrationConsumeSettingStatusResp) ProtoMessage() {}

func (x *UpdateIntegrationConsumeSettingStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIntegrationConsumeSettingStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateIntegrationConsumeSettingStatusResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateIntegrationConsumeSettingStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询积分消费设置详情
type QueryIntegrationConsumeSettingDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryIntegrationConsumeSettingDetailReq) Reset() {
	*x = QueryIntegrationConsumeSettingDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryIntegrationConsumeSettingDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryIntegrationConsumeSettingDetailReq) ProtoMessage() {}

func (x *QueryIntegrationConsumeSettingDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryIntegrationConsumeSettingDetailReq.ProtoReflect.Descriptor instead.
func (*QueryIntegrationConsumeSettingDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{8}
}

func (x *QueryIntegrationConsumeSettingDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryIntegrationConsumeSettingDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                               //
	DeductionPerAmount int32 `protobuf:"varint,2,opt,name=deduction_per_amount,json=deductionPerAmount,proto3" json:"deduction_per_amount,omitempty"`   //每一元需要抵扣的积分数量
	MaxPercentPerOrder int32 `protobuf:"varint,3,opt,name=max_percent_per_order,json=maxPercentPerOrder,proto3" json:"max_percent_per_order,omitempty"` //每笔订单最高抵用百分比
	UseUnit            int32 `protobuf:"varint,4,opt,name=use_unit,json=useUnit,proto3" json:"use_unit,omitempty"`                                      //每次使用积分最小单位100
	IsDefault          int32 `protobuf:"varint,5,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`                                //是否默认：0->否；1->是
	CouponStatus       int32 `protobuf:"varint,6,opt,name=coupon_status,json=couponStatus,proto3" json:"coupon_status,omitempty"`                       //是否可以和优惠券同用；0->不可以；1->可以
}

func (x *QueryIntegrationConsumeSettingDetailResp) Reset() {
	*x = QueryIntegrationConsumeSettingDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryIntegrationConsumeSettingDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryIntegrationConsumeSettingDetailResp) ProtoMessage() {}

func (x *QueryIntegrationConsumeSettingDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryIntegrationConsumeSettingDetailResp.ProtoReflect.Descriptor instead.
func (*QueryIntegrationConsumeSettingDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{9}
}

func (x *QueryIntegrationConsumeSettingDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryIntegrationConsumeSettingDetailResp) GetDeductionPerAmount() int32 {
	if x != nil {
		return x.DeductionPerAmount
	}
	return 0
}

func (x *QueryIntegrationConsumeSettingDetailResp) GetMaxPercentPerOrder() int32 {
	if x != nil {
		return x.MaxPercentPerOrder
	}
	return 0
}

func (x *QueryIntegrationConsumeSettingDetailResp) GetUseUnit() int32 {
	if x != nil {
		return x.UseUnit
	}
	return 0
}

func (x *QueryIntegrationConsumeSettingDetailResp) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

func (x *QueryIntegrationConsumeSettingDetailResp) GetCouponStatus() int32 {
	if x != nil {
		return x.CouponStatus
	}
	return 0
}

// 分页查询积分消费设置列表
type QueryIntegrationConsumeSettingListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum  int64 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`    //第几页
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` //每页的数量
}

func (x *QueryIntegrationConsumeSettingListReq) Reset() {
	*x = QueryIntegrationConsumeSettingListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryIntegrationConsumeSettingListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryIntegrationConsumeSettingListReq) ProtoMessage() {}

func (x *QueryIntegrationConsumeSettingListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryIntegrationConsumeSettingListReq.ProtoReflect.Descriptor instead.
func (*QueryIntegrationConsumeSettingListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{10}
}

func (x *QueryIntegrationConsumeSettingListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryIntegrationConsumeSettingListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type IntegrationConsumeSettingListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                               //
	DeductionPerAmount int32 `protobuf:"varint,2,opt,name=deduction_per_amount,json=deductionPerAmount,proto3" json:"deduction_per_amount,omitempty"`   //每一元需要抵扣的积分数量
	MaxPercentPerOrder int32 `protobuf:"varint,3,opt,name=max_percent_per_order,json=maxPercentPerOrder,proto3" json:"max_percent_per_order,omitempty"` //每笔订单最高抵用百分比
	UseUnit            int32 `protobuf:"varint,4,opt,name=use_unit,json=useUnit,proto3" json:"use_unit,omitempty"`                                      //每次使用积分最小单位100
	IsDefault          int32 `protobuf:"varint,5,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`                                //是否默认：0->否；1->是
	CouponStatus       int32 `protobuf:"varint,6,opt,name=coupon_status,json=couponStatus,proto3" json:"coupon_status,omitempty"`                       //是否可以和优惠券同用；0->不可以；1->可以
}

func (x *IntegrationConsumeSettingListData) Reset() {
	*x = IntegrationConsumeSettingListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegrationConsumeSettingListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegrationConsumeSettingListData) ProtoMessage() {}

func (x *IntegrationConsumeSettingListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegrationConsumeSettingListData.ProtoReflect.Descriptor instead.
func (*IntegrationConsumeSettingListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{11}
}

func (x *IntegrationConsumeSettingListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IntegrationConsumeSettingListData) GetDeductionPerAmount() int32 {
	if x != nil {
		return x.DeductionPerAmount
	}
	return 0
}

func (x *IntegrationConsumeSettingListData) GetMaxPercentPerOrder() int32 {
	if x != nil {
		return x.MaxPercentPerOrder
	}
	return 0
}

func (x *IntegrationConsumeSettingListData) GetUseUnit() int32 {
	if x != nil {
		return x.UseUnit
	}
	return 0
}

func (x *IntegrationConsumeSettingListData) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

func (x *IntegrationConsumeSettingListData) GetCouponStatus() int32 {
	if x != nil {
		return x.CouponStatus
	}
	return 0
}

type QueryIntegrationConsumeSettingListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                                `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*IntegrationConsumeSettingListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryIntegrationConsumeSettingListResp) Reset() {
	*x = QueryIntegrationConsumeSettingListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryIntegrationConsumeSettingListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryIntegrationConsumeSettingListResp) ProtoMessage() {}

func (x *QueryIntegrationConsumeSettingListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryIntegrationConsumeSettingListResp.ProtoReflect.Descriptor instead.
func (*QueryIntegrationConsumeSettingListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{12}
}

func (x *QueryIntegrationConsumeSettingListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryIntegrationConsumeSettingListResp) GetList() []*IntegrationConsumeSettingListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加会员收货地址
type AddMemberAddressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                           //主键ID
	MemberId      int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`               //会员ID
	ReceiverName  string `protobuf:"bytes,3,opt,name=receiver_name,json=receiverName,proto3" json:"receiver_name,omitempty"`    //收货人姓名
	ReceiverPhone string `protobuf:"bytes,4,opt,name=receiver_phone,json=receiverPhone,proto3" json:"receiver_phone,omitempty"` //收货人电话
	Province      string `protobuf:"bytes,5,opt,name=province,proto3" json:"province,omitempty"`                                //省份
	City          string `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`                                        //城市
	District      string `protobuf:"bytes,7,opt,name=district,proto3" json:"district,omitempty"`                                //区县
	DetailAddress string `protobuf:"bytes,8,opt,name=detail_address,json=detailAddress,proto3" json:"detail_address,omitempty"` //详细地址
	PostalCode    string `protobuf:"bytes,9,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`          //邮政编码
	Tag           string `protobuf:"bytes,10,opt,name=tag,proto3" json:"tag,omitempty"`                                         //地址标签：家、公司等
	IsDefault     int32  `protobuf:"varint,11,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`           //是否默认地址
}

func (x *AddMemberAddressReq) Reset() {
	*x = AddMemberAddressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberAddressReq) ProtoMessage() {}

func (x *AddMemberAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberAddressReq.ProtoReflect.Descriptor instead.
func (*AddMemberAddressReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{13}
}

func (x *AddMemberAddressReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddMemberAddressReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *AddMemberAddressReq) GetReceiverName() string {
	if x != nil {
		return x.ReceiverName
	}
	return ""
}

func (x *AddMemberAddressReq) GetReceiverPhone() string {
	if x != nil {
		return x.ReceiverPhone
	}
	return ""
}

func (x *AddMemberAddressReq) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *AddMemberAddressReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *AddMemberAddressReq) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *AddMemberAddressReq) GetDetailAddress() string {
	if x != nil {
		return x.DetailAddress
	}
	return ""
}

func (x *AddMemberAddressReq) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *AddMemberAddressReq) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *AddMemberAddressReq) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

type AddMemberAddressResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddMemberAddressResp) Reset() {
	*x = AddMemberAddressResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberAddressResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberAddressResp) ProtoMessage() {}

func (x *AddMemberAddressResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberAddressResp.ProtoReflect.Descriptor instead.
func (*AddMemberAddressResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{14}
}

func (x *AddMemberAddressResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除会员收货地址
type DeleteMemberAddressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids      []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	MemberId int64   `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` //会员ID
}

func (x *DeleteMemberAddressReq) Reset() {
	*x = DeleteMemberAddressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberAddressReq) ProtoMessage() {}

func (x *DeleteMemberAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberAddressReq.ProtoReflect.Descriptor instead.
func (*DeleteMemberAddressReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteMemberAddressReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DeleteMemberAddressReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type DeleteMemberAddressResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteMemberAddressResp) Reset() {
	*x = DeleteMemberAddressResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberAddressResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberAddressResp) ProtoMessage() {}

func (x *DeleteMemberAddressResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberAddressResp.ProtoReflect.Descriptor instead.
func (*DeleteMemberAddressResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteMemberAddressResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新会员收货地址
type UpdateMemberAddressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                           //主键ID
	MemberId      int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`               //会员ID
	ReceiverName  string `protobuf:"bytes,3,opt,name=receiver_name,json=receiverName,proto3" json:"receiver_name,omitempty"`    //收货人姓名
	ReceiverPhone string `protobuf:"bytes,4,opt,name=receiver_phone,json=receiverPhone,proto3" json:"receiver_phone,omitempty"` //收货人电话
	Province      string `protobuf:"bytes,5,opt,name=province,proto3" json:"province,omitempty"`                                //省份
	City          string `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`                                        //城市
	District      string `protobuf:"bytes,7,opt,name=district,proto3" json:"district,omitempty"`                                //区县
	DetailAddress string `protobuf:"bytes,8,opt,name=detail_address,json=detailAddress,proto3" json:"detail_address,omitempty"` //详细地址
	PostalCode    string `protobuf:"bytes,9,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`          //邮政编码
	Tag           string `protobuf:"bytes,10,opt,name=tag,proto3" json:"tag,omitempty"`                                         //地址标签：家、公司等
	IsDefault     int32  `protobuf:"varint,11,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`           //是否默认地址
}

func (x *UpdateMemberAddressReq) Reset() {
	*x = UpdateMemberAddressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberAddressReq) ProtoMessage() {}

func (x *UpdateMemberAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberAddressReq.ProtoReflect.Descriptor instead.
func (*UpdateMemberAddressReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateMemberAddressReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateMemberAddressReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *UpdateMemberAddressReq) GetReceiverName() string {
	if x != nil {
		return x.ReceiverName
	}
	return ""
}

func (x *UpdateMemberAddressReq) GetReceiverPhone() string {
	if x != nil {
		return x.ReceiverPhone
	}
	return ""
}

func (x *UpdateMemberAddressReq) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *UpdateMemberAddressReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UpdateMemberAddressReq) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *UpdateMemberAddressReq) GetDetailAddress() string {
	if x != nil {
		return x.DetailAddress
	}
	return ""
}

func (x *UpdateMemberAddressReq) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *UpdateMemberAddressReq) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *UpdateMemberAddressReq) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

type UpdateMemberAddressResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateMemberAddressResp) Reset() {
	*x = UpdateMemberAddressResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberAddressResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberAddressResp) ProtoMessage() {}

func (x *UpdateMemberAddressResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberAddressResp.ProtoReflect.Descriptor instead.
func (*UpdateMemberAddressResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateMemberAddressResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新会员默认的收货地址
type UpdateMemberAddressStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                //主键ID
	MemberId  int64 `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`    //会员ID
	IsDefault int32 `protobuf:"varint,3,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"` //是否默认地址
}

func (x *UpdateMemberAddressStatusReq) Reset() {
	*x = UpdateMemberAddressStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberAddressStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberAddressStatusReq) ProtoMessage() {}

func (x *UpdateMemberAddressStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberAddressStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateMemberAddressStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateMemberAddressStatusReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateMemberAddressStatusReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *UpdateMemberAddressStatusReq) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

type UpdateMemberAddressStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateMemberAddressStatusResp) Reset() {
	*x = UpdateMemberAddressStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberAddressStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberAddressStatusResp) ProtoMessage() {}

func (x *UpdateMemberAddressStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberAddressStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateMemberAddressStatusResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateMemberAddressStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询会员收货地址详情
type QueryMemberAddressDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MemberId int64 `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` //会员ID
}

func (x *QueryMemberAddressDetailReq) Reset() {
	*x = QueryMemberAddressDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberAddressDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberAddressDetailReq) ProtoMessage() {}

func (x *QueryMemberAddressDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberAddressDetailReq.ProtoReflect.Descriptor instead.
func (*QueryMemberAddressDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{21}
}

func (x *QueryMemberAddressDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMemberAddressDetailReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type QueryMemberAddressDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                           //主键ID
	MemberId      int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`               //会员ID
	ReceiverName  string `protobuf:"bytes,3,opt,name=receiver_name,json=receiverName,proto3" json:"receiver_name,omitempty"`    //收货人姓名
	ReceiverPhone string `protobuf:"bytes,4,opt,name=receiver_phone,json=receiverPhone,proto3" json:"receiver_phone,omitempty"` //收货人电话
	Province      string `protobuf:"bytes,5,opt,name=province,proto3" json:"province,omitempty"`                                //省份
	City          string `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`                                        //城市
	District      string `protobuf:"bytes,7,opt,name=district,proto3" json:"district,omitempty"`                                //区县
	DetailAddress string `protobuf:"bytes,8,opt,name=detail_address,json=detailAddress,proto3" json:"detail_address,omitempty"` //详细地址
	PostalCode    string `protobuf:"bytes,9,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`          //邮政编码
	Tag           string `protobuf:"bytes,10,opt,name=tag,proto3" json:"tag,omitempty"`                                         //地址标签：家、公司等
	IsDefault     int32  `protobuf:"varint,11,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`           //是否默认地址
	CreateTime    string `protobuf:"bytes,12,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`         //创建时间
	UpdateTime    string `protobuf:"bytes,13,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`         //更新时间
	IsDeleted     int32  `protobuf:"varint,14,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`           //是否删除
}

func (x *QueryMemberAddressDetailResp) Reset() {
	*x = QueryMemberAddressDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberAddressDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberAddressDetailResp) ProtoMessage() {}

func (x *QueryMemberAddressDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberAddressDetailResp.ProtoReflect.Descriptor instead.
func (*QueryMemberAddressDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{22}
}

func (x *QueryMemberAddressDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMemberAddressDetailResp) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryMemberAddressDetailResp) GetReceiverName() string {
	if x != nil {
		return x.ReceiverName
	}
	return ""
}

func (x *QueryMemberAddressDetailResp) GetReceiverPhone() string {
	if x != nil {
		return x.ReceiverPhone
	}
	return ""
}

func (x *QueryMemberAddressDetailResp) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *QueryMemberAddressDetailResp) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *QueryMemberAddressDetailResp) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *QueryMemberAddressDetailResp) GetDetailAddress() string {
	if x != nil {
		return x.DetailAddress
	}
	return ""
}

func (x *QueryMemberAddressDetailResp) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *QueryMemberAddressDetailResp) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *QueryMemberAddressDetailResp) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

func (x *QueryMemberAddressDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryMemberAddressDetailResp) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *QueryMemberAddressDetailResp) GetIsDeleted() int32 {
	if x != nil {
		return x.IsDeleted
	}
	return 0
}

// 分页查询会员收货地址列表
type QueryMemberAddressListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId int64 `protobuf:"varint,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` //会员ID
	PageNum  int64 `protobuf:"varint,2,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`    //第几页
	PageSize int64 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` //每页的数量
}

func (x *QueryMemberAddressListReq) Reset() {
	*x = QueryMemberAddressListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberAddressListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberAddressListReq) ProtoMessage() {}

func (x *QueryMemberAddressListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberAddressListReq.ProtoReflect.Descriptor instead.
func (*QueryMemberAddressListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{23}
}

func (x *QueryMemberAddressListReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryMemberAddressListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryMemberAddressListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type MemberAddressListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                           //主键ID
	MemberId      int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`               //会员ID
	ReceiverName  string `protobuf:"bytes,3,opt,name=receiver_name,json=receiverName,proto3" json:"receiver_name,omitempty"`    //收货人姓名
	ReceiverPhone string `protobuf:"bytes,4,opt,name=receiver_phone,json=receiverPhone,proto3" json:"receiver_phone,omitempty"` //收货人电话
	Province      string `protobuf:"bytes,5,opt,name=province,proto3" json:"province,omitempty"`                                //省份
	City          string `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`                                        //城市
	District      string `protobuf:"bytes,7,opt,name=district,proto3" json:"district,omitempty"`                                //区县
	DetailAddress string `protobuf:"bytes,8,opt,name=detail_address,json=detailAddress,proto3" json:"detail_address,omitempty"` //详细地址
	PostalCode    string `protobuf:"bytes,9,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`          //邮政编码
	Tag           string `protobuf:"bytes,10,opt,name=tag,proto3" json:"tag,omitempty"`                                         //地址标签：家、公司等
	IsDefault     int32  `protobuf:"varint,11,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`           //是否默认地址
	CreateTime    string `protobuf:"bytes,12,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`         //创建时间
	UpdateTime    string `protobuf:"bytes,13,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`         //更新时间
	IsDeleted     int32  `protobuf:"varint,14,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`           //是否删除
}

func (x *MemberAddressListData) Reset() {
	*x = MemberAddressListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberAddressListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberAddressListData) ProtoMessage() {}

func (x *MemberAddressListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberAddressListData.ProtoReflect.Descriptor instead.
func (*MemberAddressListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{24}
}

func (x *MemberAddressListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberAddressListData) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *MemberAddressListData) GetReceiverName() string {
	if x != nil {
		return x.ReceiverName
	}
	return ""
}

func (x *MemberAddressListData) GetReceiverPhone() string {
	if x != nil {
		return x.ReceiverPhone
	}
	return ""
}

func (x *MemberAddressListData) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *MemberAddressListData) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *MemberAddressListData) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *MemberAddressListData) GetDetailAddress() string {
	if x != nil {
		return x.DetailAddress
	}
	return ""
}

func (x *MemberAddressListData) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *MemberAddressListData) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *MemberAddressListData) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

func (x *MemberAddressListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *MemberAddressListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *MemberAddressListData) GetIsDeleted() int32 {
	if x != nil {
		return x.IsDeleted
	}
	return 0
}

type QueryMemberAddressListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*MemberAddressListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryMemberAddressListResp) Reset() {
	*x = QueryMemberAddressListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberAddressListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberAddressListResp) ProtoMessage() {}

func (x *QueryMemberAddressListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberAddressListResp.ProtoReflect.Descriptor instead.
func (*QueryMemberAddressListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{25}
}

func (x *QueryMemberAddressListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryMemberAddressListResp) GetList() []*MemberAddressListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加会员关注品牌
type AddMemberBrandAttentionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                               //
	MemberId  int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`   //会员id
	BrandId   int64  `protobuf:"varint,5,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`      //品牌id
	BrandName string `protobuf:"bytes,6,opt,name=brand_name,json=brandName,proto3" json:"brand_name,omitempty"` //品牌名称
	BrandLogo string `protobuf:"bytes,7,opt,name=brand_logo,json=brandLogo,proto3" json:"brand_logo,omitempty"` //品牌Logo
	BrandCity string `protobuf:"bytes,8,opt,name=brand_city,json=brandCity,proto3" json:"brand_city,omitempty"` //品牌所在城市
}

func (x *AddMemberBrandAttentionReq) Reset() {
	*x = AddMemberBrandAttentionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberBrandAttentionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberBrandAttentionReq) ProtoMessage() {}

func (x *AddMemberBrandAttentionReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberBrandAttentionReq.ProtoReflect.Descriptor instead.
func (*AddMemberBrandAttentionReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{26}
}

func (x *AddMemberBrandAttentionReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddMemberBrandAttentionReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *AddMemberBrandAttentionReq) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *AddMemberBrandAttentionReq) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *AddMemberBrandAttentionReq) GetBrandLogo() string {
	if x != nil {
		return x.BrandLogo
	}
	return ""
}

func (x *AddMemberBrandAttentionReq) GetBrandCity() string {
	if x != nil {
		return x.BrandCity
	}
	return ""
}

type AddMemberBrandAttentionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddMemberBrandAttentionResp) Reset() {
	*x = AddMemberBrandAttentionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberBrandAttentionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberBrandAttentionResp) ProtoMessage() {}

func (x *AddMemberBrandAttentionResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberBrandAttentionResp.ProtoReflect.Descriptor instead.
func (*AddMemberBrandAttentionResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{27}
}

func (x *AddMemberBrandAttentionResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除会员关注品牌
type DeleteMemberBrandAttentionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids      []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	MemberId int64   `protobuf:"varint,2,opt,name=MemberId,proto3" json:"MemberId,omitempty"` //会员id
}

func (x *DeleteMemberBrandAttentionReq) Reset() {
	*x = DeleteMemberBrandAttentionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberBrandAttentionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberBrandAttentionReq) ProtoMessage() {}

func (x *DeleteMemberBrandAttentionReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberBrandAttentionReq.ProtoReflect.Descriptor instead.
func (*DeleteMemberBrandAttentionReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{28}
}

func (x *DeleteMemberBrandAttentionReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DeleteMemberBrandAttentionReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type DeleteMemberBrandAttentionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteMemberBrandAttentionResp) Reset() {
	*x = DeleteMemberBrandAttentionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberBrandAttentionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberBrandAttentionResp) ProtoMessage() {}

func (x *DeleteMemberBrandAttentionResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberBrandAttentionResp.ProtoReflect.Descriptor instead.
func (*DeleteMemberBrandAttentionResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteMemberBrandAttentionResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询会员关注品牌详情
type QueryMemberBrandAttentionDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryMemberBrandAttentionDetailReq) Reset() {
	*x = QueryMemberBrandAttentionDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberBrandAttentionDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberBrandAttentionDetailReq) ProtoMessage() {}

func (x *QueryMemberBrandAttentionDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberBrandAttentionDetailReq.ProtoReflect.Descriptor instead.
func (*QueryMemberBrandAttentionDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{30}
}

func (x *QueryMemberBrandAttentionDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryMemberBrandAttentionDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                //
	MemberId       int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                    //会员id
	MemberNickName string `protobuf:"bytes,3,opt,name=member_nick_name,json=memberNickName,proto3" json:"member_nick_name,omitempty"` //会员姓名
	MemberIcon     string `protobuf:"bytes,4,opt,name=member_icon,json=memberIcon,proto3" json:"member_icon,omitempty"`               //会员头像
	BrandId        int64  `protobuf:"varint,5,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`                       //品牌id
	BrandName      string `protobuf:"bytes,6,opt,name=brand_name,json=brandName,proto3" json:"brand_name,omitempty"`                  //品牌名称
	BrandLogo      string `protobuf:"bytes,7,opt,name=brand_logo,json=brandLogo,proto3" json:"brand_logo,omitempty"`                  //品牌Logo
	BrandCity      string `protobuf:"bytes,8,opt,name=brand_city,json=brandCity,proto3" json:"brand_city,omitempty"`                  //品牌所在城市
	CreateTime     string `protobuf:"bytes,9,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`               //关注时间
}

func (x *QueryMemberBrandAttentionDetailResp) Reset() {
	*x = QueryMemberBrandAttentionDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberBrandAttentionDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberBrandAttentionDetailResp) ProtoMessage() {}

func (x *QueryMemberBrandAttentionDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberBrandAttentionDetailResp.ProtoReflect.Descriptor instead.
func (*QueryMemberBrandAttentionDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{31}
}

func (x *QueryMemberBrandAttentionDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMemberBrandAttentionDetailResp) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryMemberBrandAttentionDetailResp) GetMemberNickName() string {
	if x != nil {
		return x.MemberNickName
	}
	return ""
}

func (x *QueryMemberBrandAttentionDetailResp) GetMemberIcon() string {
	if x != nil {
		return x.MemberIcon
	}
	return ""
}

func (x *QueryMemberBrandAttentionDetailResp) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *QueryMemberBrandAttentionDetailResp) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *QueryMemberBrandAttentionDetailResp) GetBrandLogo() string {
	if x != nil {
		return x.BrandLogo
	}
	return ""
}

func (x *QueryMemberBrandAttentionDetailResp) GetBrandCity() string {
	if x != nil {
		return x.BrandCity
	}
	return ""
}

func (x *QueryMemberBrandAttentionDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

// 分页查询会员关注品牌列表
type QueryMemberBrandAttentionListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId int64 `protobuf:"varint,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` //会员id
}

func (x *QueryMemberBrandAttentionListReq) Reset() {
	*x = QueryMemberBrandAttentionListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberBrandAttentionListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberBrandAttentionListReq) ProtoMessage() {}

func (x *QueryMemberBrandAttentionListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberBrandAttentionListReq.ProtoReflect.Descriptor instead.
func (*QueryMemberBrandAttentionListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{32}
}

func (x *QueryMemberBrandAttentionListReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type MemberBrandAttentionListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                //
	MemberId       int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                    //会员id
	MemberNickName string `protobuf:"bytes,3,opt,name=member_nick_name,json=memberNickName,proto3" json:"member_nick_name,omitempty"` //会员姓名
	MemberIcon     string `protobuf:"bytes,4,opt,name=member_icon,json=memberIcon,proto3" json:"member_icon,omitempty"`               //会员头像
	BrandId        int64  `protobuf:"varint,5,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`                       //品牌id
	BrandName      string `protobuf:"bytes,6,opt,name=brand_name,json=brandName,proto3" json:"brand_name,omitempty"`                  //品牌名称
	BrandLogo      string `protobuf:"bytes,7,opt,name=brand_logo,json=brandLogo,proto3" json:"brand_logo,omitempty"`                  //品牌Logo
	BrandCity      string `protobuf:"bytes,8,opt,name=brand_city,json=brandCity,proto3" json:"brand_city,omitempty"`                  //品牌所在城市
	CreateTime     string `protobuf:"bytes,9,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`               //关注时间
}

func (x *MemberBrandAttentionListData) Reset() {
	*x = MemberBrandAttentionListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberBrandAttentionListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberBrandAttentionListData) ProtoMessage() {}

func (x *MemberBrandAttentionListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberBrandAttentionListData.ProtoReflect.Descriptor instead.
func (*MemberBrandAttentionListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{33}
}

func (x *MemberBrandAttentionListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberBrandAttentionListData) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *MemberBrandAttentionListData) GetMemberNickName() string {
	if x != nil {
		return x.MemberNickName
	}
	return ""
}

func (x *MemberBrandAttentionListData) GetMemberIcon() string {
	if x != nil {
		return x.MemberIcon
	}
	return ""
}

func (x *MemberBrandAttentionListData) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *MemberBrandAttentionListData) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *MemberBrandAttentionListData) GetBrandLogo() string {
	if x != nil {
		return x.BrandLogo
	}
	return ""
}

func (x *MemberBrandAttentionListData) GetBrandCity() string {
	if x != nil {
		return x.BrandCity
	}
	return ""
}

func (x *MemberBrandAttentionListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

type QueryMemberBrandAttentionListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*MemberBrandAttentionListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryMemberBrandAttentionListResp) Reset() {
	*x = QueryMemberBrandAttentionListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberBrandAttentionListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberBrandAttentionListResp) ProtoMessage() {}

func (x *QueryMemberBrandAttentionListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberBrandAttentionListResp.ProtoReflect.Descriptor instead.
func (*QueryMemberBrandAttentionListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{34}
}

func (x *QueryMemberBrandAttentionListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryMemberBrandAttentionListResp) GetList() []*MemberBrandAttentionListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加会员成长值记录
type AddMemberGrowthLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                         //
	MemberId     int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`             //会员ID
	ChangeType   int32  `protobuf:"varint,3,opt,name=change_type,json=changeType,proto3" json:"change_type,omitempty"`       //变更类型：1-添加成长值，2-减少成长值
	ChangeGrowth int32  `protobuf:"varint,4,opt,name=change_growth,json=changeGrowth,proto3" json:"change_growth,omitempty"` //变更成长值
	SourceType   int32  `protobuf:"varint,5,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`       //来源类型：0-其他，1-订单，2-活动，3-签到，4-管理员修改
	Description  string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`                        //描述
	OperateMan   string `protobuf:"bytes,7,opt,name=operate_man,json=operateMan,proto3" json:"operate_man,omitempty"`        //操作人员
	OperateNote  string `protobuf:"bytes,8,opt,name=operate_note,json=operateNote,proto3" json:"operate_note,omitempty"`     //操作备注
}

func (x *AddMemberGrowthLogReq) Reset() {
	*x = AddMemberGrowthLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberGrowthLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberGrowthLogReq) ProtoMessage() {}

func (x *AddMemberGrowthLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberGrowthLogReq.ProtoReflect.Descriptor instead.
func (*AddMemberGrowthLogReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{35}
}

func (x *AddMemberGrowthLogReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddMemberGrowthLogReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *AddMemberGrowthLogReq) GetChangeType() int32 {
	if x != nil {
		return x.ChangeType
	}
	return 0
}

func (x *AddMemberGrowthLogReq) GetChangeGrowth() int32 {
	if x != nil {
		return x.ChangeGrowth
	}
	return 0
}

func (x *AddMemberGrowthLogReq) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *AddMemberGrowthLogReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddMemberGrowthLogReq) GetOperateMan() string {
	if x != nil {
		return x.OperateMan
	}
	return ""
}

func (x *AddMemberGrowthLogReq) GetOperateNote() string {
	if x != nil {
		return x.OperateNote
	}
	return ""
}

type AddMemberGrowthLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddMemberGrowthLogResp) Reset() {
	*x = AddMemberGrowthLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberGrowthLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberGrowthLogResp) ProtoMessage() {}

func (x *AddMemberGrowthLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberGrowthLogResp.ProtoReflect.Descriptor instead.
func (*AddMemberGrowthLogResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{36}
}

func (x *AddMemberGrowthLogResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询会员成长值记录详情
type QueryMemberGrowthLogDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryMemberGrowthLogDetailReq) Reset() {
	*x = QueryMemberGrowthLogDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberGrowthLogDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberGrowthLogDetailReq) ProtoMessage() {}

func (x *QueryMemberGrowthLogDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberGrowthLogDetailReq.ProtoReflect.Descriptor instead.
func (*QueryMemberGrowthLogDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{37}
}

func (x *QueryMemberGrowthLogDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryMemberGrowthLogDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                         //
	MemberId     int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`             //会员ID
	ChangeType   int32  `protobuf:"varint,3,opt,name=change_type,json=changeType,proto3" json:"change_type,omitempty"`       //变更类型：1-添加成长值，2-减少成长值
	ChangeGrowth int32  `protobuf:"varint,4,opt,name=change_growth,json=changeGrowth,proto3" json:"change_growth,omitempty"` //变更成长值
	SourceType   int32  `protobuf:"varint,5,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`       //来源类型：0-其他，1-订单，2-活动，3-签到，4-管理员修改
	Description  string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`                        //描述
	OperateMan   string `protobuf:"bytes,7,opt,name=operate_man,json=operateMan,proto3" json:"operate_man,omitempty"`        //操作人员
	OperateNote  string `protobuf:"bytes,8,opt,name=operate_note,json=operateNote,proto3" json:"operate_note,omitempty"`     //操作备注
	CreateTime   string `protobuf:"bytes,9,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`        //创建时间
}

func (x *QueryMemberGrowthLogDetailResp) Reset() {
	*x = QueryMemberGrowthLogDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberGrowthLogDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberGrowthLogDetailResp) ProtoMessage() {}

func (x *QueryMemberGrowthLogDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberGrowthLogDetailResp.ProtoReflect.Descriptor instead.
func (*QueryMemberGrowthLogDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{38}
}

func (x *QueryMemberGrowthLogDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMemberGrowthLogDetailResp) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryMemberGrowthLogDetailResp) GetChangeType() int32 {
	if x != nil {
		return x.ChangeType
	}
	return 0
}

func (x *QueryMemberGrowthLogDetailResp) GetChangeGrowth() int32 {
	if x != nil {
		return x.ChangeGrowth
	}
	return 0
}

func (x *QueryMemberGrowthLogDetailResp) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *QueryMemberGrowthLogDetailResp) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *QueryMemberGrowthLogDetailResp) GetOperateMan() string {
	if x != nil {
		return x.OperateMan
	}
	return ""
}

func (x *QueryMemberGrowthLogDetailResp) GetOperateNote() string {
	if x != nil {
		return x.OperateNote
	}
	return ""
}

func (x *QueryMemberGrowthLogDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

// 分页查询会员成长值记录列表
type QueryMemberGrowthLogListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId   int64 `protobuf:"varint,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`       //会员ID
	ChangeType int32 `protobuf:"varint,2,opt,name=change_type,json=changeType,proto3" json:"change_type,omitempty"` //变更类型：1-添加成长值，2-减少成长值
	SourceType int32 `protobuf:"varint,3,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"` //来源类型：0-其他，1-订单，2-活动，3-签到，4-管理员修改
	PageNum    int32 `protobuf:"varint,4,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`          //第几页
	PageSize   int32 `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`       //每页的数量
}

func (x *QueryMemberGrowthLogListReq) Reset() {
	*x = QueryMemberGrowthLogListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberGrowthLogListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberGrowthLogListReq) ProtoMessage() {}

func (x *QueryMemberGrowthLogListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberGrowthLogListReq.ProtoReflect.Descriptor instead.
func (*QueryMemberGrowthLogListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{39}
}

func (x *QueryMemberGrowthLogListReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryMemberGrowthLogListReq) GetChangeType() int32 {
	if x != nil {
		return x.ChangeType
	}
	return 0
}

func (x *QueryMemberGrowthLogListReq) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *QueryMemberGrowthLogListReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryMemberGrowthLogListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type MemberGrowthLogListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                         //
	MemberId     int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`             //会员ID
	ChangeType   int32  `protobuf:"varint,3,opt,name=change_type,json=changeType,proto3" json:"change_type,omitempty"`       //变更类型：1-添加成长值，2-减少成长值
	ChangeGrowth int32  `protobuf:"varint,4,opt,name=change_growth,json=changeGrowth,proto3" json:"change_growth,omitempty"` //变更成长值
	SourceType   int32  `protobuf:"varint,5,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`       //来源类型：0-其他，1-订单，2-活动，3-签到，4-管理员修改
	Description  string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`                        //描述
	OperateMan   string `protobuf:"bytes,7,opt,name=operate_man,json=operateMan,proto3" json:"operate_man,omitempty"`        //操作人员
	OperateNote  string `protobuf:"bytes,8,opt,name=operate_note,json=operateNote,proto3" json:"operate_note,omitempty"`     //操作备注
	CreateTime   string `protobuf:"bytes,9,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`        //创建时间
}

func (x *MemberGrowthLogListData) Reset() {
	*x = MemberGrowthLogListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberGrowthLogListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberGrowthLogListData) ProtoMessage() {}

func (x *MemberGrowthLogListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberGrowthLogListData.ProtoReflect.Descriptor instead.
func (*MemberGrowthLogListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{40}
}

func (x *MemberGrowthLogListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberGrowthLogListData) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *MemberGrowthLogListData) GetChangeType() int32 {
	if x != nil {
		return x.ChangeType
	}
	return 0
}

func (x *MemberGrowthLogListData) GetChangeGrowth() int32 {
	if x != nil {
		return x.ChangeGrowth
	}
	return 0
}

func (x *MemberGrowthLogListData) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *MemberGrowthLogListData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MemberGrowthLogListData) GetOperateMan() string {
	if x != nil {
		return x.OperateMan
	}
	return ""
}

func (x *MemberGrowthLogListData) GetOperateNote() string {
	if x != nil {
		return x.OperateNote
	}
	return ""
}

func (x *MemberGrowthLogListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

type QueryMemberGrowthLogListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                      `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*MemberGrowthLogListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryMemberGrowthLogListResp) Reset() {
	*x = QueryMemberGrowthLogListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberGrowthLogListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberGrowthLogListResp) ProtoMessage() {}

func (x *QueryMemberGrowthLogListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberGrowthLogListResp.ProtoReflect.Descriptor instead.
func (*QueryMemberGrowthLogListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{41}
}

func (x *QueryMemberGrowthLogListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryMemberGrowthLogListResp) GetList() []*MemberGrowthLogListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加会员信息
type RegisterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nickname string `protobuf:"bytes,1,opt,name=nickname,proto3" json:"nickname,omitempty"` //昵称
	Mobile   string `protobuf:"bytes,2,opt,name=mobile,proto3" json:"mobile,omitempty"`     //手机号码
	Source   int32  `protobuf:"varint,3,opt,name=source,proto3" json:"source,omitempty"`    //注册来源：0-PC，1-APP，2-小程序
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"` //密码
}

func (x *RegisterReq) Reset() {
	*x = RegisterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterReq) ProtoMessage() {}

func (x *RegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterReq.ProtoReflect.Descriptor instead.
func (*RegisterReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{42}
}

func (x *RegisterReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *RegisterReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *RegisterReq) GetSource() int32 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *RegisterReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type RegisterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *RegisterResp) Reset() {
	*x = RegisterResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResp) ProtoMessage() {}

func (x *RegisterResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResp.ProtoReflect.Descriptor instead.
func (*RegisterResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{43}
}

func (x *RegisterResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 删除会员信息
type DeleteMemberInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteMemberInfoReq) Reset() {
	*x = DeleteMemberInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberInfoReq) ProtoMessage() {}

func (x *DeleteMemberInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberInfoReq.ProtoReflect.Descriptor instead.
func (*DeleteMemberInfoReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{44}
}

func (x *DeleteMemberInfoReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteMemberInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteMemberInfoResp) Reset() {
	*x = DeleteMemberInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberInfoResp) ProtoMessage() {}

func (x *DeleteMemberInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberInfoResp.ProtoReflect.Descriptor instead.
func (*DeleteMemberInfoResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{45}
}

func (x *DeleteMemberInfoResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新会员信息
type UpdateMemberInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`              //主键ID
	Nickname  string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`   //昵称
	Mobile    string `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`       //手机号码
	Avatar    string `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`       //头像
	Signature string `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"` //个性签名
	Gender    int32  `protobuf:"varint,6,opt,name=gender,proto3" json:"gender,omitempty"`      //性别：0-未知，1-男，2-女
	Birthday  string `protobuf:"bytes,7,opt,name=birthday,proto3" json:"birthday,omitempty"`   //生日
}

func (x *UpdateMemberInfoReq) Reset() {
	*x = UpdateMemberInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberInfoReq) ProtoMessage() {}

func (x *UpdateMemberInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberInfoReq.ProtoReflect.Descriptor instead.
func (*UpdateMemberInfoReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{46}
}

func (x *UpdateMemberInfoReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateMemberInfoReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UpdateMemberInfoReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UpdateMemberInfoReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UpdateMemberInfoReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *UpdateMemberInfoReq) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *UpdateMemberInfoReq) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

type UpdateMemberInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateMemberInfoResp) Reset() {
	*x = UpdateMemberInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberInfoResp) ProtoMessage() {}

func (x *UpdateMemberInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberInfoResp.ProtoReflect.Descriptor instead.
func (*UpdateMemberInfoResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{47}
}

func (x *UpdateMemberInfoResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新会员信息状态
type UpdateMemberInfoStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids       []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`                        //主键ID
	IsEnabled int32   `protobuf:"varint,22,opt,name=is_enabled,json=isEnabled,proto3" json:"is_enabled,omitempty"` //是否启用：0-禁用，1-启用
}

func (x *UpdateMemberInfoStatusReq) Reset() {
	*x = UpdateMemberInfoStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberInfoStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberInfoStatusReq) ProtoMessage() {}

func (x *UpdateMemberInfoStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberInfoStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateMemberInfoStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{48}
}

func (x *UpdateMemberInfoStatusReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdateMemberInfoStatusReq) GetIsEnabled() int32 {
	if x != nil {
		return x.IsEnabled
	}
	return 0
}

type UpdateMemberInfoStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateMemberInfoStatusResp) Reset() {
	*x = UpdateMemberInfoStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberInfoStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberInfoStatusResp) ProtoMessage() {}

func (x *UpdateMemberInfoStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberInfoStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateMemberInfoStatusResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{49}
}

func (x *UpdateMemberInfoStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询会员信息详情
type QueryMemberInfoDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId int64 `protobuf:"varint,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` //会员ID
}

func (x *QueryMemberInfoDetailReq) Reset() {
	*x = QueryMemberInfoDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberInfoDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberInfoDetailReq) ProtoMessage() {}

func (x *QueryMemberInfoDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberInfoDetailReq.ProtoReflect.Descriptor instead.
func (*QueryMemberInfoDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{50}
}

func (x *QueryMemberInfoDetailReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type QueryMemberInfoDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                          //主键ID
	MemberId     int64   `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`              //会员ID
	LevelId      int64   `protobuf:"varint,3,opt,name=level_id,json=levelId,proto3" json:"level_id,omitempty"`                 //等级ID
	Nickname     string  `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`                               //昵称
	Mobile       string  `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile,omitempty"`                                   //手机号码
	Source       int32   `protobuf:"varint,6,opt,name=source,proto3" json:"source,omitempty"`                                  //注册来源：0-PC，1-APP，2-小程序
	Avatar       string  `protobuf:"bytes,8,opt,name=avatar,proto3" json:"avatar,omitempty"`                                   //头像
	Signature    string  `protobuf:"bytes,9,opt,name=signature,proto3" json:"signature,omitempty"`                             //个性签名
	Gender       int32   `protobuf:"varint,10,opt,name=gender,proto3" json:"gender,omitempty"`                                 //性别：0-未知，1-男，2-女
	Birthday     string  `protobuf:"bytes,11,opt,name=birthday,proto3" json:"birthday,omitempty"`                              //生日
	GrowthPoint  int32   `protobuf:"varint,12,opt,name=growth_point,json=growthPoint,proto3" json:"growth_point,omitempty"`    //成长值
	Points       int32   `protobuf:"varint,13,opt,name=points,proto3" json:"points,omitempty"`                                 //积分
	TotalPoints  int32   `protobuf:"varint,14,opt,name=total_points,json=totalPoints,proto3" json:"total_points,omitempty"`    //累计获得积分
	SpendAmount  float32 `protobuf:"fixed32,15,opt,name=spend_amount,json=spendAmount,proto3" json:"spend_amount,omitempty"`   //累计消费金额
	OrderCount   int32   `protobuf:"varint,16,opt,name=order_count,json=orderCount,proto3" json:"order_count,omitempty"`       //订单数
	CouponCount  int32   `protobuf:"varint,17,opt,name=coupon_count,json=couponCount,proto3" json:"coupon_count,omitempty"`    //优惠券数量
	CommentCount int32   `protobuf:"varint,18,opt,name=comment_count,json=commentCount,proto3" json:"comment_count,omitempty"` //评价数
	ReturnCount  int32   `protobuf:"varint,19,opt,name=return_count,json=returnCount,proto3" json:"return_count,omitempty"`    //退货数
	LotteryTimes int32   `protobuf:"varint,20,opt,name=lottery_times,json=lotteryTimes,proto3" json:"lottery_times,omitempty"` //剩余抽奖次数
	LastLogin    string  `protobuf:"bytes,21,opt,name=last_login,json=lastLogin,proto3" json:"last_login,omitempty"`           //最后登录
	IsEnabled    int32   `protobuf:"varint,22,opt,name=is_enabled,json=isEnabled,proto3" json:"is_enabled,omitempty"`          //是否启用：0-禁用，1-启用
	CreateTime   string  `protobuf:"bytes,23,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`        //创建时间
	UpdateTime   string  `protobuf:"bytes,24,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`        //更新时间
}

func (x *QueryMemberInfoDetailResp) Reset() {
	*x = QueryMemberInfoDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberInfoDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberInfoDetailResp) ProtoMessage() {}

func (x *QueryMemberInfoDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberInfoDetailResp.ProtoReflect.Descriptor instead.
func (*QueryMemberInfoDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{51}
}

func (x *QueryMemberInfoDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMemberInfoDetailResp) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryMemberInfoDetailResp) GetLevelId() int64 {
	if x != nil {
		return x.LevelId
	}
	return 0
}

func (x *QueryMemberInfoDetailResp) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *QueryMemberInfoDetailResp) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *QueryMemberInfoDetailResp) GetSource() int32 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *QueryMemberInfoDetailResp) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *QueryMemberInfoDetailResp) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *QueryMemberInfoDetailResp) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *QueryMemberInfoDetailResp) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *QueryMemberInfoDetailResp) GetGrowthPoint() int32 {
	if x != nil {
		return x.GrowthPoint
	}
	return 0
}

func (x *QueryMemberInfoDetailResp) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *QueryMemberInfoDetailResp) GetTotalPoints() int32 {
	if x != nil {
		return x.TotalPoints
	}
	return 0
}

func (x *QueryMemberInfoDetailResp) GetSpendAmount() float32 {
	if x != nil {
		return x.SpendAmount
	}
	return 0
}

func (x *QueryMemberInfoDetailResp) GetOrderCount() int32 {
	if x != nil {
		return x.OrderCount
	}
	return 0
}

func (x *QueryMemberInfoDetailResp) GetCouponCount() int32 {
	if x != nil {
		return x.CouponCount
	}
	return 0
}

func (x *QueryMemberInfoDetailResp) GetCommentCount() int32 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *QueryMemberInfoDetailResp) GetReturnCount() int32 {
	if x != nil {
		return x.ReturnCount
	}
	return 0
}

func (x *QueryMemberInfoDetailResp) GetLotteryTimes() int32 {
	if x != nil {
		return x.LotteryTimes
	}
	return 0
}

func (x *QueryMemberInfoDetailResp) GetLastLogin() string {
	if x != nil {
		return x.LastLogin
	}
	return ""
}

func (x *QueryMemberInfoDetailResp) GetIsEnabled() int32 {
	if x != nil {
		return x.IsEnabled
	}
	return 0
}

func (x *QueryMemberInfoDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryMemberInfoDetailResp) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 分页查询会员信息列表
type QueryMemberInfoListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId  int64  `protobuf:"varint,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`    //会员ID
	Nickname  string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`                     //昵称
	Mobile    string `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`                         //手机号码
	Source    int32  `protobuf:"varint,4,opt,name=source,proto3" json:"source,omitempty"`                        //注册来源：0-PC，1-APP，2-小程序
	IsEnabled int32  `protobuf:"varint,5,opt,name=is_enabled,json=isEnabled,proto3" json:"is_enabled,omitempty"` //是否启用：0-禁用，1-启用
	PageNum   int32  `protobuf:"varint,6,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`       //第几页
	PageSize  int32  `protobuf:"varint,7,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`    //每页的数量
}

func (x *QueryMemberInfoListReq) Reset() {
	*x = QueryMemberInfoListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberInfoListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberInfoListReq) ProtoMessage() {}

func (x *QueryMemberInfoListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberInfoListReq.ProtoReflect.Descriptor instead.
func (*QueryMemberInfoListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{52}
}

func (x *QueryMemberInfoListReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryMemberInfoListReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *QueryMemberInfoListReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *QueryMemberInfoListReq) GetSource() int32 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *QueryMemberInfoListReq) GetIsEnabled() int32 {
	if x != nil {
		return x.IsEnabled
	}
	return 0
}

func (x *QueryMemberInfoListReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryMemberInfoListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type MemberInfoListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                          //主键ID
	MemberId     int64   `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`              //会员ID
	LevelId      int64   `protobuf:"varint,3,opt,name=level_id,json=levelId,proto3" json:"level_id,omitempty"`                 //等级ID
	Nickname     string  `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`                               //昵称
	Mobile       string  `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile,omitempty"`                                   //手机号码
	Source       int32   `protobuf:"varint,6,opt,name=source,proto3" json:"source,omitempty"`                                  //注册来源：0-PC，1-APP，2-小程序
	Avatar       string  `protobuf:"bytes,8,opt,name=avatar,proto3" json:"avatar,omitempty"`                                   //头像
	Signature    string  `protobuf:"bytes,9,opt,name=signature,proto3" json:"signature,omitempty"`                             //个性签名
	Gender       int32   `protobuf:"varint,10,opt,name=gender,proto3" json:"gender,omitempty"`                                 //性别：0-未知，1-男，2-女
	Birthday     string  `protobuf:"bytes,11,opt,name=birthday,proto3" json:"birthday,omitempty"`                              //生日
	GrowthPoint  int32   `protobuf:"varint,12,opt,name=growth_point,json=growthPoint,proto3" json:"growth_point,omitempty"`    //成长值
	Points       int32   `protobuf:"varint,13,opt,name=points,proto3" json:"points,omitempty"`                                 //积分
	TotalPoints  int32   `protobuf:"varint,14,opt,name=total_points,json=totalPoints,proto3" json:"total_points,omitempty"`    //累计获得积分
	SpendAmount  float32 `protobuf:"fixed32,15,opt,name=spend_amount,json=spendAmount,proto3" json:"spend_amount,omitempty"`   //累计消费金额
	OrderCount   int32   `protobuf:"varint,16,opt,name=order_count,json=orderCount,proto3" json:"order_count,omitempty"`       //订单数
	CouponCount  int32   `protobuf:"varint,17,opt,name=coupon_count,json=couponCount,proto3" json:"coupon_count,omitempty"`    //优惠券数量
	CommentCount int32   `protobuf:"varint,18,opt,name=comment_count,json=commentCount,proto3" json:"comment_count,omitempty"` //评价数
	ReturnCount  int32   `protobuf:"varint,19,opt,name=return_count,json=returnCount,proto3" json:"return_count,omitempty"`    //退货数
	LotteryTimes int32   `protobuf:"varint,20,opt,name=lottery_times,json=lotteryTimes,proto3" json:"lottery_times,omitempty"` //剩余抽奖次数
	LastLogin    string  `protobuf:"bytes,21,opt,name=last_login,json=lastLogin,proto3" json:"last_login,omitempty"`           //最后登录
	IsEnabled    int32   `protobuf:"varint,22,opt,name=is_enabled,json=isEnabled,proto3" json:"is_enabled,omitempty"`          //是否启用：0-禁用，1-启用
	CreateTime   string  `protobuf:"bytes,23,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`        //创建时间
	UpdateTime   string  `protobuf:"bytes,24,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`        //更新时间
}

func (x *MemberInfoListData) Reset() {
	*x = MemberInfoListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberInfoListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberInfoListData) ProtoMessage() {}

func (x *MemberInfoListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberInfoListData.ProtoReflect.Descriptor instead.
func (*MemberInfoListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{53}
}

func (x *MemberInfoListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberInfoListData) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *MemberInfoListData) GetLevelId() int64 {
	if x != nil {
		return x.LevelId
	}
	return 0
}

func (x *MemberInfoListData) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *MemberInfoListData) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *MemberInfoListData) GetSource() int32 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *MemberInfoListData) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *MemberInfoListData) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *MemberInfoListData) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *MemberInfoListData) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *MemberInfoListData) GetGrowthPoint() int32 {
	if x != nil {
		return x.GrowthPoint
	}
	return 0
}

func (x *MemberInfoListData) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *MemberInfoListData) GetTotalPoints() int32 {
	if x != nil {
		return x.TotalPoints
	}
	return 0
}

func (x *MemberInfoListData) GetSpendAmount() float32 {
	if x != nil {
		return x.SpendAmount
	}
	return 0
}

func (x *MemberInfoListData) GetOrderCount() int32 {
	if x != nil {
		return x.OrderCount
	}
	return 0
}

func (x *MemberInfoListData) GetCouponCount() int32 {
	if x != nil {
		return x.CouponCount
	}
	return 0
}

func (x *MemberInfoListData) GetCommentCount() int32 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *MemberInfoListData) GetReturnCount() int32 {
	if x != nil {
		return x.ReturnCount
	}
	return 0
}

func (x *MemberInfoListData) GetLotteryTimes() int32 {
	if x != nil {
		return x.LotteryTimes
	}
	return 0
}

func (x *MemberInfoListData) GetLastLogin() string {
	if x != nil {
		return x.LastLogin
	}
	return ""
}

func (x *MemberInfoListData) GetIsEnabled() int32 {
	if x != nil {
		return x.IsEnabled
	}
	return 0
}

func (x *MemberInfoListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *MemberInfoListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type QueryMemberInfoListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*MemberInfoListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryMemberInfoListResp) Reset() {
	*x = QueryMemberInfoListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberInfoListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberInfoListResp) ProtoMessage() {}

func (x *QueryMemberInfoListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberInfoListResp.ProtoReflect.Descriptor instead.
func (*QueryMemberInfoListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{54}
}

func (x *QueryMemberInfoListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryMemberInfoListResp) GetList() []*MemberInfoListData {
	if x != nil {
		return x.List
	}
	return nil
}

type LoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mobile   string `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"`     //手机号码
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` //密码
	Ip       string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`             //登录IP
	Source   int32  `protobuf:"varint,4,opt,name=source,proto3" json:"source,omitempty"`    //登录来源：0-PC，1-APP，2-小程序
}

func (x *LoginReq) Reset() {
	*x = LoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReq) ProtoMessage() {}

func (x *LoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReq.ProtoReflect.Descriptor instead.
func (*LoginReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{55}
}

func (x *LoginReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *LoginReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *LoginReq) GetSource() int32 {
	if x != nil {
		return x.Source
	}
	return 0
}

type LoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
}

func (x *LoginResp) Reset() {
	*x = LoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResp) ProtoMessage() {}

func (x *LoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResp.ProtoReflect.Descriptor instead.
func (*LoginResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{56}
}

func (x *LoginResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type UpdateMemberPointsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId int64 `protobuf:"varint,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` //会员ID
	Points   int32 `protobuf:"varint,2,opt,name=points,proto3" json:"points,omitempty"`                     //积分
}

func (x *UpdateMemberPointsReq) Reset() {
	*x = UpdateMemberPointsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberPointsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberPointsReq) ProtoMessage() {}

func (x *UpdateMemberPointsReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberPointsReq.ProtoReflect.Descriptor instead.
func (*UpdateMemberPointsReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{57}
}

func (x *UpdateMemberPointsReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *UpdateMemberPointsReq) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

type UpdateMemberPointsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateMemberPointsResp) Reset() {
	*x = UpdateMemberPointsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberPointsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberPointsResp) ProtoMessage() {}

func (x *UpdateMemberPointsResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberPointsResp.ProtoReflect.Descriptor instead.
func (*UpdateMemberPointsResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{58}
}

func (x *UpdateMemberPointsResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 添加会员等级
type AddMemberLevelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                          //主键ID
	Name         string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                       //等级名称
	Level        int32   `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`                                    //等级
	GrowthPoint  int32   `protobuf:"varint,4,opt,name=growth_point,json=growthPoint,proto3" json:"growth_point,omitempty"`     //升级所需成长值
	DiscountRate float32 `protobuf:"fixed32,5,opt,name=discount_rate,json=discountRate,proto3" json:"discount_rate,omitempty"` //折扣率(0-100)
	FreeFreight  int32   `protobuf:"varint,6,opt,name=free_freight,json=freeFreight,proto3" json:"free_freight,omitempty"`     //是否免运费
	CommentExtra int32   `protobuf:"varint,7,opt,name=comment_extra,json=commentExtra,proto3" json:"comment_extra,omitempty"`  //是否可评论获取奖励
	Privileges   string  `protobuf:"bytes,8,opt,name=privileges,proto3" json:"privileges,omitempty"`                           //会员特权JSON
	Remark       string  `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`                                   //备注
	IsEnabled    int32   `protobuf:"varint,10,opt,name=is_enabled,json=isEnabled,proto3" json:"is_enabled,omitempty"`          //是否启用
	CreateBy     int64   `protobuf:"varint,13,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`             //创建人ID
}

func (x *AddMemberLevelReq) Reset() {
	*x = AddMemberLevelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberLevelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberLevelReq) ProtoMessage() {}

func (x *AddMemberLevelReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberLevelReq.ProtoReflect.Descriptor instead.
func (*AddMemberLevelReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{59}
}

func (x *AddMemberLevelReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddMemberLevelReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddMemberLevelReq) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *AddMemberLevelReq) GetGrowthPoint() int32 {
	if x != nil {
		return x.GrowthPoint
	}
	return 0
}

func (x *AddMemberLevelReq) GetDiscountRate() float32 {
	if x != nil {
		return x.DiscountRate
	}
	return 0
}

func (x *AddMemberLevelReq) GetFreeFreight() int32 {
	if x != nil {
		return x.FreeFreight
	}
	return 0
}

func (x *AddMemberLevelReq) GetCommentExtra() int32 {
	if x != nil {
		return x.CommentExtra
	}
	return 0
}

func (x *AddMemberLevelReq) GetPrivileges() string {
	if x != nil {
		return x.Privileges
	}
	return ""
}

func (x *AddMemberLevelReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AddMemberLevelReq) GetIsEnabled() int32 {
	if x != nil {
		return x.IsEnabled
	}
	return 0
}

func (x *AddMemberLevelReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

type AddMemberLevelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddMemberLevelResp) Reset() {
	*x = AddMemberLevelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberLevelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberLevelResp) ProtoMessage() {}

func (x *AddMemberLevelResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberLevelResp.ProtoReflect.Descriptor instead.
func (*AddMemberLevelResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{60}
}

func (x *AddMemberLevelResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除会员等级
type DeleteMemberLevelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteMemberLevelReq) Reset() {
	*x = DeleteMemberLevelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberLevelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberLevelReq) ProtoMessage() {}

func (x *DeleteMemberLevelReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberLevelReq.ProtoReflect.Descriptor instead.
func (*DeleteMemberLevelReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{61}
}

func (x *DeleteMemberLevelReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteMemberLevelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteMemberLevelResp) Reset() {
	*x = DeleteMemberLevelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberLevelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberLevelResp) ProtoMessage() {}

func (x *DeleteMemberLevelResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberLevelResp.ProtoReflect.Descriptor instead.
func (*DeleteMemberLevelResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{62}
}

func (x *DeleteMemberLevelResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新会员等级
type UpdateMemberLevelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                          //主键ID
	Name         string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                       //等级名称
	Level        int32   `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`                                    //等级
	GrowthPoint  int32   `protobuf:"varint,4,opt,name=growth_point,json=growthPoint,proto3" json:"growth_point,omitempty"`     //升级所需成长值
	DiscountRate float32 `protobuf:"fixed32,5,opt,name=discount_rate,json=discountRate,proto3" json:"discount_rate,omitempty"` //折扣率(0-100)
	FreeFreight  int32   `protobuf:"varint,6,opt,name=free_freight,json=freeFreight,proto3" json:"free_freight,omitempty"`     //是否免运费
	CommentExtra int32   `protobuf:"varint,7,opt,name=comment_extra,json=commentExtra,proto3" json:"comment_extra,omitempty"`  //是否可评论获取奖励
	Privileges   string  `protobuf:"bytes,8,opt,name=privileges,proto3" json:"privileges,omitempty"`                           //会员特权JSON
	Remark       string  `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`                                   //备注
	IsEnabled    int32   `protobuf:"varint,10,opt,name=is_enabled,json=isEnabled,proto3" json:"is_enabled,omitempty"`          //是否启用
	UpdateBy     int64   `protobuf:"varint,14,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`             //更新人ID
}

func (x *UpdateMemberLevelReq) Reset() {
	*x = UpdateMemberLevelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberLevelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberLevelReq) ProtoMessage() {}

func (x *UpdateMemberLevelReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberLevelReq.ProtoReflect.Descriptor instead.
func (*UpdateMemberLevelReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{63}
}

func (x *UpdateMemberLevelReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateMemberLevelReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateMemberLevelReq) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *UpdateMemberLevelReq) GetGrowthPoint() int32 {
	if x != nil {
		return x.GrowthPoint
	}
	return 0
}

func (x *UpdateMemberLevelReq) GetDiscountRate() float32 {
	if x != nil {
		return x.DiscountRate
	}
	return 0
}

func (x *UpdateMemberLevelReq) GetFreeFreight() int32 {
	if x != nil {
		return x.FreeFreight
	}
	return 0
}

func (x *UpdateMemberLevelReq) GetCommentExtra() int32 {
	if x != nil {
		return x.CommentExtra
	}
	return 0
}

func (x *UpdateMemberLevelReq) GetPrivileges() string {
	if x != nil {
		return x.Privileges
	}
	return ""
}

func (x *UpdateMemberLevelReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UpdateMemberLevelReq) GetIsEnabled() int32 {
	if x != nil {
		return x.IsEnabled
	}
	return 0
}

func (x *UpdateMemberLevelReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

type UpdateMemberLevelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateMemberLevelResp) Reset() {
	*x = UpdateMemberLevelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberLevelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberLevelResp) ProtoMessage() {}

func (x *UpdateMemberLevelResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberLevelResp.ProtoReflect.Descriptor instead.
func (*UpdateMemberLevelResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{64}
}

func (x *UpdateMemberLevelResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新会员等级状态
type UpdateMemberLevelStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                //主键ID
	IsEnabled int32 `protobuf:"varint,2,opt,name=is_enabled,json=isEnabled,proto3" json:"is_enabled,omitempty"` //是否启用
}

func (x *UpdateMemberLevelStatusReq) Reset() {
	*x = UpdateMemberLevelStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberLevelStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberLevelStatusReq) ProtoMessage() {}

func (x *UpdateMemberLevelStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberLevelStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateMemberLevelStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{65}
}

func (x *UpdateMemberLevelStatusReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateMemberLevelStatusReq) GetIsEnabled() int32 {
	if x != nil {
		return x.IsEnabled
	}
	return 0
}

type UpdateMemberLevelStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateMemberLevelStatusResp) Reset() {
	*x = UpdateMemberLevelStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberLevelStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberLevelStatusResp) ProtoMessage() {}

func (x *UpdateMemberLevelStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberLevelStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateMemberLevelStatusResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{66}
}

func (x *UpdateMemberLevelStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询会员等级详情
type QueryMemberLevelDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //等级id
}

func (x *QueryMemberLevelDetailReq) Reset() {
	*x = QueryMemberLevelDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberLevelDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberLevelDetailReq) ProtoMessage() {}

func (x *QueryMemberLevelDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberLevelDetailReq.ProtoReflect.Descriptor instead.
func (*QueryMemberLevelDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{67}
}

func (x *QueryMemberLevelDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryMemberLevelDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                          //主键ID
	Name         string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                       //等级名称
	Level        int32   `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`                                    //等级
	GrowthPoint  int32   `protobuf:"varint,4,opt,name=growth_point,json=growthPoint,proto3" json:"growth_point,omitempty"`     //升级所需成长值
	DiscountRate float32 `protobuf:"fixed32,5,opt,name=discount_rate,json=discountRate,proto3" json:"discount_rate,omitempty"` //折扣率(0-100)
	FreeFreight  int32   `protobuf:"varint,6,opt,name=free_freight,json=freeFreight,proto3" json:"free_freight,omitempty"`     //是否免运费
	CommentExtra int32   `protobuf:"varint,7,opt,name=comment_extra,json=commentExtra,proto3" json:"comment_extra,omitempty"`  //是否可评论获取奖励
	Privileges   string  `protobuf:"bytes,8,opt,name=privileges,proto3" json:"privileges,omitempty"`                           //会员特权JSON
	Remark       string  `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`                                   //备注
	IsEnabled    int32   `protobuf:"varint,10,opt,name=is_enabled,json=isEnabled,proto3" json:"is_enabled,omitempty"`          //是否启用
	CreateBy     int64   `protobuf:"varint,11,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`             //创建人ID
	CreateTime   string  `protobuf:"bytes,12,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`        //创建时间
	UpdateBy     int64   `protobuf:"varint,13,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`             //更新人ID
	UpdateTime   string  `protobuf:"bytes,14,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`        //更新时间
	IsDeleted    int32   `protobuf:"varint,15,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`          //是否删除
}

func (x *QueryMemberLevelDetailResp) Reset() {
	*x = QueryMemberLevelDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberLevelDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberLevelDetailResp) ProtoMessage() {}

func (x *QueryMemberLevelDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberLevelDetailResp.ProtoReflect.Descriptor instead.
func (*QueryMemberLevelDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{68}
}

func (x *QueryMemberLevelDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMemberLevelDetailResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryMemberLevelDetailResp) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *QueryMemberLevelDetailResp) GetGrowthPoint() int32 {
	if x != nil {
		return x.GrowthPoint
	}
	return 0
}

func (x *QueryMemberLevelDetailResp) GetDiscountRate() float32 {
	if x != nil {
		return x.DiscountRate
	}
	return 0
}

func (x *QueryMemberLevelDetailResp) GetFreeFreight() int32 {
	if x != nil {
		return x.FreeFreight
	}
	return 0
}

func (x *QueryMemberLevelDetailResp) GetCommentExtra() int32 {
	if x != nil {
		return x.CommentExtra
	}
	return 0
}

func (x *QueryMemberLevelDetailResp) GetPrivileges() string {
	if x != nil {
		return x.Privileges
	}
	return ""
}

func (x *QueryMemberLevelDetailResp) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *QueryMemberLevelDetailResp) GetIsEnabled() int32 {
	if x != nil {
		return x.IsEnabled
	}
	return 0
}

func (x *QueryMemberLevelDetailResp) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *QueryMemberLevelDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryMemberLevelDetailResp) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *QueryMemberLevelDetailResp) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *QueryMemberLevelDetailResp) GetIsDeleted() int32 {
	if x != nil {
		return x.IsDeleted
	}
	return 0
}

// 分页查询会员等级列表
type QueryMemberLevelListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                          //等级名称
	PageNum  int64  `protobuf:"varint,2,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`    //第几页
	PageSize int64  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` //每页的数量
}

func (x *QueryMemberLevelListReq) Reset() {
	*x = QueryMemberLevelListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberLevelListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberLevelListReq) ProtoMessage() {}

func (x *QueryMemberLevelListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberLevelListReq.ProtoReflect.Descriptor instead.
func (*QueryMemberLevelListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{69}
}

func (x *QueryMemberLevelListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryMemberLevelListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryMemberLevelListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type MemberLevelListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                          //主键ID
	Name         string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                       //等级名称
	Level        int32   `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`                                    //等级
	GrowthPoint  int32   `protobuf:"varint,4,opt,name=growth_point,json=growthPoint,proto3" json:"growth_point,omitempty"`     //升级所需成长值
	DiscountRate float32 `protobuf:"fixed32,5,opt,name=discount_rate,json=discountRate,proto3" json:"discount_rate,omitempty"` //折扣率(0-100)
	FreeFreight  int32   `protobuf:"varint,6,opt,name=free_freight,json=freeFreight,proto3" json:"free_freight,omitempty"`     //是否免运费
	CommentExtra int32   `protobuf:"varint,7,opt,name=comment_extra,json=commentExtra,proto3" json:"comment_extra,omitempty"`  //是否可评论获取奖励
	Privileges   string  `protobuf:"bytes,8,opt,name=privileges,proto3" json:"privileges,omitempty"`                           //会员特权JSON
	Remark       string  `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`                                   //备注
	IsEnabled    int32   `protobuf:"varint,10,opt,name=is_enabled,json=isEnabled,proto3" json:"is_enabled,omitempty"`          //是否启用
	CreateBy     int64   `protobuf:"varint,11,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`             //创建人ID
	CreateTime   string  `protobuf:"bytes,12,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`        //创建时间
	UpdateBy     int64   `protobuf:"varint,13,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`             //更新人ID
	UpdateTime   string  `protobuf:"bytes,14,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`        //更新时间
	IsDeleted    int32   `protobuf:"varint,15,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`          //是否删除
}

func (x *MemberLevelListData) Reset() {
	*x = MemberLevelListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberLevelListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberLevelListData) ProtoMessage() {}

func (x *MemberLevelListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberLevelListData.ProtoReflect.Descriptor instead.
func (*MemberLevelListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{70}
}

func (x *MemberLevelListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberLevelListData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MemberLevelListData) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *MemberLevelListData) GetGrowthPoint() int32 {
	if x != nil {
		return x.GrowthPoint
	}
	return 0
}

func (x *MemberLevelListData) GetDiscountRate() float32 {
	if x != nil {
		return x.DiscountRate
	}
	return 0
}

func (x *MemberLevelListData) GetFreeFreight() int32 {
	if x != nil {
		return x.FreeFreight
	}
	return 0
}

func (x *MemberLevelListData) GetCommentExtra() int32 {
	if x != nil {
		return x.CommentExtra
	}
	return 0
}

func (x *MemberLevelListData) GetPrivileges() string {
	if x != nil {
		return x.Privileges
	}
	return ""
}

func (x *MemberLevelListData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *MemberLevelListData) GetIsEnabled() int32 {
	if x != nil {
		return x.IsEnabled
	}
	return 0
}

func (x *MemberLevelListData) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *MemberLevelListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *MemberLevelListData) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *MemberLevelListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *MemberLevelListData) GetIsDeleted() int32 {
	if x != nil {
		return x.IsDeleted
	}
	return 0
}

type QueryMemberLevelListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*MemberLevelListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryMemberLevelListResp) Reset() {
	*x = QueryMemberLevelListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberLevelListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberLevelListResp) ProtoMessage() {}

func (x *QueryMemberLevelListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberLevelListResp.ProtoReflect.Descriptor instead.
func (*QueryMemberLevelListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{71}
}

func (x *QueryMemberLevelListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryMemberLevelListResp) GetList() []*MemberLevelListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 删除会员登录记录
type DeleteMemberLoginLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids      []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	MemberId int64   `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` //会员id
}

func (x *DeleteMemberLoginLogReq) Reset() {
	*x = DeleteMemberLoginLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberLoginLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberLoginLogReq) ProtoMessage() {}

func (x *DeleteMemberLoginLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberLoginLogReq.ProtoReflect.Descriptor instead.
func (*DeleteMemberLoginLogReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{72}
}

func (x *DeleteMemberLoginLogReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DeleteMemberLoginLogReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type DeleteMemberLoginLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteMemberLoginLogResp) Reset() {
	*x = DeleteMemberLoginLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberLoginLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberLoginLogResp) ProtoMessage() {}

func (x *DeleteMemberLoginLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberLoginLogResp.ProtoReflect.Descriptor instead.
func (*DeleteMemberLoginLogResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{73}
}

func (x *DeleteMemberLoginLogResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 分页查询会员登录记录列表
type QueryMemberLoginLogListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum   int64 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`       //第几页
	PageSize  int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`    //每页的数量
	LoginType int32 `protobuf:"varint,3,opt,name=login_type,json=loginType,proto3" json:"login_type,omitempty"` //登录类型：0->PC；1->android;2->ios;3->小程序
	MemberId  int64 `protobuf:"varint,4,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`    //会员id
}

func (x *QueryMemberLoginLogListReq) Reset() {
	*x = QueryMemberLoginLogListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberLoginLogListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberLoginLogListReq) ProtoMessage() {}

func (x *QueryMemberLoginLogListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberLoginLogListReq.ProtoReflect.Descriptor instead.
func (*QueryMemberLoginLogListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{74}
}

func (x *QueryMemberLoginLogListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryMemberLoginLogListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryMemberLoginLogListReq) GetLoginType() int32 {
	if x != nil {
		return x.LoginType
	}
	return 0
}

func (x *QueryMemberLoginLogListReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type MemberLoginLogListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                  //
	MemberId   int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`      //会员id
	MemberIp   string `protobuf:"bytes,3,opt,name=member_ip,json=memberIp,proto3" json:"member_ip,omitempty"`       //登录ip
	City       string `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`                               //登录城市
	LoginType  int32  `protobuf:"varint,5,opt,name=login_type,json=loginType,proto3" json:"login_type,omitempty"`   //登录类型：0->PC；1->android;2->ios;3->小程序
	Province   string `protobuf:"bytes,6,opt,name=province,proto3" json:"province,omitempty"`                       //登录省份
	CreateTime string `protobuf:"bytes,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` //登录时间
}

func (x *MemberLoginLogListData) Reset() {
	*x = MemberLoginLogListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberLoginLogListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberLoginLogListData) ProtoMessage() {}

func (x *MemberLoginLogListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberLoginLogListData.ProtoReflect.Descriptor instead.
func (*MemberLoginLogListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{75}
}

func (x *MemberLoginLogListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberLoginLogListData) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *MemberLoginLogListData) GetMemberIp() string {
	if x != nil {
		return x.MemberIp
	}
	return ""
}

func (x *MemberLoginLogListData) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *MemberLoginLogListData) GetLoginType() int32 {
	if x != nil {
		return x.LoginType
	}
	return 0
}

func (x *MemberLoginLogListData) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *MemberLoginLogListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

type QueryMemberLoginLogListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                     `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*MemberLoginLogListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryMemberLoginLogListResp) Reset() {
	*x = QueryMemberLoginLogListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberLoginLogListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberLoginLogListResp) ProtoMessage() {}

func (x *QueryMemberLoginLogListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberLoginLogListResp.ProtoReflect.Descriptor instead.
func (*QueryMemberLoginLogListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{76}
}

func (x *QueryMemberLoginLogListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryMemberLoginLogListResp) GetList() []*MemberLoginLogListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加会员积分记录
type AddMemberPointsLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                         //
	MemberId     int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`             //会员ID
	ChangeType   int32  `protobuf:"varint,3,opt,name=change_type,json=changeType,proto3" json:"change_type,omitempty"`       //变更类型：1-添加积分，2-减少积分
	ChangePoints int32  `protobuf:"varint,4,opt,name=change_points,json=changePoints,proto3" json:"change_points,omitempty"` //变更积分
	SourceType   int32  `protobuf:"varint,5,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`       //来源类型：0-其他，1-订单，2-活动，3-签到，4-管理员修改
	Description  string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`                        //描述
	OperateMan   string `protobuf:"bytes,7,opt,name=operate_man,json=operateMan,proto3" json:"operate_man,omitempty"`        //操作人员
	OperateNote  string `protobuf:"bytes,8,opt,name=operate_note,json=operateNote,proto3" json:"operate_note,omitempty"`     //操作备注
}

func (x *AddMemberPointsLogReq) Reset() {
	*x = AddMemberPointsLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberPointsLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberPointsLogReq) ProtoMessage() {}

func (x *AddMemberPointsLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberPointsLogReq.ProtoReflect.Descriptor instead.
func (*AddMemberPointsLogReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{77}
}

func (x *AddMemberPointsLogReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddMemberPointsLogReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *AddMemberPointsLogReq) GetChangeType() int32 {
	if x != nil {
		return x.ChangeType
	}
	return 0
}

func (x *AddMemberPointsLogReq) GetChangePoints() int32 {
	if x != nil {
		return x.ChangePoints
	}
	return 0
}

func (x *AddMemberPointsLogReq) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *AddMemberPointsLogReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddMemberPointsLogReq) GetOperateMan() string {
	if x != nil {
		return x.OperateMan
	}
	return ""
}

func (x *AddMemberPointsLogReq) GetOperateNote() string {
	if x != nil {
		return x.OperateNote
	}
	return ""
}

type AddMemberPointsLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddMemberPointsLogResp) Reset() {
	*x = AddMemberPointsLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberPointsLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberPointsLogResp) ProtoMessage() {}

func (x *AddMemberPointsLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberPointsLogResp.ProtoReflect.Descriptor instead.
func (*AddMemberPointsLogResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{78}
}

func (x *AddMemberPointsLogResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询会员积分记录详情
type QueryMemberPointsLogDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryMemberPointsLogDetailReq) Reset() {
	*x = QueryMemberPointsLogDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberPointsLogDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberPointsLogDetailReq) ProtoMessage() {}

func (x *QueryMemberPointsLogDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberPointsLogDetailReq.ProtoReflect.Descriptor instead.
func (*QueryMemberPointsLogDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{79}
}

func (x *QueryMemberPointsLogDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryMemberPointsLogDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                         //
	MemberId     int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`             //会员ID
	ChangeType   int32  `protobuf:"varint,3,opt,name=change_type,json=changeType,proto3" json:"change_type,omitempty"`       //变更类型：1-添加积分，2-减少积分
	ChangePoints int32  `protobuf:"varint,4,opt,name=change_points,json=changePoints,proto3" json:"change_points,omitempty"` //变更积分
	SourceType   int32  `protobuf:"varint,5,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`       //来源类型：0-其他，1-订单，2-活动，3-签到，4-管理员修改
	Description  string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`                        //描述
	OperateMan   string `protobuf:"bytes,7,opt,name=operate_man,json=operateMan,proto3" json:"operate_man,omitempty"`        //操作人员
	OperateNote  string `protobuf:"bytes,8,opt,name=operate_note,json=operateNote,proto3" json:"operate_note,omitempty"`     //操作备注
	CreateTime   string `protobuf:"bytes,9,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`        //创建时间
}

func (x *QueryMemberPointsLogDetailResp) Reset() {
	*x = QueryMemberPointsLogDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberPointsLogDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberPointsLogDetailResp) ProtoMessage() {}

func (x *QueryMemberPointsLogDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberPointsLogDetailResp.ProtoReflect.Descriptor instead.
func (*QueryMemberPointsLogDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{80}
}

func (x *QueryMemberPointsLogDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMemberPointsLogDetailResp) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryMemberPointsLogDetailResp) GetChangeType() int32 {
	if x != nil {
		return x.ChangeType
	}
	return 0
}

func (x *QueryMemberPointsLogDetailResp) GetChangePoints() int32 {
	if x != nil {
		return x.ChangePoints
	}
	return 0
}

func (x *QueryMemberPointsLogDetailResp) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *QueryMemberPointsLogDetailResp) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *QueryMemberPointsLogDetailResp) GetOperateMan() string {
	if x != nil {
		return x.OperateMan
	}
	return ""
}

func (x *QueryMemberPointsLogDetailResp) GetOperateNote() string {
	if x != nil {
		return x.OperateNote
	}
	return ""
}

func (x *QueryMemberPointsLogDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

// 分页查询会员积分记录列表
type QueryMemberPointsLogListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId   int64 `protobuf:"varint,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`       //会员ID
	ChangeType int32 `protobuf:"varint,2,opt,name=change_type,json=changeType,proto3" json:"change_type,omitempty"` //变更类型：1-添加积分，2-减少积分
	SourceType int32 `protobuf:"varint,3,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"` //来源类型：0-其他，1-订单，2-活动，3-签到，4-管理员修改
	PageNum    int32 `protobuf:"varint,4,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`          //第几页
	PageSize   int32 `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`       //每页的数量
}

func (x *QueryMemberPointsLogListReq) Reset() {
	*x = QueryMemberPointsLogListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberPointsLogListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberPointsLogListReq) ProtoMessage() {}

func (x *QueryMemberPointsLogListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberPointsLogListReq.ProtoReflect.Descriptor instead.
func (*QueryMemberPointsLogListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{81}
}

func (x *QueryMemberPointsLogListReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryMemberPointsLogListReq) GetChangeType() int32 {
	if x != nil {
		return x.ChangeType
	}
	return 0
}

func (x *QueryMemberPointsLogListReq) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *QueryMemberPointsLogListReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryMemberPointsLogListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type MemberPointsLogListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                         //
	MemberId     int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`             //会员ID
	ChangeType   int32  `protobuf:"varint,3,opt,name=change_type,json=changeType,proto3" json:"change_type,omitempty"`       //变更类型：1-添加积分，2-减少积分
	ChangePoints int32  `protobuf:"varint,4,opt,name=change_points,json=changePoints,proto3" json:"change_points,omitempty"` //变更积分
	SourceType   int32  `protobuf:"varint,5,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`       //来源类型：0-其他，1-订单，2-活动，3-签到，4-管理员修改
	Description  string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`                        //描述
	OperateMan   string `protobuf:"bytes,7,opt,name=operate_man,json=operateMan,proto3" json:"operate_man,omitempty"`        //操作人员
	OperateNote  string `protobuf:"bytes,8,opt,name=operate_note,json=operateNote,proto3" json:"operate_note,omitempty"`     //操作备注
	CreateTime   string `protobuf:"bytes,9,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`        //创建时间
}

func (x *MemberPointsLogListData) Reset() {
	*x = MemberPointsLogListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberPointsLogListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberPointsLogListData) ProtoMessage() {}

func (x *MemberPointsLogListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberPointsLogListData.ProtoReflect.Descriptor instead.
func (*MemberPointsLogListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{82}
}

func (x *MemberPointsLogListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberPointsLogListData) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *MemberPointsLogListData) GetChangeType() int32 {
	if x != nil {
		return x.ChangeType
	}
	return 0
}

func (x *MemberPointsLogListData) GetChangePoints() int32 {
	if x != nil {
		return x.ChangePoints
	}
	return 0
}

func (x *MemberPointsLogListData) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *MemberPointsLogListData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MemberPointsLogListData) GetOperateMan() string {
	if x != nil {
		return x.OperateMan
	}
	return ""
}

func (x *MemberPointsLogListData) GetOperateNote() string {
	if x != nil {
		return x.OperateNote
	}
	return ""
}

func (x *MemberPointsLogListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

type QueryMemberPointsLogListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                      `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*MemberPointsLogListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryMemberPointsLogListResp) Reset() {
	*x = QueryMemberPointsLogListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberPointsLogListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberPointsLogListResp) ProtoMessage() {}

func (x *QueryMemberPointsLogListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberPointsLogListResp.ProtoReflect.Descriptor instead.
func (*QueryMemberPointsLogListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{83}
}

func (x *QueryMemberPointsLogListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryMemberPointsLogListResp) GetList() []*MemberPointsLogListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加会员与产品分类关系表（用户喜欢的分类）
type AddMemberProductCategoryRelationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                          //
	MemberId          int64 `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                              //会员id
	ProductCategoryId int64 `protobuf:"varint,3,opt,name=product_category_id,json=productCategoryId,proto3" json:"product_category_id,omitempty"` //商品分类id
}

func (x *AddMemberProductCategoryRelationReq) Reset() {
	*x = AddMemberProductCategoryRelationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberProductCategoryRelationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberProductCategoryRelationReq) ProtoMessage() {}

func (x *AddMemberProductCategoryRelationReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberProductCategoryRelationReq.ProtoReflect.Descriptor instead.
func (*AddMemberProductCategoryRelationReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{84}
}

func (x *AddMemberProductCategoryRelationReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddMemberProductCategoryRelationReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *AddMemberProductCategoryRelationReq) GetProductCategoryId() int64 {
	if x != nil {
		return x.ProductCategoryId
	}
	return 0
}

type AddMemberProductCategoryRelationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddMemberProductCategoryRelationResp) Reset() {
	*x = AddMemberProductCategoryRelationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberProductCategoryRelationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberProductCategoryRelationResp) ProtoMessage() {}

func (x *AddMemberProductCategoryRelationResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberProductCategoryRelationResp.ProtoReflect.Descriptor instead.
func (*AddMemberProductCategoryRelationResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{85}
}

func (x *AddMemberProductCategoryRelationResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 分页查询会员与产品分类关系表（用户喜欢的分类）列表
type QueryMemberProductCategoryRelationListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId int64 `protobuf:"varint,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` //会员id
}

func (x *QueryMemberProductCategoryRelationListReq) Reset() {
	*x = QueryMemberProductCategoryRelationListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberProductCategoryRelationListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberProductCategoryRelationListReq) ProtoMessage() {}

func (x *QueryMemberProductCategoryRelationListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberProductCategoryRelationListReq.ProtoReflect.Descriptor instead.
func (*QueryMemberProductCategoryRelationListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{86}
}

func (x *QueryMemberProductCategoryRelationListReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type MemberProductCategoryRelationListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                          //
	MemberId          int64 `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                              //会员id
	ProductCategoryId int64 `protobuf:"varint,3,opt,name=product_category_id,json=productCategoryId,proto3" json:"product_category_id,omitempty"` //商品分类id
}

func (x *MemberProductCategoryRelationListData) Reset() {
	*x = MemberProductCategoryRelationListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberProductCategoryRelationListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberProductCategoryRelationListData) ProtoMessage() {}

func (x *MemberProductCategoryRelationListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberProductCategoryRelationListData.ProtoReflect.Descriptor instead.
func (*MemberProductCategoryRelationListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{87}
}

func (x *MemberProductCategoryRelationListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberProductCategoryRelationListData) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *MemberProductCategoryRelationListData) GetProductCategoryId() int64 {
	if x != nil {
		return x.ProductCategoryId
	}
	return 0
}

type QueryMemberProductCategoryRelationListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                                    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*MemberProductCategoryRelationListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryMemberProductCategoryRelationListResp) Reset() {
	*x = QueryMemberProductCategoryRelationListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberProductCategoryRelationListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberProductCategoryRelationListResp) ProtoMessage() {}

func (x *QueryMemberProductCategoryRelationListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberProductCategoryRelationListResp.ProtoReflect.Descriptor instead.
func (*QueryMemberProductCategoryRelationListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{88}
}

func (x *QueryMemberProductCategoryRelationListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryMemberProductCategoryRelationListResp) GetList() []*MemberProductCategoryRelationListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加用户收藏的商品
type AddMemberProductCollectionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                   //
	MemberId        int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                       //会员id
	MemberNickName  string `protobuf:"bytes,3,opt,name=member_nick_name,json=memberNickName,proto3" json:"member_nick_name,omitempty"`    //会员姓名
	MemberIcon      string `protobuf:"bytes,4,opt,name=member_icon,json=memberIcon,proto3" json:"member_icon,omitempty"`                  //会员头像
	ProductId       int64  `protobuf:"varint,5,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                    //商品id
	ProductName     string `protobuf:"bytes,6,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`               //商品名称
	ProductPic      string `protobuf:"bytes,7,opt,name=product_pic,json=productPic,proto3" json:"product_pic,omitempty"`                  //商品图片
	ProductSubTitle string `protobuf:"bytes,8,opt,name=product_sub_title,json=productSubTitle,proto3" json:"product_sub_title,omitempty"` //商品标题
	ProductPrice    int64  `protobuf:"varint,9,opt,name=product_price,json=productPrice,proto3" json:"product_price,omitempty"`           //商品价格
}

func (x *AddMemberProductCollectionReq) Reset() {
	*x = AddMemberProductCollectionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberProductCollectionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberProductCollectionReq) ProtoMessage() {}

func (x *AddMemberProductCollectionReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberProductCollectionReq.ProtoReflect.Descriptor instead.
func (*AddMemberProductCollectionReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{89}
}

func (x *AddMemberProductCollectionReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddMemberProductCollectionReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *AddMemberProductCollectionReq) GetMemberNickName() string {
	if x != nil {
		return x.MemberNickName
	}
	return ""
}

func (x *AddMemberProductCollectionReq) GetMemberIcon() string {
	if x != nil {
		return x.MemberIcon
	}
	return ""
}

func (x *AddMemberProductCollectionReq) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *AddMemberProductCollectionReq) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *AddMemberProductCollectionReq) GetProductPic() string {
	if x != nil {
		return x.ProductPic
	}
	return ""
}

func (x *AddMemberProductCollectionReq) GetProductSubTitle() string {
	if x != nil {
		return x.ProductSubTitle
	}
	return ""
}

func (x *AddMemberProductCollectionReq) GetProductPrice() int64 {
	if x != nil {
		return x.ProductPrice
	}
	return 0
}

type AddMemberProductCollectionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddMemberProductCollectionResp) Reset() {
	*x = AddMemberProductCollectionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberProductCollectionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberProductCollectionResp) ProtoMessage() {}

func (x *AddMemberProductCollectionResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberProductCollectionResp.ProtoReflect.Descriptor instead.
func (*AddMemberProductCollectionResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{90}
}

func (x *AddMemberProductCollectionResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除用户收藏的商品
type DeleteMemberProductCollectionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids      []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	MemberId int64   `protobuf:"varint,2,opt,name=MemberId,proto3" json:"MemberId,omitempty"` //会员id
}

func (x *DeleteMemberProductCollectionReq) Reset() {
	*x = DeleteMemberProductCollectionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberProductCollectionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberProductCollectionReq) ProtoMessage() {}

func (x *DeleteMemberProductCollectionReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberProductCollectionReq.ProtoReflect.Descriptor instead.
func (*DeleteMemberProductCollectionReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{91}
}

func (x *DeleteMemberProductCollectionReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DeleteMemberProductCollectionReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type DeleteMemberProductCollectionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteMemberProductCollectionResp) Reset() {
	*x = DeleteMemberProductCollectionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberProductCollectionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberProductCollectionResp) ProtoMessage() {}

func (x *DeleteMemberProductCollectionResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberProductCollectionResp.ProtoReflect.Descriptor instead.
func (*DeleteMemberProductCollectionResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{92}
}

func (x *DeleteMemberProductCollectionResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询用户收藏的商品详情
type QueryMemberProductCollectionDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryMemberProductCollectionDetailReq) Reset() {
	*x = QueryMemberProductCollectionDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberProductCollectionDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberProductCollectionDetailReq) ProtoMessage() {}

func (x *QueryMemberProductCollectionDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberProductCollectionDetailReq.ProtoReflect.Descriptor instead.
func (*QueryMemberProductCollectionDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{93}
}

func (x *QueryMemberProductCollectionDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryMemberProductCollectionDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                   //
	MemberId        int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                       //会员id
	MemberNickName  string `protobuf:"bytes,3,opt,name=member_nick_name,json=memberNickName,proto3" json:"member_nick_name,omitempty"`    //会员姓名
	MemberIcon      string `protobuf:"bytes,4,opt,name=member_icon,json=memberIcon,proto3" json:"member_icon,omitempty"`                  //会员头像
	ProductId       int64  `protobuf:"varint,5,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                    //商品id
	ProductName     string `protobuf:"bytes,6,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`               //商品名称
	ProductPic      string `protobuf:"bytes,7,opt,name=product_pic,json=productPic,proto3" json:"product_pic,omitempty"`                  //商品图片
	ProductSubTitle string `protobuf:"bytes,8,opt,name=product_sub_title,json=productSubTitle,proto3" json:"product_sub_title,omitempty"` //商品标题
	ProductPrice    int64  `protobuf:"varint,9,opt,name=product_price,json=productPrice,proto3" json:"product_price,omitempty"`           //商品价格
	CreateTime      string `protobuf:"bytes,10,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                 //收藏时间
}

func (x *QueryMemberProductCollectionDetailResp) Reset() {
	*x = QueryMemberProductCollectionDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberProductCollectionDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberProductCollectionDetailResp) ProtoMessage() {}

func (x *QueryMemberProductCollectionDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberProductCollectionDetailResp.ProtoReflect.Descriptor instead.
func (*QueryMemberProductCollectionDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{94}
}

func (x *QueryMemberProductCollectionDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMemberProductCollectionDetailResp) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryMemberProductCollectionDetailResp) GetMemberNickName() string {
	if x != nil {
		return x.MemberNickName
	}
	return ""
}

func (x *QueryMemberProductCollectionDetailResp) GetMemberIcon() string {
	if x != nil {
		return x.MemberIcon
	}
	return ""
}

func (x *QueryMemberProductCollectionDetailResp) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *QueryMemberProductCollectionDetailResp) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *QueryMemberProductCollectionDetailResp) GetProductPic() string {
	if x != nil {
		return x.ProductPic
	}
	return ""
}

func (x *QueryMemberProductCollectionDetailResp) GetProductSubTitle() string {
	if x != nil {
		return x.ProductSubTitle
	}
	return ""
}

func (x *QueryMemberProductCollectionDetailResp) GetProductPrice() int64 {
	if x != nil {
		return x.ProductPrice
	}
	return 0
}

func (x *QueryMemberProductCollectionDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

// 分页查询用户收藏的商品列表
type QueryMemberProductCollectionListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum   int64 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`       //第几页
	PageSize  int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`    //每页的数量
	MemberId  int64 `protobuf:"varint,3,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`    //会员id
	ProductId int64 `protobuf:"varint,4,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"` //商品id
}

func (x *QueryMemberProductCollectionListReq) Reset() {
	*x = QueryMemberProductCollectionListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberProductCollectionListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberProductCollectionListReq) ProtoMessage() {}

func (x *QueryMemberProductCollectionListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberProductCollectionListReq.ProtoReflect.Descriptor instead.
func (*QueryMemberProductCollectionListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{95}
}

func (x *QueryMemberProductCollectionListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryMemberProductCollectionListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryMemberProductCollectionListReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryMemberProductCollectionListReq) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

type MemberProductCollectionListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                   //
	MemberId        int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                       //会员id
	MemberNickName  string `protobuf:"bytes,3,opt,name=member_nick_name,json=memberNickName,proto3" json:"member_nick_name,omitempty"`    //会员姓名
	MemberIcon      string `protobuf:"bytes,4,opt,name=member_icon,json=memberIcon,proto3" json:"member_icon,omitempty"`                  //会员头像
	ProductId       int64  `protobuf:"varint,5,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                    //商品id
	ProductName     string `protobuf:"bytes,6,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`               //商品名称
	ProductPic      string `protobuf:"bytes,7,opt,name=product_pic,json=productPic,proto3" json:"product_pic,omitempty"`                  //商品图片
	ProductSubTitle string `protobuf:"bytes,8,opt,name=product_sub_title,json=productSubTitle,proto3" json:"product_sub_title,omitempty"` //商品标题
	ProductPrice    int64  `protobuf:"varint,9,opt,name=product_price,json=productPrice,proto3" json:"product_price,omitempty"`           //商品价格
	CreateTime      string `protobuf:"bytes,10,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                 //收藏时间
}

func (x *MemberProductCollectionListData) Reset() {
	*x = MemberProductCollectionListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberProductCollectionListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberProductCollectionListData) ProtoMessage() {}

func (x *MemberProductCollectionListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberProductCollectionListData.ProtoReflect.Descriptor instead.
func (*MemberProductCollectionListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{96}
}

func (x *MemberProductCollectionListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberProductCollectionListData) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *MemberProductCollectionListData) GetMemberNickName() string {
	if x != nil {
		return x.MemberNickName
	}
	return ""
}

func (x *MemberProductCollectionListData) GetMemberIcon() string {
	if x != nil {
		return x.MemberIcon
	}
	return ""
}

func (x *MemberProductCollectionListData) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *MemberProductCollectionListData) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *MemberProductCollectionListData) GetProductPic() string {
	if x != nil {
		return x.ProductPic
	}
	return ""
}

func (x *MemberProductCollectionListData) GetProductSubTitle() string {
	if x != nil {
		return x.ProductSubTitle
	}
	return ""
}

func (x *MemberProductCollectionListData) GetProductPrice() int64 {
	if x != nil {
		return x.ProductPrice
	}
	return 0
}

func (x *MemberProductCollectionListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

type QueryMemberProductCollectionListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*MemberProductCollectionListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryMemberProductCollectionListResp) Reset() {
	*x = QueryMemberProductCollectionListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberProductCollectionListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberProductCollectionListResp) ProtoMessage() {}

func (x *QueryMemberProductCollectionListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberProductCollectionListResp.ProtoReflect.Descriptor instead.
func (*QueryMemberProductCollectionListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{97}
}

func (x *QueryMemberProductCollectionListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryMemberProductCollectionListResp) GetList() []*MemberProductCollectionListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加用户商品浏览历史记录
type AddMemberReadHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                   //
	MemberId        int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                       //会员id
	MemberNickName  string `protobuf:"bytes,3,opt,name=member_nick_name,json=memberNickName,proto3" json:"member_nick_name,omitempty"`    //会员姓名
	MemberIcon      string `protobuf:"bytes,4,opt,name=member_icon,json=memberIcon,proto3" json:"member_icon,omitempty"`                  //会员头像
	ProductId       int64  `protobuf:"varint,5,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                    //商品id
	ProductName     string `protobuf:"bytes,6,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`               //商品名称
	ProductPic      string `protobuf:"bytes,7,opt,name=product_pic,json=productPic,proto3" json:"product_pic,omitempty"`                  //商品图片
	ProductSubTitle string `protobuf:"bytes,8,opt,name=product_sub_title,json=productSubTitle,proto3" json:"product_sub_title,omitempty"` //商品标题
	ProductPrice    int64  `protobuf:"varint,9,opt,name=product_price,json=productPrice,proto3" json:"product_price,omitempty"`           //商品价格
}

func (x *AddMemberReadHistoryReq) Reset() {
	*x = AddMemberReadHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberReadHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberReadHistoryReq) ProtoMessage() {}

func (x *AddMemberReadHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberReadHistoryReq.ProtoReflect.Descriptor instead.
func (*AddMemberReadHistoryReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{98}
}

func (x *AddMemberReadHistoryReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddMemberReadHistoryReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *AddMemberReadHistoryReq) GetMemberNickName() string {
	if x != nil {
		return x.MemberNickName
	}
	return ""
}

func (x *AddMemberReadHistoryReq) GetMemberIcon() string {
	if x != nil {
		return x.MemberIcon
	}
	return ""
}

func (x *AddMemberReadHistoryReq) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *AddMemberReadHistoryReq) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *AddMemberReadHistoryReq) GetProductPic() string {
	if x != nil {
		return x.ProductPic
	}
	return ""
}

func (x *AddMemberReadHistoryReq) GetProductSubTitle() string {
	if x != nil {
		return x.ProductSubTitle
	}
	return ""
}

func (x *AddMemberReadHistoryReq) GetProductPrice() int64 {
	if x != nil {
		return x.ProductPrice
	}
	return 0
}

type AddMemberReadHistoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddMemberReadHistoryResp) Reset() {
	*x = AddMemberReadHistoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberReadHistoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberReadHistoryResp) ProtoMessage() {}

func (x *AddMemberReadHistoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberReadHistoryResp.ProtoReflect.Descriptor instead.
func (*AddMemberReadHistoryResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{99}
}

func (x *AddMemberReadHistoryResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除用户商品浏览历史记录
type DeleteMemberReadHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids      []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	MemberId int64   `protobuf:"varint,2,opt,name=MemberId,proto3" json:"MemberId,omitempty"` //会员id
}

func (x *DeleteMemberReadHistoryReq) Reset() {
	*x = DeleteMemberReadHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberReadHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberReadHistoryReq) ProtoMessage() {}

func (x *DeleteMemberReadHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberReadHistoryReq.ProtoReflect.Descriptor instead.
func (*DeleteMemberReadHistoryReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{100}
}

func (x *DeleteMemberReadHistoryReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DeleteMemberReadHistoryReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type DeleteMemberReadHistoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteMemberReadHistoryResp) Reset() {
	*x = DeleteMemberReadHistoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberReadHistoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberReadHistoryResp) ProtoMessage() {}

func (x *DeleteMemberReadHistoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberReadHistoryResp.ProtoReflect.Descriptor instead.
func (*DeleteMemberReadHistoryResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{101}
}

func (x *DeleteMemberReadHistoryResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询用户商品浏览历史记录详情
type QueryMemberReadHistoryDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryMemberReadHistoryDetailReq) Reset() {
	*x = QueryMemberReadHistoryDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberReadHistoryDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberReadHistoryDetailReq) ProtoMessage() {}

func (x *QueryMemberReadHistoryDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberReadHistoryDetailReq.ProtoReflect.Descriptor instead.
func (*QueryMemberReadHistoryDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{102}
}

func (x *QueryMemberReadHistoryDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryMemberReadHistoryDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                   //
	MemberId        int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                       //会员id
	MemberNickName  string `protobuf:"bytes,3,opt,name=member_nick_name,json=memberNickName,proto3" json:"member_nick_name,omitempty"`    //会员姓名
	MemberIcon      string `protobuf:"bytes,4,opt,name=member_icon,json=memberIcon,proto3" json:"member_icon,omitempty"`                  //会员头像
	ProductId       int64  `protobuf:"varint,5,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                    //商品id
	ProductName     string `protobuf:"bytes,6,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`               //商品名称
	ProductPic      string `protobuf:"bytes,7,opt,name=product_pic,json=productPic,proto3" json:"product_pic,omitempty"`                  //商品图片
	ProductSubTitle string `protobuf:"bytes,8,opt,name=product_sub_title,json=productSubTitle,proto3" json:"product_sub_title,omitempty"` //商品标题
	ProductPrice    int64  `protobuf:"varint,9,opt,name=product_price,json=productPrice,proto3" json:"product_price,omitempty"`           //商品价格
	CreateTime      string `protobuf:"bytes,10,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                 //浏览时间
}

func (x *QueryMemberReadHistoryDetailResp) Reset() {
	*x = QueryMemberReadHistoryDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberReadHistoryDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberReadHistoryDetailResp) ProtoMessage() {}

func (x *QueryMemberReadHistoryDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberReadHistoryDetailResp.ProtoReflect.Descriptor instead.
func (*QueryMemberReadHistoryDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{103}
}

func (x *QueryMemberReadHistoryDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMemberReadHistoryDetailResp) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryMemberReadHistoryDetailResp) GetMemberNickName() string {
	if x != nil {
		return x.MemberNickName
	}
	return ""
}

func (x *QueryMemberReadHistoryDetailResp) GetMemberIcon() string {
	if x != nil {
		return x.MemberIcon
	}
	return ""
}

func (x *QueryMemberReadHistoryDetailResp) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *QueryMemberReadHistoryDetailResp) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *QueryMemberReadHistoryDetailResp) GetProductPic() string {
	if x != nil {
		return x.ProductPic
	}
	return ""
}

func (x *QueryMemberReadHistoryDetailResp) GetProductSubTitle() string {
	if x != nil {
		return x.ProductSubTitle
	}
	return ""
}

func (x *QueryMemberReadHistoryDetailResp) GetProductPrice() int64 {
	if x != nil {
		return x.ProductPrice
	}
	return 0
}

func (x *QueryMemberReadHistoryDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

// 分页查询用户商品浏览历史记录列表
type QueryMemberReadHistoryListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum  int64 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`    //第几页
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` //每页的数量
	MemberId int64 `protobuf:"varint,4,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` //会员id
}

func (x *QueryMemberReadHistoryListReq) Reset() {
	*x = QueryMemberReadHistoryListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberReadHistoryListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberReadHistoryListReq) ProtoMessage() {}

func (x *QueryMemberReadHistoryListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberReadHistoryListReq.ProtoReflect.Descriptor instead.
func (*QueryMemberReadHistoryListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{104}
}

func (x *QueryMemberReadHistoryListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryMemberReadHistoryListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryMemberReadHistoryListReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type MemberReadHistoryListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                   //
	MemberId        int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                       //会员id
	MemberNickName  string `protobuf:"bytes,3,opt,name=member_nick_name,json=memberNickName,proto3" json:"member_nick_name,omitempty"`    //会员姓名
	MemberIcon      string `protobuf:"bytes,4,opt,name=member_icon,json=memberIcon,proto3" json:"member_icon,omitempty"`                  //会员头像
	ProductId       int64  `protobuf:"varint,5,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                    //商品id
	ProductName     string `protobuf:"bytes,6,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`               //商品名称
	ProductPic      string `protobuf:"bytes,7,opt,name=product_pic,json=productPic,proto3" json:"product_pic,omitempty"`                  //商品图片
	ProductSubTitle string `protobuf:"bytes,8,opt,name=product_sub_title,json=productSubTitle,proto3" json:"product_sub_title,omitempty"` //商品标题
	ProductPrice    int64  `protobuf:"varint,9,opt,name=product_price,json=productPrice,proto3" json:"product_price,omitempty"`           //商品价格
	CreateTime      string `protobuf:"bytes,10,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                 //浏览时间
}

func (x *MemberReadHistoryListData) Reset() {
	*x = MemberReadHistoryListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberReadHistoryListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberReadHistoryListData) ProtoMessage() {}

func (x *MemberReadHistoryListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberReadHistoryListData.ProtoReflect.Descriptor instead.
func (*MemberReadHistoryListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{105}
}

func (x *MemberReadHistoryListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberReadHistoryListData) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *MemberReadHistoryListData) GetMemberNickName() string {
	if x != nil {
		return x.MemberNickName
	}
	return ""
}

func (x *MemberReadHistoryListData) GetMemberIcon() string {
	if x != nil {
		return x.MemberIcon
	}
	return ""
}

func (x *MemberReadHistoryListData) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *MemberReadHistoryListData) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *MemberReadHistoryListData) GetProductPic() string {
	if x != nil {
		return x.ProductPic
	}
	return ""
}

func (x *MemberReadHistoryListData) GetProductSubTitle() string {
	if x != nil {
		return x.ProductSubTitle
	}
	return ""
}

func (x *MemberReadHistoryListData) GetProductPrice() int64 {
	if x != nil {
		return x.ProductPrice
	}
	return 0
}

func (x *MemberReadHistoryListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

type QueryMemberReadHistoryListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                        `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*MemberReadHistoryListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryMemberReadHistoryListResp) Reset() {
	*x = QueryMemberReadHistoryListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberReadHistoryListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberReadHistoryListResp) ProtoMessage() {}

func (x *QueryMemberReadHistoryListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberReadHistoryListResp.ProtoReflect.Descriptor instead.
func (*QueryMemberReadHistoryListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{106}
}

func (x *QueryMemberReadHistoryListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryMemberReadHistoryListResp) GetList() []*MemberReadHistoryListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加会员积分成长规则表
type AddMemberRuleSettingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                          //
	ContinueSignDay   int32  `protobuf:"varint,2,opt,name=continue_sign_day,json=continueSignDay,proto3" json:"continue_sign_day,omitempty"`       //连续签到天数
	ContinueSignPoint int32  `protobuf:"varint,3,opt,name=continue_sign_point,json=continueSignPoint,proto3" json:"continue_sign_point,omitempty"` //连续签到赠送数量
	ConsumePerPoint   int64  `protobuf:"varint,4,opt,name=consume_per_point,json=consumePerPoint,proto3" json:"consume_per_point,omitempty"`       //每消费多少元获取1个点
	LowOrderAmount    int64  `protobuf:"varint,5,opt,name=low_order_amount,json=lowOrderAmount,proto3" json:"low_order_amount,omitempty"`          //最低获取点数的订单金额
	MaxPointPerOrder  int32  `protobuf:"varint,6,opt,name=max_point_per_order,json=maxPointPerOrder,proto3" json:"max_point_per_order,omitempty"`  //每笔订单最高获取点数
	RuleType          int32  `protobuf:"varint,7,opt,name=rule_type,json=ruleType,proto3" json:"rule_type,omitempty"`                              //类型：0->积分规则；1->成长值规则
	Status            int32  `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`                                                  //状态：0->禁用；1->启用
	CreateBy          string `protobuf:"bytes,9,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`                               //创建者
}

func (x *AddMemberRuleSettingReq) Reset() {
	*x = AddMemberRuleSettingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberRuleSettingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberRuleSettingReq) ProtoMessage() {}

func (x *AddMemberRuleSettingReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberRuleSettingReq.ProtoReflect.Descriptor instead.
func (*AddMemberRuleSettingReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{107}
}

func (x *AddMemberRuleSettingReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddMemberRuleSettingReq) GetContinueSignDay() int32 {
	if x != nil {
		return x.ContinueSignDay
	}
	return 0
}

func (x *AddMemberRuleSettingReq) GetContinueSignPoint() int32 {
	if x != nil {
		return x.ContinueSignPoint
	}
	return 0
}

func (x *AddMemberRuleSettingReq) GetConsumePerPoint() int64 {
	if x != nil {
		return x.ConsumePerPoint
	}
	return 0
}

func (x *AddMemberRuleSettingReq) GetLowOrderAmount() int64 {
	if x != nil {
		return x.LowOrderAmount
	}
	return 0
}

func (x *AddMemberRuleSettingReq) GetMaxPointPerOrder() int32 {
	if x != nil {
		return x.MaxPointPerOrder
	}
	return 0
}

func (x *AddMemberRuleSettingReq) GetRuleType() int32 {
	if x != nil {
		return x.RuleType
	}
	return 0
}

func (x *AddMemberRuleSettingReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddMemberRuleSettingReq) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

type AddMemberRuleSettingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddMemberRuleSettingResp) Reset() {
	*x = AddMemberRuleSettingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberRuleSettingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberRuleSettingResp) ProtoMessage() {}

func (x *AddMemberRuleSettingResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberRuleSettingResp.ProtoReflect.Descriptor instead.
func (*AddMemberRuleSettingResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{108}
}

func (x *AddMemberRuleSettingResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除会员积分成长规则表
type DeleteMemberRuleSettingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteMemberRuleSettingReq) Reset() {
	*x = DeleteMemberRuleSettingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberRuleSettingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberRuleSettingReq) ProtoMessage() {}

func (x *DeleteMemberRuleSettingReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberRuleSettingReq.ProtoReflect.Descriptor instead.
func (*DeleteMemberRuleSettingReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{109}
}

func (x *DeleteMemberRuleSettingReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteMemberRuleSettingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteMemberRuleSettingResp) Reset() {
	*x = DeleteMemberRuleSettingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberRuleSettingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberRuleSettingResp) ProtoMessage() {}

func (x *DeleteMemberRuleSettingResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberRuleSettingResp.ProtoReflect.Descriptor instead.
func (*DeleteMemberRuleSettingResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{110}
}

func (x *DeleteMemberRuleSettingResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新会员积分成长规则表
type UpdateMemberRuleSettingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                          //
	ContinueSignDay   int32  `protobuf:"varint,2,opt,name=continue_sign_day,json=continueSignDay,proto3" json:"continue_sign_day,omitempty"`       //连续签到天数
	ContinueSignPoint int32  `protobuf:"varint,3,opt,name=continue_sign_point,json=continueSignPoint,proto3" json:"continue_sign_point,omitempty"` //连续签到赠送数量
	ConsumePerPoint   int64  `protobuf:"varint,4,opt,name=consume_per_point,json=consumePerPoint,proto3" json:"consume_per_point,omitempty"`       //每消费多少元获取1个点
	LowOrderAmount    int64  `protobuf:"varint,5,opt,name=low_order_amount,json=lowOrderAmount,proto3" json:"low_order_amount,omitempty"`          //最低获取点数的订单金额
	MaxPointPerOrder  int32  `protobuf:"varint,6,opt,name=max_point_per_order,json=maxPointPerOrder,proto3" json:"max_point_per_order,omitempty"`  //每笔订单最高获取点数
	RuleType          int32  `protobuf:"varint,7,opt,name=rule_type,json=ruleType,proto3" json:"rule_type,omitempty"`                              //类型：0->积分规则；1->成长值规则
	Status            int32  `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`                                                  //状态：0->禁用；1->启用
	UpdateBy          string `protobuf:"bytes,9,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`                               //更新者
}

func (x *UpdateMemberRuleSettingReq) Reset() {
	*x = UpdateMemberRuleSettingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberRuleSettingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberRuleSettingReq) ProtoMessage() {}

func (x *UpdateMemberRuleSettingReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberRuleSettingReq.ProtoReflect.Descriptor instead.
func (*UpdateMemberRuleSettingReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{111}
}

func (x *UpdateMemberRuleSettingReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateMemberRuleSettingReq) GetContinueSignDay() int32 {
	if x != nil {
		return x.ContinueSignDay
	}
	return 0
}

func (x *UpdateMemberRuleSettingReq) GetContinueSignPoint() int32 {
	if x != nil {
		return x.ContinueSignPoint
	}
	return 0
}

func (x *UpdateMemberRuleSettingReq) GetConsumePerPoint() int64 {
	if x != nil {
		return x.ConsumePerPoint
	}
	return 0
}

func (x *UpdateMemberRuleSettingReq) GetLowOrderAmount() int64 {
	if x != nil {
		return x.LowOrderAmount
	}
	return 0
}

func (x *UpdateMemberRuleSettingReq) GetMaxPointPerOrder() int32 {
	if x != nil {
		return x.MaxPointPerOrder
	}
	return 0
}

func (x *UpdateMemberRuleSettingReq) GetRuleType() int32 {
	if x != nil {
		return x.RuleType
	}
	return 0
}

func (x *UpdateMemberRuleSettingReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateMemberRuleSettingReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

type UpdateMemberRuleSettingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateMemberRuleSettingResp) Reset() {
	*x = UpdateMemberRuleSettingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberRuleSettingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberRuleSettingResp) ProtoMessage() {}

func (x *UpdateMemberRuleSettingResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberRuleSettingResp.ProtoReflect.Descriptor instead.
func (*UpdateMemberRuleSettingResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{112}
}

func (x *UpdateMemberRuleSettingResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新会员积分成长规则表状态
type UpdateMemberRuleSettingStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids      []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Status   int32   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`                    //状态：0->禁用；1->启用
	UpdateBy string  `protobuf:"bytes,3,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"` //更新者
}

func (x *UpdateMemberRuleSettingStatusReq) Reset() {
	*x = UpdateMemberRuleSettingStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberRuleSettingStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberRuleSettingStatusReq) ProtoMessage() {}

func (x *UpdateMemberRuleSettingStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberRuleSettingStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateMemberRuleSettingStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{113}
}

func (x *UpdateMemberRuleSettingStatusReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdateMemberRuleSettingStatusReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateMemberRuleSettingStatusReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

type UpdateMemberRuleSettingStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateMemberRuleSettingStatusResp) Reset() {
	*x = UpdateMemberRuleSettingStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberRuleSettingStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberRuleSettingStatusResp) ProtoMessage() {}

func (x *UpdateMemberRuleSettingStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberRuleSettingStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateMemberRuleSettingStatusResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{114}
}

func (x *UpdateMemberRuleSettingStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询会员积分成长规则表详情
type QueryMemberRuleSettingDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryMemberRuleSettingDetailReq) Reset() {
	*x = QueryMemberRuleSettingDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberRuleSettingDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberRuleSettingDetailReq) ProtoMessage() {}

func (x *QueryMemberRuleSettingDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberRuleSettingDetailReq.ProtoReflect.Descriptor instead.
func (*QueryMemberRuleSettingDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{115}
}

func (x *QueryMemberRuleSettingDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryMemberRuleSettingDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                          //
	ContinueSignDay   int32  `protobuf:"varint,2,opt,name=continue_sign_day,json=continueSignDay,proto3" json:"continue_sign_day,omitempty"`       //连续签到天数
	ContinueSignPoint int32  `protobuf:"varint,3,opt,name=continue_sign_point,json=continueSignPoint,proto3" json:"continue_sign_point,omitempty"` //连续签到赠送数量
	ConsumePerPoint   int64  `protobuf:"varint,4,opt,name=consume_per_point,json=consumePerPoint,proto3" json:"consume_per_point,omitempty"`       //每消费多少元获取1个点
	LowOrderAmount    int64  `protobuf:"varint,5,opt,name=low_order_amount,json=lowOrderAmount,proto3" json:"low_order_amount,omitempty"`          //最低获取点数的订单金额
	MaxPointPerOrder  int32  `protobuf:"varint,6,opt,name=max_point_per_order,json=maxPointPerOrder,proto3" json:"max_point_per_order,omitempty"`  //每笔订单最高获取点数
	RuleType          int32  `protobuf:"varint,7,opt,name=rule_type,json=ruleType,proto3" json:"rule_type,omitempty"`                              //类型：0->积分规则；1->成长值规则
	Status            int32  `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`                                                  //状态：0->禁用；1->启用
	CreateBy          string `protobuf:"bytes,9,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`                               //创建者
	CreateTime        string `protobuf:"bytes,10,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                        //创建时间
	UpdateBy          string `protobuf:"bytes,11,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`                              //更新者
	UpdateTime        string `protobuf:"bytes,12,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`                        //更新时间
}

func (x *QueryMemberRuleSettingDetailResp) Reset() {
	*x = QueryMemberRuleSettingDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberRuleSettingDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberRuleSettingDetailResp) ProtoMessage() {}

func (x *QueryMemberRuleSettingDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberRuleSettingDetailResp.ProtoReflect.Descriptor instead.
func (*QueryMemberRuleSettingDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{116}
}

func (x *QueryMemberRuleSettingDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMemberRuleSettingDetailResp) GetContinueSignDay() int32 {
	if x != nil {
		return x.ContinueSignDay
	}
	return 0
}

func (x *QueryMemberRuleSettingDetailResp) GetContinueSignPoint() int32 {
	if x != nil {
		return x.ContinueSignPoint
	}
	return 0
}

func (x *QueryMemberRuleSettingDetailResp) GetConsumePerPoint() int64 {
	if x != nil {
		return x.ConsumePerPoint
	}
	return 0
}

func (x *QueryMemberRuleSettingDetailResp) GetLowOrderAmount() int64 {
	if x != nil {
		return x.LowOrderAmount
	}
	return 0
}

func (x *QueryMemberRuleSettingDetailResp) GetMaxPointPerOrder() int32 {
	if x != nil {
		return x.MaxPointPerOrder
	}
	return 0
}

func (x *QueryMemberRuleSettingDetailResp) GetRuleType() int32 {
	if x != nil {
		return x.RuleType
	}
	return 0
}

func (x *QueryMemberRuleSettingDetailResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryMemberRuleSettingDetailResp) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *QueryMemberRuleSettingDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryMemberRuleSettingDetailResp) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *QueryMemberRuleSettingDetailResp) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 分页查询会员积分成长规则表列表
type QueryMemberRuleSettingListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum  int64 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`    //第几页
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` //每页的数量
	RuleType int32 `protobuf:"varint,3,opt,name=rule_type,json=ruleType,proto3" json:"rule_type,omitempty"` //类型：0->积分规则；1->成长值规则
	Status   int32 `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`                     //状态：0->禁用；1->启用
}

func (x *QueryMemberRuleSettingListReq) Reset() {
	*x = QueryMemberRuleSettingListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberRuleSettingListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberRuleSettingListReq) ProtoMessage() {}

func (x *QueryMemberRuleSettingListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberRuleSettingListReq.ProtoReflect.Descriptor instead.
func (*QueryMemberRuleSettingListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{117}
}

func (x *QueryMemberRuleSettingListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryMemberRuleSettingListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryMemberRuleSettingListReq) GetRuleType() int32 {
	if x != nil {
		return x.RuleType
	}
	return 0
}

func (x *QueryMemberRuleSettingListReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type MemberRuleSettingListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                          //
	ContinueSignDay   int32  `protobuf:"varint,2,opt,name=continue_sign_day,json=continueSignDay,proto3" json:"continue_sign_day,omitempty"`       //连续签到天数
	ContinueSignPoint int32  `protobuf:"varint,3,opt,name=continue_sign_point,json=continueSignPoint,proto3" json:"continue_sign_point,omitempty"` //连续签到赠送数量
	ConsumePerPoint   int64  `protobuf:"varint,4,opt,name=consume_per_point,json=consumePerPoint,proto3" json:"consume_per_point,omitempty"`       //每消费多少元获取1个点
	LowOrderAmount    int64  `protobuf:"varint,5,opt,name=low_order_amount,json=lowOrderAmount,proto3" json:"low_order_amount,omitempty"`          //最低获取点数的订单金额
	MaxPointPerOrder  int32  `protobuf:"varint,6,opt,name=max_point_per_order,json=maxPointPerOrder,proto3" json:"max_point_per_order,omitempty"`  //每笔订单最高获取点数
	RuleType          int32  `protobuf:"varint,7,opt,name=rule_type,json=ruleType,proto3" json:"rule_type,omitempty"`                              //类型：0->积分规则；1->成长值规则
	Status            int32  `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`                                                  //状态：0->禁用；1->启用
	CreateBy          string `protobuf:"bytes,9,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`                               //创建者
	CreateTime        string `protobuf:"bytes,10,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                        //创建时间
	UpdateBy          string `protobuf:"bytes,11,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`                              //更新者
	UpdateTime        string `protobuf:"bytes,12,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`                        //更新时间
}

func (x *MemberRuleSettingListData) Reset() {
	*x = MemberRuleSettingListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberRuleSettingListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberRuleSettingListData) ProtoMessage() {}

func (x *MemberRuleSettingListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberRuleSettingListData.ProtoReflect.Descriptor instead.
func (*MemberRuleSettingListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{118}
}

func (x *MemberRuleSettingListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberRuleSettingListData) GetContinueSignDay() int32 {
	if x != nil {
		return x.ContinueSignDay
	}
	return 0
}

func (x *MemberRuleSettingListData) GetContinueSignPoint() int32 {
	if x != nil {
		return x.ContinueSignPoint
	}
	return 0
}

func (x *MemberRuleSettingListData) GetConsumePerPoint() int64 {
	if x != nil {
		return x.ConsumePerPoint
	}
	return 0
}

func (x *MemberRuleSettingListData) GetLowOrderAmount() int64 {
	if x != nil {
		return x.LowOrderAmount
	}
	return 0
}

func (x *MemberRuleSettingListData) GetMaxPointPerOrder() int32 {
	if x != nil {
		return x.MaxPointPerOrder
	}
	return 0
}

func (x *MemberRuleSettingListData) GetRuleType() int32 {
	if x != nil {
		return x.RuleType
	}
	return 0
}

func (x *MemberRuleSettingListData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MemberRuleSettingListData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *MemberRuleSettingListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *MemberRuleSettingListData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *MemberRuleSettingListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type QueryMemberRuleSettingListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                        `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*MemberRuleSettingListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryMemberRuleSettingListResp) Reset() {
	*x = QueryMemberRuleSettingListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberRuleSettingListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberRuleSettingListResp) ProtoMessage() {}

func (x *QueryMemberRuleSettingListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberRuleSettingListResp.ProtoReflect.Descriptor instead.
func (*QueryMemberRuleSettingListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{119}
}

func (x *QueryMemberRuleSettingListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryMemberRuleSettingListResp) GetList() []*MemberRuleSettingListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加会员签到记录
type AddMemberSignLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                         //
	MemberId     int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`             //会员ID
	SignDate     string `protobuf:"bytes,3,opt,name=sign_date,json=signDate,proto3" json:"sign_date,omitempty"`              //签到日期
	ContinueDays int32  `protobuf:"varint,4,opt,name=continue_days,json=continueDays,proto3" json:"continue_days,omitempty"` //连续签到天数
	Points       int32  `protobuf:"varint,5,opt,name=points,proto3" json:"points,omitempty"`                                 //获得积分
}

func (x *AddMemberSignLogReq) Reset() {
	*x = AddMemberSignLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberSignLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberSignLogReq) ProtoMessage() {}

func (x *AddMemberSignLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberSignLogReq.ProtoReflect.Descriptor instead.
func (*AddMemberSignLogReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{120}
}

func (x *AddMemberSignLogReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddMemberSignLogReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *AddMemberSignLogReq) GetSignDate() string {
	if x != nil {
		return x.SignDate
	}
	return ""
}

func (x *AddMemberSignLogReq) GetContinueDays() int32 {
	if x != nil {
		return x.ContinueDays
	}
	return 0
}

func (x *AddMemberSignLogReq) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

type AddMemberSignLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddMemberSignLogResp) Reset() {
	*x = AddMemberSignLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberSignLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberSignLogResp) ProtoMessage() {}

func (x *AddMemberSignLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberSignLogResp.ProtoReflect.Descriptor instead.
func (*AddMemberSignLogResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{121}
}

func (x *AddMemberSignLogResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询会员签到记录详情
type QueryMemberSignLogDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryMemberSignLogDetailReq) Reset() {
	*x = QueryMemberSignLogDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberSignLogDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberSignLogDetailReq) ProtoMessage() {}

func (x *QueryMemberSignLogDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberSignLogDetailReq.ProtoReflect.Descriptor instead.
func (*QueryMemberSignLogDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{122}
}

func (x *QueryMemberSignLogDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryMemberSignLogDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                         //
	MemberId     int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`             //会员ID
	SignDate     string `protobuf:"bytes,3,opt,name=sign_date,json=signDate,proto3" json:"sign_date,omitempty"`              //签到日期
	ContinueDays int32  `protobuf:"varint,4,opt,name=continue_days,json=continueDays,proto3" json:"continue_days,omitempty"` //连续签到天数
	Points       int32  `protobuf:"varint,5,opt,name=points,proto3" json:"points,omitempty"`                                 //获得积分
	CreateTime   string `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`        //
}

func (x *QueryMemberSignLogDetailResp) Reset() {
	*x = QueryMemberSignLogDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberSignLogDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberSignLogDetailResp) ProtoMessage() {}

func (x *QueryMemberSignLogDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberSignLogDetailResp.ProtoReflect.Descriptor instead.
func (*QueryMemberSignLogDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{123}
}

func (x *QueryMemberSignLogDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMemberSignLogDetailResp) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryMemberSignLogDetailResp) GetSignDate() string {
	if x != nil {
		return x.SignDate
	}
	return ""
}

func (x *QueryMemberSignLogDetailResp) GetContinueDays() int32 {
	if x != nil {
		return x.ContinueDays
	}
	return 0
}

func (x *QueryMemberSignLogDetailResp) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *QueryMemberSignLogDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

// 分页查询会员签到记录列表
type QueryMemberSignLogListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId int64  `protobuf:"varint,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` //会员ID
	SignDate string `protobuf:"bytes,2,opt,name=sign_date,json=signDate,proto3" json:"sign_date,omitempty"`  //签到日期
	PageNum  int32  `protobuf:"varint,3,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`    //第几页
	PageSize int32  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` //每页的数量
}

func (x *QueryMemberSignLogListReq) Reset() {
	*x = QueryMemberSignLogListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberSignLogListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberSignLogListReq) ProtoMessage() {}

func (x *QueryMemberSignLogListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberSignLogListReq.ProtoReflect.Descriptor instead.
func (*QueryMemberSignLogListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{124}
}

func (x *QueryMemberSignLogListReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryMemberSignLogListReq) GetSignDate() string {
	if x != nil {
		return x.SignDate
	}
	return ""
}

func (x *QueryMemberSignLogListReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryMemberSignLogListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type MemberSignLogListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                         //
	MemberId     int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`             //会员ID
	SignDate     string `protobuf:"bytes,3,opt,name=sign_date,json=signDate,proto3" json:"sign_date,omitempty"`              //签到日期
	ContinueDays int32  `protobuf:"varint,4,opt,name=continue_days,json=continueDays,proto3" json:"continue_days,omitempty"` //连续签到天数
	Points       int32  `protobuf:"varint,5,opt,name=points,proto3" json:"points,omitempty"`                                 //获得积分
	CreateTime   string `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`        //
}

func (x *MemberSignLogListData) Reset() {
	*x = MemberSignLogListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberSignLogListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberSignLogListData) ProtoMessage() {}

func (x *MemberSignLogListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberSignLogListData.ProtoReflect.Descriptor instead.
func (*MemberSignLogListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{125}
}

func (x *MemberSignLogListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberSignLogListData) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *MemberSignLogListData) GetSignDate() string {
	if x != nil {
		return x.SignDate
	}
	return ""
}

func (x *MemberSignLogListData) GetContinueDays() int32 {
	if x != nil {
		return x.ContinueDays
	}
	return 0
}

func (x *MemberSignLogListData) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *MemberSignLogListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

type QueryMemberSignLogListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*MemberSignLogListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryMemberSignLogListResp) Reset() {
	*x = QueryMemberSignLogListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberSignLogListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberSignLogListResp) ProtoMessage() {}

func (x *QueryMemberSignLogListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberSignLogListResp.ProtoReflect.Descriptor instead.
func (*QueryMemberSignLogListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{126}
}

func (x *QueryMemberSignLogListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryMemberSignLogListResp) GetList() []*MemberSignLogListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加会员统计信息
type AddMemberStatisticsInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                                 //
	MemberId            int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                                     //
	ConsumeAmount       int64  `protobuf:"varint,3,opt,name=consume_amount,json=consumeAmount,proto3" json:"consume_amount,omitempty"`                      //累计消费金额
	OrderCount          int32  `protobuf:"varint,4,opt,name=order_count,json=orderCount,proto3" json:"order_count,omitempty"`                               //订单数量
	CouponCount         int32  `protobuf:"varint,5,opt,name=coupon_count,json=couponCount,proto3" json:"coupon_count,omitempty"`                            //优惠券数量
	CommentCount        int32  `protobuf:"varint,6,opt,name=comment_count,json=commentCount,proto3" json:"comment_count,omitempty"`                         //评价数
	ReturnOrderCount    int32  `protobuf:"varint,7,opt,name=return_order_count,json=returnOrderCount,proto3" json:"return_order_count,omitempty"`           //退货数量
	LoginCount          int32  `protobuf:"varint,8,opt,name=login_count,json=loginCount,proto3" json:"login_count,omitempty"`                               //登录次数
	AttendCount         int32  `protobuf:"varint,9,opt,name=attend_count,json=attendCount,proto3" json:"attend_count,omitempty"`                            //关注数量
	FansCount           int32  `protobuf:"varint,10,opt,name=fans_count,json=fansCount,proto3" json:"fans_count,omitempty"`                                 //粉丝数量
	CollectProductCount int32  `protobuf:"varint,11,opt,name=collect_product_count,json=collectProductCount,proto3" json:"collect_product_count,omitempty"` //收藏的商品数量
	CollectSubjectCount int32  `protobuf:"varint,12,opt,name=collect_subject_count,json=collectSubjectCount,proto3" json:"collect_subject_count,omitempty"` //收藏的专题活动数量
	CollectTopicCount   int32  `protobuf:"varint,13,opt,name=collect_topic_count,json=collectTopicCount,proto3" json:"collect_topic_count,omitempty"`       //收藏的评论数量
	CollectCommentCount int32  `protobuf:"varint,14,opt,name=collect_comment_count,json=collectCommentCount,proto3" json:"collect_comment_count,omitempty"` //收藏的专题活动数量
	InviteFriendCount   int32  `protobuf:"varint,15,opt,name=invite_friend_count,json=inviteFriendCount,proto3" json:"invite_friend_count,omitempty"`       //邀请好友数
	RecentOrderTime     string `protobuf:"bytes,16,opt,name=recent_order_time,json=recentOrderTime,proto3" json:"recent_order_time,omitempty"`              //最后一次下订单时间
}

func (x *AddMemberStatisticsInfoReq) Reset() {
	*x = AddMemberStatisticsInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberStatisticsInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberStatisticsInfoReq) ProtoMessage() {}

func (x *AddMemberStatisticsInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberStatisticsInfoReq.ProtoReflect.Descriptor instead.
func (*AddMemberStatisticsInfoReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{127}
}

func (x *AddMemberStatisticsInfoReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddMemberStatisticsInfoReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *AddMemberStatisticsInfoReq) GetConsumeAmount() int64 {
	if x != nil {
		return x.ConsumeAmount
	}
	return 0
}

func (x *AddMemberStatisticsInfoReq) GetOrderCount() int32 {
	if x != nil {
		return x.OrderCount
	}
	return 0
}

func (x *AddMemberStatisticsInfoReq) GetCouponCount() int32 {
	if x != nil {
		return x.CouponCount
	}
	return 0
}

func (x *AddMemberStatisticsInfoReq) GetCommentCount() int32 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *AddMemberStatisticsInfoReq) GetReturnOrderCount() int32 {
	if x != nil {
		return x.ReturnOrderCount
	}
	return 0
}

func (x *AddMemberStatisticsInfoReq) GetLoginCount() int32 {
	if x != nil {
		return x.LoginCount
	}
	return 0
}

func (x *AddMemberStatisticsInfoReq) GetAttendCount() int32 {
	if x != nil {
		return x.AttendCount
	}
	return 0
}

func (x *AddMemberStatisticsInfoReq) GetFansCount() int32 {
	if x != nil {
		return x.FansCount
	}
	return 0
}

func (x *AddMemberStatisticsInfoReq) GetCollectProductCount() int32 {
	if x != nil {
		return x.CollectProductCount
	}
	return 0
}

func (x *AddMemberStatisticsInfoReq) GetCollectSubjectCount() int32 {
	if x != nil {
		return x.CollectSubjectCount
	}
	return 0
}

func (x *AddMemberStatisticsInfoReq) GetCollectTopicCount() int32 {
	if x != nil {
		return x.CollectTopicCount
	}
	return 0
}

func (x *AddMemberStatisticsInfoReq) GetCollectCommentCount() int32 {
	if x != nil {
		return x.CollectCommentCount
	}
	return 0
}

func (x *AddMemberStatisticsInfoReq) GetInviteFriendCount() int32 {
	if x != nil {
		return x.InviteFriendCount
	}
	return 0
}

func (x *AddMemberStatisticsInfoReq) GetRecentOrderTime() string {
	if x != nil {
		return x.RecentOrderTime
	}
	return ""
}

type AddMemberStatisticsInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddMemberStatisticsInfoResp) Reset() {
	*x = AddMemberStatisticsInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberStatisticsInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberStatisticsInfoResp) ProtoMessage() {}

func (x *AddMemberStatisticsInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberStatisticsInfoResp.ProtoReflect.Descriptor instead.
func (*AddMemberStatisticsInfoResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{128}
}

func (x *AddMemberStatisticsInfoResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询会员统计信息详情
type QueryMemberStatisticsInfoDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId int64 `protobuf:"varint,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` //
}

func (x *QueryMemberStatisticsInfoDetailReq) Reset() {
	*x = QueryMemberStatisticsInfoDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberStatisticsInfoDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberStatisticsInfoDetailReq) ProtoMessage() {}

func (x *QueryMemberStatisticsInfoDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberStatisticsInfoDetailReq.ProtoReflect.Descriptor instead.
func (*QueryMemberStatisticsInfoDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{129}
}

func (x *QueryMemberStatisticsInfoDetailReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type QueryMemberStatisticsInfoDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                                 //
	MemberId            int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                                     //
	ConsumeAmount       int64  `protobuf:"varint,3,opt,name=consume_amount,json=consumeAmount,proto3" json:"consume_amount,omitempty"`                      //累计消费金额
	OrderCount          int32  `protobuf:"varint,4,opt,name=order_count,json=orderCount,proto3" json:"order_count,omitempty"`                               //订单数量
	CouponCount         int32  `protobuf:"varint,5,opt,name=coupon_count,json=couponCount,proto3" json:"coupon_count,omitempty"`                            //优惠券数量
	CommentCount        int32  `protobuf:"varint,6,opt,name=comment_count,json=commentCount,proto3" json:"comment_count,omitempty"`                         //评价数
	ReturnOrderCount    int32  `protobuf:"varint,7,opt,name=return_order_count,json=returnOrderCount,proto3" json:"return_order_count,omitempty"`           //退货数量
	LoginCount          int32  `protobuf:"varint,8,opt,name=login_count,json=loginCount,proto3" json:"login_count,omitempty"`                               //登录次数
	AttendCount         int32  `protobuf:"varint,9,opt,name=attend_count,json=attendCount,proto3" json:"attend_count,omitempty"`                            //关注数量
	FansCount           int32  `protobuf:"varint,10,opt,name=fans_count,json=fansCount,proto3" json:"fans_count,omitempty"`                                 //粉丝数量
	CollectProductCount int32  `protobuf:"varint,11,opt,name=collect_product_count,json=collectProductCount,proto3" json:"collect_product_count,omitempty"` //收藏的商品数量
	CollectSubjectCount int32  `protobuf:"varint,12,opt,name=collect_subject_count,json=collectSubjectCount,proto3" json:"collect_subject_count,omitempty"` //收藏的专题活动数量
	CollectTopicCount   int32  `protobuf:"varint,13,opt,name=collect_topic_count,json=collectTopicCount,proto3" json:"collect_topic_count,omitempty"`       //收藏的评论数量
	CollectCommentCount int32  `protobuf:"varint,14,opt,name=collect_comment_count,json=collectCommentCount,proto3" json:"collect_comment_count,omitempty"` //收藏的专题活动数量
	InviteFriendCount   int32  `protobuf:"varint,15,opt,name=invite_friend_count,json=inviteFriendCount,proto3" json:"invite_friend_count,omitempty"`       //邀请好友数
	RecentOrderTime     string `protobuf:"bytes,16,opt,name=recent_order_time,json=recentOrderTime,proto3" json:"recent_order_time,omitempty"`              //最后一次下订单时间
}

func (x *QueryMemberStatisticsInfoDetailResp) Reset() {
	*x = QueryMemberStatisticsInfoDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberStatisticsInfoDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberStatisticsInfoDetailResp) ProtoMessage() {}

func (x *QueryMemberStatisticsInfoDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberStatisticsInfoDetailResp.ProtoReflect.Descriptor instead.
func (*QueryMemberStatisticsInfoDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{130}
}

func (x *QueryMemberStatisticsInfoDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMemberStatisticsInfoDetailResp) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryMemberStatisticsInfoDetailResp) GetConsumeAmount() int64 {
	if x != nil {
		return x.ConsumeAmount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoDetailResp) GetOrderCount() int32 {
	if x != nil {
		return x.OrderCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoDetailResp) GetCouponCount() int32 {
	if x != nil {
		return x.CouponCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoDetailResp) GetCommentCount() int32 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoDetailResp) GetReturnOrderCount() int32 {
	if x != nil {
		return x.ReturnOrderCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoDetailResp) GetLoginCount() int32 {
	if x != nil {
		return x.LoginCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoDetailResp) GetAttendCount() int32 {
	if x != nil {
		return x.AttendCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoDetailResp) GetFansCount() int32 {
	if x != nil {
		return x.FansCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoDetailResp) GetCollectProductCount() int32 {
	if x != nil {
		return x.CollectProductCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoDetailResp) GetCollectSubjectCount() int32 {
	if x != nil {
		return x.CollectSubjectCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoDetailResp) GetCollectTopicCount() int32 {
	if x != nil {
		return x.CollectTopicCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoDetailResp) GetCollectCommentCount() int32 {
	if x != nil {
		return x.CollectCommentCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoDetailResp) GetInviteFriendCount() int32 {
	if x != nil {
		return x.InviteFriendCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoDetailResp) GetRecentOrderTime() string {
	if x != nil {
		return x.RecentOrderTime
	}
	return ""
}

// 查询会员统计信息列表
type QueryMemberStatisticsInfoListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum  int64 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`    //第几页
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` //每页的数量
}

func (x *QueryMemberStatisticsInfoListReq) Reset() {
	*x = QueryMemberStatisticsInfoListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberStatisticsInfoListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberStatisticsInfoListReq) ProtoMessage() {}

func (x *QueryMemberStatisticsInfoListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberStatisticsInfoListReq.ProtoReflect.Descriptor instead.
func (*QueryMemberStatisticsInfoListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{131}
}

func (x *QueryMemberStatisticsInfoListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryMemberStatisticsInfoListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type QueryMemberStatisticsInfoListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                                 //
	MemberId            int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                                     //
	ConsumeAmount       int64  `protobuf:"varint,3,opt,name=consume_amount,json=consumeAmount,proto3" json:"consume_amount,omitempty"`                      //累计消费金额
	OrderCount          int32  `protobuf:"varint,4,opt,name=order_count,json=orderCount,proto3" json:"order_count,omitempty"`                               //订单数量
	CouponCount         int32  `protobuf:"varint,5,opt,name=coupon_count,json=couponCount,proto3" json:"coupon_count,omitempty"`                            //优惠券数量
	CommentCount        int32  `protobuf:"varint,6,opt,name=comment_count,json=commentCount,proto3" json:"comment_count,omitempty"`                         //评价数
	ReturnOrderCount    int32  `protobuf:"varint,7,opt,name=return_order_count,json=returnOrderCount,proto3" json:"return_order_count,omitempty"`           //退货数量
	LoginCount          int32  `protobuf:"varint,8,opt,name=login_count,json=loginCount,proto3" json:"login_count,omitempty"`                               //登录次数
	AttendCount         int32  `protobuf:"varint,9,opt,name=attend_count,json=attendCount,proto3" json:"attend_count,omitempty"`                            //关注数量
	FansCount           int32  `protobuf:"varint,10,opt,name=fans_count,json=fansCount,proto3" json:"fans_count,omitempty"`                                 //粉丝数量
	CollectProductCount int32  `protobuf:"varint,11,opt,name=collect_product_count,json=collectProductCount,proto3" json:"collect_product_count,omitempty"` //收藏的商品数量
	CollectSubjectCount int32  `protobuf:"varint,12,opt,name=collect_subject_count,json=collectSubjectCount,proto3" json:"collect_subject_count,omitempty"` //收藏的专题活动数量
	CollectTopicCount   int32  `protobuf:"varint,13,opt,name=collect_topic_count,json=collectTopicCount,proto3" json:"collect_topic_count,omitempty"`       //收藏的评论数量
	CollectCommentCount int32  `protobuf:"varint,14,opt,name=collect_comment_count,json=collectCommentCount,proto3" json:"collect_comment_count,omitempty"` //收藏的专题活动数量
	InviteFriendCount   int32  `protobuf:"varint,15,opt,name=invite_friend_count,json=inviteFriendCount,proto3" json:"invite_friend_count,omitempty"`       //邀请好友数
	RecentOrderTime     string `protobuf:"bytes,16,opt,name=recent_order_time,json=recentOrderTime,proto3" json:"recent_order_time,omitempty"`              //最后一次下订单时间
}

func (x *QueryMemberStatisticsInfoListData) Reset() {
	*x = QueryMemberStatisticsInfoListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberStatisticsInfoListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberStatisticsInfoListData) ProtoMessage() {}

func (x *QueryMemberStatisticsInfoListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberStatisticsInfoListData.ProtoReflect.Descriptor instead.
func (*QueryMemberStatisticsInfoListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{132}
}

func (x *QueryMemberStatisticsInfoListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMemberStatisticsInfoListData) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryMemberStatisticsInfoListData) GetConsumeAmount() int64 {
	if x != nil {
		return x.ConsumeAmount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoListData) GetOrderCount() int32 {
	if x != nil {
		return x.OrderCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoListData) GetCouponCount() int32 {
	if x != nil {
		return x.CouponCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoListData) GetCommentCount() int32 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoListData) GetReturnOrderCount() int32 {
	if x != nil {
		return x.ReturnOrderCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoListData) GetLoginCount() int32 {
	if x != nil {
		return x.LoginCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoListData) GetAttendCount() int32 {
	if x != nil {
		return x.AttendCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoListData) GetFansCount() int32 {
	if x != nil {
		return x.FansCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoListData) GetCollectProductCount() int32 {
	if x != nil {
		return x.CollectProductCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoListData) GetCollectSubjectCount() int32 {
	if x != nil {
		return x.CollectSubjectCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoListData) GetCollectTopicCount() int32 {
	if x != nil {
		return x.CollectTopicCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoListData) GetCollectCommentCount() int32 {
	if x != nil {
		return x.CollectCommentCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoListData) GetInviteFriendCount() int32 {
	if x != nil {
		return x.InviteFriendCount
	}
	return 0
}

func (x *QueryMemberStatisticsInfoListData) GetRecentOrderTime() string {
	if x != nil {
		return x.RecentOrderTime
	}
	return ""
}

type QueryMemberStatisticsInfoListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                                `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*QueryMemberStatisticsInfoListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryMemberStatisticsInfoListResp) Reset() {
	*x = QueryMemberStatisticsInfoListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberStatisticsInfoListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberStatisticsInfoListResp) ProtoMessage() {}

func (x *QueryMemberStatisticsInfoListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberStatisticsInfoListResp.ProtoReflect.Descriptor instead.
func (*QueryMemberStatisticsInfoListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{133}
}

func (x *QueryMemberStatisticsInfoListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryMemberStatisticsInfoListResp) GetList() []*QueryMemberStatisticsInfoListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加用户标签
type AddMemberTagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                           //主键ID
	TagName           string  `protobuf:"bytes,2,opt,name=tag_name,json=tagName,proto3" json:"tag_name,omitempty"`                                   //标签名称
	Description       string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`                                          //标签描述
	FinishOrderCount  int32   `protobuf:"varint,4,opt,name=finish_order_count,json=finishOrderCount,proto3" json:"finish_order_count,omitempty"`     //自动打标签完成订单数量
	FinishOrderAmount float32 `protobuf:"fixed32,5,opt,name=finish_order_amount,json=finishOrderAmount,proto3" json:"finish_order_amount,omitempty"` //自动打标签完成订单金额
	Status            int32   `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`                                                   //状态：0-禁用，1-启用
	CreateBy          int64   `protobuf:"varint,7,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`                               //创建人ID
}

func (x *AddMemberTagReq) Reset() {
	*x = AddMemberTagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberTagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberTagReq) ProtoMessage() {}

func (x *AddMemberTagReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberTagReq.ProtoReflect.Descriptor instead.
func (*AddMemberTagReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{134}
}

func (x *AddMemberTagReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddMemberTagReq) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

func (x *AddMemberTagReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddMemberTagReq) GetFinishOrderCount() int32 {
	if x != nil {
		return x.FinishOrderCount
	}
	return 0
}

func (x *AddMemberTagReq) GetFinishOrderAmount() float32 {
	if x != nil {
		return x.FinishOrderAmount
	}
	return 0
}

func (x *AddMemberTagReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddMemberTagReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

type AddMemberTagResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddMemberTagResp) Reset() {
	*x = AddMemberTagResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberTagResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberTagResp) ProtoMessage() {}

func (x *AddMemberTagResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberTagResp.ProtoReflect.Descriptor instead.
func (*AddMemberTagResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{135}
}

func (x *AddMemberTagResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除用户标签
type DeleteMemberTagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteMemberTagReq) Reset() {
	*x = DeleteMemberTagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberTagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberTagReq) ProtoMessage() {}

func (x *DeleteMemberTagReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberTagReq.ProtoReflect.Descriptor instead.
func (*DeleteMemberTagReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{136}
}

func (x *DeleteMemberTagReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteMemberTagResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteMemberTagResp) Reset() {
	*x = DeleteMemberTagResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberTagResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberTagResp) ProtoMessage() {}

func (x *DeleteMemberTagResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberTagResp.ProtoReflect.Descriptor instead.
func (*DeleteMemberTagResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{137}
}

func (x *DeleteMemberTagResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新用户标签
type UpdateMemberTagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                           //主键ID
	TagName           string  `protobuf:"bytes,2,opt,name=tag_name,json=tagName,proto3" json:"tag_name,omitempty"`                                   //标签名称
	Description       string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`                                          //标签描述
	FinishOrderCount  int32   `protobuf:"varint,4,opt,name=finish_order_count,json=finishOrderCount,proto3" json:"finish_order_count,omitempty"`     //自动打标签完成订单数量
	FinishOrderAmount float32 `protobuf:"fixed32,5,opt,name=finish_order_amount,json=finishOrderAmount,proto3" json:"finish_order_amount,omitempty"` //自动打标签完成订单金额
	Status            int32   `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`                                                   //状态：0-禁用，1-启用
	UpdateBy          int64   `protobuf:"varint,9,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`                               //更新人ID
}

func (x *UpdateMemberTagReq) Reset() {
	*x = UpdateMemberTagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberTagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberTagReq) ProtoMessage() {}

func (x *UpdateMemberTagReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberTagReq.ProtoReflect.Descriptor instead.
func (*UpdateMemberTagReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{138}
}

func (x *UpdateMemberTagReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateMemberTagReq) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

func (x *UpdateMemberTagReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateMemberTagReq) GetFinishOrderCount() int32 {
	if x != nil {
		return x.FinishOrderCount
	}
	return 0
}

func (x *UpdateMemberTagReq) GetFinishOrderAmount() float32 {
	if x != nil {
		return x.FinishOrderAmount
	}
	return 0
}

func (x *UpdateMemberTagReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateMemberTagReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

type UpdateMemberTagResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateMemberTagResp) Reset() {
	*x = UpdateMemberTagResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberTagResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberTagResp) ProtoMessage() {}

func (x *UpdateMemberTagResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberTagResp.ProtoReflect.Descriptor instead.
func (*UpdateMemberTagResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{139}
}

func (x *UpdateMemberTagResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新用户标签状态
type UpdateMemberTagStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids      []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`                    //主键ID
	Status   int32   `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`                     //状态：0-禁用，1-启用
	UpdateBy int64   `protobuf:"varint,9,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"` //更新人ID
}

func (x *UpdateMemberTagStatusReq) Reset() {
	*x = UpdateMemberTagStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberTagStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberTagStatusReq) ProtoMessage() {}

func (x *UpdateMemberTagStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberTagStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateMemberTagStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{140}
}

func (x *UpdateMemberTagStatusReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdateMemberTagStatusReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateMemberTagStatusReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

type UpdateMemberTagStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateMemberTagStatusResp) Reset() {
	*x = UpdateMemberTagStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberTagStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberTagStatusResp) ProtoMessage() {}

func (x *UpdateMemberTagStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberTagStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateMemberTagStatusResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{141}
}

func (x *UpdateMemberTagStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询用户标签详情
type QueryMemberTagDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryMemberTagDetailReq) Reset() {
	*x = QueryMemberTagDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberTagDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberTagDetailReq) ProtoMessage() {}

func (x *QueryMemberTagDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberTagDetailReq.ProtoReflect.Descriptor instead.
func (*QueryMemberTagDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{142}
}

func (x *QueryMemberTagDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryMemberTagDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                           //主键ID
	TagName           string  `protobuf:"bytes,2,opt,name=tag_name,json=tagName,proto3" json:"tag_name,omitempty"`                                   //标签名称
	Description       string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`                                          //标签描述
	FinishOrderCount  int32   `protobuf:"varint,4,opt,name=finish_order_count,json=finishOrderCount,proto3" json:"finish_order_count,omitempty"`     //自动打标签完成订单数量
	FinishOrderAmount float32 `protobuf:"fixed32,5,opt,name=finish_order_amount,json=finishOrderAmount,proto3" json:"finish_order_amount,omitempty"` //自动打标签完成订单金额
	Status            int32   `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`                                                   //状态：0-禁用，1-启用
	CreateBy          int64   `protobuf:"varint,7,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`                               //创建人ID
	CreateTime        string  `protobuf:"bytes,8,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                          //创建时间
	UpdateBy          int64   `protobuf:"varint,9,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`                               //更新人ID
	UpdateTime        string  `protobuf:"bytes,10,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`                         //更新时间
}

func (x *QueryMemberTagDetailResp) Reset() {
	*x = QueryMemberTagDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberTagDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberTagDetailResp) ProtoMessage() {}

func (x *QueryMemberTagDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberTagDetailResp.ProtoReflect.Descriptor instead.
func (*QueryMemberTagDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{143}
}

func (x *QueryMemberTagDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMemberTagDetailResp) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

func (x *QueryMemberTagDetailResp) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *QueryMemberTagDetailResp) GetFinishOrderCount() int32 {
	if x != nil {
		return x.FinishOrderCount
	}
	return 0
}

func (x *QueryMemberTagDetailResp) GetFinishOrderAmount() float32 {
	if x != nil {
		return x.FinishOrderAmount
	}
	return 0
}

func (x *QueryMemberTagDetailResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryMemberTagDetailResp) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *QueryMemberTagDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryMemberTagDetailResp) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *QueryMemberTagDetailResp) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 分页查询用户标签列表
type QueryMemberTagListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagName  string `protobuf:"bytes,1,opt,name=tag_name,json=tagName,proto3" json:"tag_name,omitempty"`     //标签名称
	Status   int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`                     //状态：0-禁用，1-启用
	PageNum  int32  `protobuf:"varint,7,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`    //第几页
	PageSize int32  `protobuf:"varint,8,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` //每页的数量
}

func (x *QueryMemberTagListReq) Reset() {
	*x = QueryMemberTagListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberTagListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberTagListReq) ProtoMessage() {}

func (x *QueryMemberTagListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberTagListReq.ProtoReflect.Descriptor instead.
func (*QueryMemberTagListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{144}
}

func (x *QueryMemberTagListReq) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

func (x *QueryMemberTagListReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryMemberTagListReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryMemberTagListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type MemberTagListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                           //主键ID
	TagName           string  `protobuf:"bytes,2,opt,name=tag_name,json=tagName,proto3" json:"tag_name,omitempty"`                                   //标签名称
	Description       string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`                                          //标签描述
	FinishOrderCount  int32   `protobuf:"varint,4,opt,name=finish_order_count,json=finishOrderCount,proto3" json:"finish_order_count,omitempty"`     //自动打标签完成订单数量
	FinishOrderAmount float32 `protobuf:"fixed32,5,opt,name=finish_order_amount,json=finishOrderAmount,proto3" json:"finish_order_amount,omitempty"` //自动打标签完成订单金额
	Status            int32   `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`                                                   //状态：0-禁用，1-启用
	CreateBy          int64   `protobuf:"varint,7,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`                               //创建人ID
	CreateTime        string  `protobuf:"bytes,8,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                          //创建时间
	UpdateBy          int64   `protobuf:"varint,9,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`                               //更新人ID
	UpdateTime        string  `protobuf:"bytes,10,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`                         //更新时间
}

func (x *MemberTagListData) Reset() {
	*x = MemberTagListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberTagListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberTagListData) ProtoMessage() {}

func (x *MemberTagListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberTagListData.ProtoReflect.Descriptor instead.
func (*MemberTagListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{145}
}

func (x *MemberTagListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberTagListData) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

func (x *MemberTagListData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MemberTagListData) GetFinishOrderCount() int32 {
	if x != nil {
		return x.FinishOrderCount
	}
	return 0
}

func (x *MemberTagListData) GetFinishOrderAmount() float32 {
	if x != nil {
		return x.FinishOrderAmount
	}
	return 0
}

func (x *MemberTagListData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MemberTagListData) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *MemberTagListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *MemberTagListData) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *MemberTagListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type QueryMemberTagListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*MemberTagListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryMemberTagListResp) Reset() {
	*x = QueryMemberTagListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberTagListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberTagListResp) ProtoMessage() {}

func (x *QueryMemberTagListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberTagListResp.ProtoReflect.Descriptor instead.
func (*QueryMemberTagListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{146}
}

func (x *QueryMemberTagListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryMemberTagListResp) GetList() []*MemberTagListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加会员标签关联
type AddMemberTagRelationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                             //主键ID
	MemberId int64 `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` //会员ID
	TagId    int64 `protobuf:"varint,3,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`          //标签ID
}

func (x *AddMemberTagRelationReq) Reset() {
	*x = AddMemberTagRelationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberTagRelationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberTagRelationReq) ProtoMessage() {}

func (x *AddMemberTagRelationReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberTagRelationReq.ProtoReflect.Descriptor instead.
func (*AddMemberTagRelationReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{147}
}

func (x *AddMemberTagRelationReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddMemberTagRelationReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *AddMemberTagRelationReq) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

type AddMemberTagRelationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddMemberTagRelationResp) Reset() {
	*x = AddMemberTagRelationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberTagRelationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberTagRelationResp) ProtoMessage() {}

func (x *AddMemberTagRelationResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberTagRelationResp.ProtoReflect.Descriptor instead.
func (*AddMemberTagRelationResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{148}
}

func (x *AddMemberTagRelationResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询会员标签关联详情
type QueryMemberTagRelationDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryMemberTagRelationDetailReq) Reset() {
	*x = QueryMemberTagRelationDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberTagRelationDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberTagRelationDetailReq) ProtoMessage() {}

func (x *QueryMemberTagRelationDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberTagRelationDetailReq.ProtoReflect.Descriptor instead.
func (*QueryMemberTagRelationDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{149}
}

func (x *QueryMemberTagRelationDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryMemberTagRelationDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                  //主键ID
	MemberId   int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`      //会员ID
	TagId      int64  `protobuf:"varint,3,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`               //标签ID
	CreateTime string `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` //创建时间
}

func (x *QueryMemberTagRelationDetailResp) Reset() {
	*x = QueryMemberTagRelationDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberTagRelationDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberTagRelationDetailResp) ProtoMessage() {}

func (x *QueryMemberTagRelationDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberTagRelationDetailResp.ProtoReflect.Descriptor instead.
func (*QueryMemberTagRelationDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{150}
}

func (x *QueryMemberTagRelationDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMemberTagRelationDetailResp) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryMemberTagRelationDetailResp) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *QueryMemberTagRelationDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

// 分页查询会员标签关联列表
type QueryMemberTagRelationListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId int64 `protobuf:"varint,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` //会员ID
	TagId    int64 `protobuf:"varint,2,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`          //标签ID
	PageNum  int32 `protobuf:"varint,3,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`    //第几页
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` //每页的数量
}

func (x *QueryMemberTagRelationListReq) Reset() {
	*x = QueryMemberTagRelationListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberTagRelationListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberTagRelationListReq) ProtoMessage() {}

func (x *QueryMemberTagRelationListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberTagRelationListReq.ProtoReflect.Descriptor instead.
func (*QueryMemberTagRelationListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{151}
}

func (x *QueryMemberTagRelationListReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryMemberTagRelationListReq) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *QueryMemberTagRelationListReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryMemberTagRelationListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type MemberTagRelationListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                  //主键ID
	MemberId   int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`      //会员ID
	TagId      int64  `protobuf:"varint,3,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`               //标签ID
	CreateTime string `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` //创建时间
}

func (x *MemberTagRelationListData) Reset() {
	*x = MemberTagRelationListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberTagRelationListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberTagRelationListData) ProtoMessage() {}

func (x *MemberTagRelationListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberTagRelationListData.ProtoReflect.Descriptor instead.
func (*MemberTagRelationListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{152}
}

func (x *MemberTagRelationListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberTagRelationListData) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *MemberTagRelationListData) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *MemberTagRelationListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

type QueryMemberTagRelationListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                        `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*MemberTagRelationListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryMemberTagRelationListResp) Reset() {
	*x = QueryMemberTagRelationListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberTagRelationListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberTagRelationListResp) ProtoMessage() {}

func (x *QueryMemberTagRelationListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberTagRelationListResp.ProtoReflect.Descriptor instead.
func (*QueryMemberTagRelationListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{153}
}

func (x *QueryMemberTagRelationListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryMemberTagRelationListResp) GetList() []*MemberTagRelationListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加会员任务
type AddMemberTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                            //主键ID
	TaskName      string `protobuf:"bytes,2,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`                 //任务名称
	TaskDesc      string `protobuf:"bytes,3,opt,name=task_desc,json=taskDesc,proto3" json:"task_desc,omitempty"`                 //任务描述
	TaskGrowth    int32  `protobuf:"varint,4,opt,name=task_growth,json=taskGrowth,proto3" json:"task_growth,omitempty"`          //赠送成长值
	TaskIntegral  int32  `protobuf:"varint,5,opt,name=task_integral,json=taskIntegral,proto3" json:"task_integral,omitempty"`    //赠送积分
	TaskType      int32  `protobuf:"varint,6,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`                //任务类型：0-新手任务，1-日常任务，2-周常任务，3-月常任务
	CompleteCount int32  `protobuf:"varint,7,opt,name=complete_count,json=completeCount,proto3" json:"complete_count,omitempty"` //需要完成次数
	RewardType    int32  `protobuf:"varint,8,opt,name=reward_type,json=rewardType,proto3" json:"reward_type,omitempty"`          //奖励类型：0-积分成长值，1-优惠券，2-抽奖次数
	RewardParams  string `protobuf:"bytes,9,opt,name=reward_params,json=rewardParams,proto3" json:"reward_params,omitempty"`     //奖励参数JSON
	StartTime     string `protobuf:"bytes,10,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`             //任务开始时间
	EndTime       string `protobuf:"bytes,11,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                   //任务结束时间
	Status        int32  `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`                                   //状态：0-禁用，1-启用
	Sort          int32  `protobuf:"varint,13,opt,name=sort,proto3" json:"sort,omitempty"`                                       //排序
	CreateBy      int64  `protobuf:"varint,14,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`               //创建人ID
}

func (x *AddMemberTaskReq) Reset() {
	*x = AddMemberTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberTaskReq) ProtoMessage() {}

func (x *AddMemberTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberTaskReq.ProtoReflect.Descriptor instead.
func (*AddMemberTaskReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{154}
}

func (x *AddMemberTaskReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddMemberTaskReq) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *AddMemberTaskReq) GetTaskDesc() string {
	if x != nil {
		return x.TaskDesc
	}
	return ""
}

func (x *AddMemberTaskReq) GetTaskGrowth() int32 {
	if x != nil {
		return x.TaskGrowth
	}
	return 0
}

func (x *AddMemberTaskReq) GetTaskIntegral() int32 {
	if x != nil {
		return x.TaskIntegral
	}
	return 0
}

func (x *AddMemberTaskReq) GetTaskType() int32 {
	if x != nil {
		return x.TaskType
	}
	return 0
}

func (x *AddMemberTaskReq) GetCompleteCount() int32 {
	if x != nil {
		return x.CompleteCount
	}
	return 0
}

func (x *AddMemberTaskReq) GetRewardType() int32 {
	if x != nil {
		return x.RewardType
	}
	return 0
}

func (x *AddMemberTaskReq) GetRewardParams() string {
	if x != nil {
		return x.RewardParams
	}
	return ""
}

func (x *AddMemberTaskReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *AddMemberTaskReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *AddMemberTaskReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddMemberTaskReq) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *AddMemberTaskReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

type AddMemberTaskResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddMemberTaskResp) Reset() {
	*x = AddMemberTaskResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberTaskResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberTaskResp) ProtoMessage() {}

func (x *AddMemberTaskResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberTaskResp.ProtoReflect.Descriptor instead.
func (*AddMemberTaskResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{155}
}

func (x *AddMemberTaskResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除会员任务
type DeleteMemberTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteMemberTaskReq) Reset() {
	*x = DeleteMemberTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberTaskReq) ProtoMessage() {}

func (x *DeleteMemberTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberTaskReq.ProtoReflect.Descriptor instead.
func (*DeleteMemberTaskReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{156}
}

func (x *DeleteMemberTaskReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteMemberTaskResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteMemberTaskResp) Reset() {
	*x = DeleteMemberTaskResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemberTaskResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberTaskResp) ProtoMessage() {}

func (x *DeleteMemberTaskResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberTaskResp.ProtoReflect.Descriptor instead.
func (*DeleteMemberTaskResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{157}
}

func (x *DeleteMemberTaskResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新会员任务
type UpdateMemberTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                            //主键ID
	TaskName      string `protobuf:"bytes,2,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`                 //任务名称
	TaskDesc      string `protobuf:"bytes,3,opt,name=task_desc,json=taskDesc,proto3" json:"task_desc,omitempty"`                 //任务描述
	TaskGrowth    int32  `protobuf:"varint,4,opt,name=task_growth,json=taskGrowth,proto3" json:"task_growth,omitempty"`          //赠送成长值
	TaskIntegral  int32  `protobuf:"varint,5,opt,name=task_integral,json=taskIntegral,proto3" json:"task_integral,omitempty"`    //赠送积分
	TaskType      int32  `protobuf:"varint,6,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`                //任务类型：0-新手任务，1-日常任务，2-周常任务，3-月常任务
	CompleteCount int32  `protobuf:"varint,7,opt,name=complete_count,json=completeCount,proto3" json:"complete_count,omitempty"` //需要完成次数
	RewardType    int32  `protobuf:"varint,8,opt,name=reward_type,json=rewardType,proto3" json:"reward_type,omitempty"`          //奖励类型：0-积分成长值，1-优惠券，2-抽奖次数
	RewardParams  string `protobuf:"bytes,9,opt,name=reward_params,json=rewardParams,proto3" json:"reward_params,omitempty"`     //奖励参数JSON
	StartTime     string `protobuf:"bytes,10,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`             //任务开始时间
	EndTime       string `protobuf:"bytes,11,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                   //任务结束时间
	Status        int32  `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`                                   //状态：0-禁用，1-启用
	Sort          int32  `protobuf:"varint,13,opt,name=sort,proto3" json:"sort,omitempty"`                                       //排序
	UpdateBy      int64  `protobuf:"varint,16,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`               //更新人ID
}

func (x *UpdateMemberTaskReq) Reset() {
	*x = UpdateMemberTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberTaskReq) ProtoMessage() {}

func (x *UpdateMemberTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberTaskReq.ProtoReflect.Descriptor instead.
func (*UpdateMemberTaskReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{158}
}

func (x *UpdateMemberTaskReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateMemberTaskReq) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *UpdateMemberTaskReq) GetTaskDesc() string {
	if x != nil {
		return x.TaskDesc
	}
	return ""
}

func (x *UpdateMemberTaskReq) GetTaskGrowth() int32 {
	if x != nil {
		return x.TaskGrowth
	}
	return 0
}

func (x *UpdateMemberTaskReq) GetTaskIntegral() int32 {
	if x != nil {
		return x.TaskIntegral
	}
	return 0
}

func (x *UpdateMemberTaskReq) GetTaskType() int32 {
	if x != nil {
		return x.TaskType
	}
	return 0
}

func (x *UpdateMemberTaskReq) GetCompleteCount() int32 {
	if x != nil {
		return x.CompleteCount
	}
	return 0
}

func (x *UpdateMemberTaskReq) GetRewardType() int32 {
	if x != nil {
		return x.RewardType
	}
	return 0
}

func (x *UpdateMemberTaskReq) GetRewardParams() string {
	if x != nil {
		return x.RewardParams
	}
	return ""
}

func (x *UpdateMemberTaskReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *UpdateMemberTaskReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *UpdateMemberTaskReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateMemberTaskReq) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *UpdateMemberTaskReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

type UpdateMemberTaskResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateMemberTaskResp) Reset() {
	*x = UpdateMemberTaskResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberTaskResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberTaskResp) ProtoMessage() {}

func (x *UpdateMemberTaskResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberTaskResp.ProtoReflect.Descriptor instead.
func (*UpdateMemberTaskResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{159}
}

func (x *UpdateMemberTaskResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新会员任务状态
type UpdateMemberTaskStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids      []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`                     //主键ID
	Status   int32   `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`                     //状态：0-禁用，1-启用
	UpdateBy int64   `protobuf:"varint,16,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"` //更新人ID
}

func (x *UpdateMemberTaskStatusReq) Reset() {
	*x = UpdateMemberTaskStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberTaskStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberTaskStatusReq) ProtoMessage() {}

func (x *UpdateMemberTaskStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberTaskStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateMemberTaskStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{160}
}

func (x *UpdateMemberTaskStatusReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdateMemberTaskStatusReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateMemberTaskStatusReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

type UpdateMemberTaskStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateMemberTaskStatusResp) Reset() {
	*x = UpdateMemberTaskStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberTaskStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberTaskStatusResp) ProtoMessage() {}

func (x *UpdateMemberTaskStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberTaskStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateMemberTaskStatusResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{161}
}

func (x *UpdateMemberTaskStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询会员任务详情
type QueryMemberTaskDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryMemberTaskDetailReq) Reset() {
	*x = QueryMemberTaskDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberTaskDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberTaskDetailReq) ProtoMessage() {}

func (x *QueryMemberTaskDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberTaskDetailReq.ProtoReflect.Descriptor instead.
func (*QueryMemberTaskDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{162}
}

func (x *QueryMemberTaskDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryMemberTaskDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                            //主键ID
	TaskName      string `protobuf:"bytes,2,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`                 //任务名称
	TaskDesc      string `protobuf:"bytes,3,opt,name=task_desc,json=taskDesc,proto3" json:"task_desc,omitempty"`                 //任务描述
	TaskGrowth    int32  `protobuf:"varint,4,opt,name=task_growth,json=taskGrowth,proto3" json:"task_growth,omitempty"`          //赠送成长值
	TaskIntegral  int32  `protobuf:"varint,5,opt,name=task_integral,json=taskIntegral,proto3" json:"task_integral,omitempty"`    //赠送积分
	TaskType      int32  `protobuf:"varint,6,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`                //任务类型：0-新手任务，1-日常任务，2-周常任务，3-月常任务
	CompleteCount int32  `protobuf:"varint,7,opt,name=complete_count,json=completeCount,proto3" json:"complete_count,omitempty"` //需要完成次数
	RewardType    int32  `protobuf:"varint,8,opt,name=reward_type,json=rewardType,proto3" json:"reward_type,omitempty"`          //奖励类型：0-积分成长值，1-优惠券，2-抽奖次数
	RewardParams  string `protobuf:"bytes,9,opt,name=reward_params,json=rewardParams,proto3" json:"reward_params,omitempty"`     //奖励参数JSON
	StartTime     string `protobuf:"bytes,10,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`             //任务开始时间
	EndTime       string `protobuf:"bytes,11,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                   //任务结束时间
	Status        int32  `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`                                   //状态：0-禁用，1-启用
	Sort          int32  `protobuf:"varint,13,opt,name=sort,proto3" json:"sort,omitempty"`                                       //排序
	CreateBy      int64  `protobuf:"varint,14,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`               //创建人ID
	CreateTime    string `protobuf:"bytes,15,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`          //创建时间
	UpdateBy      int64  `protobuf:"varint,16,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`               //更新人ID
	UpdateTime    string `protobuf:"bytes,17,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`          //更新时间
}

func (x *QueryMemberTaskDetailResp) Reset() {
	*x = QueryMemberTaskDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberTaskDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberTaskDetailResp) ProtoMessage() {}

func (x *QueryMemberTaskDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberTaskDetailResp.ProtoReflect.Descriptor instead.
func (*QueryMemberTaskDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{163}
}

func (x *QueryMemberTaskDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMemberTaskDetailResp) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *QueryMemberTaskDetailResp) GetTaskDesc() string {
	if x != nil {
		return x.TaskDesc
	}
	return ""
}

func (x *QueryMemberTaskDetailResp) GetTaskGrowth() int32 {
	if x != nil {
		return x.TaskGrowth
	}
	return 0
}

func (x *QueryMemberTaskDetailResp) GetTaskIntegral() int32 {
	if x != nil {
		return x.TaskIntegral
	}
	return 0
}

func (x *QueryMemberTaskDetailResp) GetTaskType() int32 {
	if x != nil {
		return x.TaskType
	}
	return 0
}

func (x *QueryMemberTaskDetailResp) GetCompleteCount() int32 {
	if x != nil {
		return x.CompleteCount
	}
	return 0
}

func (x *QueryMemberTaskDetailResp) GetRewardType() int32 {
	if x != nil {
		return x.RewardType
	}
	return 0
}

func (x *QueryMemberTaskDetailResp) GetRewardParams() string {
	if x != nil {
		return x.RewardParams
	}
	return ""
}

func (x *QueryMemberTaskDetailResp) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *QueryMemberTaskDetailResp) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *QueryMemberTaskDetailResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryMemberTaskDetailResp) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *QueryMemberTaskDetailResp) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *QueryMemberTaskDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryMemberTaskDetailResp) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *QueryMemberTaskDetailResp) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 分页查询会员任务列表
type QueryMemberTaskListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskName   string `protobuf:"bytes,1,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`        //任务名称
	TaskType   int32  `protobuf:"varint,2,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`       //任务类型：0-新手任务，1-日常任务，2-周常任务，3-月常任务
	RewardType int32  `protobuf:"varint,3,opt,name=reward_type,json=rewardType,proto3" json:"reward_type,omitempty"` //奖励类型：0-积分成长值，1-优惠券，2-抽奖次数
	StartTime  string `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`     //任务开始时间
	EndTime    string `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`           //任务结束时间
	Status     int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`                           //状态：0-禁用，1-启用
	PageNum    int32  `protobuf:"varint,7,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`          //第几页
	PageSize   int32  `protobuf:"varint,8,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`       //每页的数量
}

func (x *QueryMemberTaskListReq) Reset() {
	*x = QueryMemberTaskListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberTaskListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberTaskListReq) ProtoMessage() {}

func (x *QueryMemberTaskListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberTaskListReq.ProtoReflect.Descriptor instead.
func (*QueryMemberTaskListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{164}
}

func (x *QueryMemberTaskListReq) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *QueryMemberTaskListReq) GetTaskType() int32 {
	if x != nil {
		return x.TaskType
	}
	return 0
}

func (x *QueryMemberTaskListReq) GetRewardType() int32 {
	if x != nil {
		return x.RewardType
	}
	return 0
}

func (x *QueryMemberTaskListReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *QueryMemberTaskListReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *QueryMemberTaskListReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryMemberTaskListReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryMemberTaskListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type MemberTaskListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                            //主键ID
	TaskName      string `protobuf:"bytes,2,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`                 //任务名称
	TaskDesc      string `protobuf:"bytes,3,opt,name=task_desc,json=taskDesc,proto3" json:"task_desc,omitempty"`                 //任务描述
	TaskGrowth    int32  `protobuf:"varint,4,opt,name=task_growth,json=taskGrowth,proto3" json:"task_growth,omitempty"`          //赠送成长值
	TaskIntegral  int32  `protobuf:"varint,5,opt,name=task_integral,json=taskIntegral,proto3" json:"task_integral,omitempty"`    //赠送积分
	TaskType      int32  `protobuf:"varint,6,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`                //任务类型：0-新手任务，1-日常任务，2-周常任务，3-月常任务
	CompleteCount int32  `protobuf:"varint,7,opt,name=complete_count,json=completeCount,proto3" json:"complete_count,omitempty"` //需要完成次数
	RewardType    int32  `protobuf:"varint,8,opt,name=reward_type,json=rewardType,proto3" json:"reward_type,omitempty"`          //奖励类型：0-积分成长值，1-优惠券，2-抽奖次数
	RewardParams  string `protobuf:"bytes,9,opt,name=reward_params,json=rewardParams,proto3" json:"reward_params,omitempty"`     //奖励参数JSON
	StartTime     string `protobuf:"bytes,10,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`             //任务开始时间
	EndTime       string `protobuf:"bytes,11,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                   //任务结束时间
	Status        int32  `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`                                   //状态：0-禁用，1-启用
	Sort          int32  `protobuf:"varint,13,opt,name=sort,proto3" json:"sort,omitempty"`                                       //排序
	CreateBy      int64  `protobuf:"varint,14,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`               //创建人ID
	CreateTime    string `protobuf:"bytes,15,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`          //创建时间
	UpdateBy      int64  `protobuf:"varint,16,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`               //更新人ID
	UpdateTime    string `protobuf:"bytes,17,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`          //更新时间
}

func (x *MemberTaskListData) Reset() {
	*x = MemberTaskListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberTaskListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberTaskListData) ProtoMessage() {}

func (x *MemberTaskListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberTaskListData.ProtoReflect.Descriptor instead.
func (*MemberTaskListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{165}
}

func (x *MemberTaskListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberTaskListData) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *MemberTaskListData) GetTaskDesc() string {
	if x != nil {
		return x.TaskDesc
	}
	return ""
}

func (x *MemberTaskListData) GetTaskGrowth() int32 {
	if x != nil {
		return x.TaskGrowth
	}
	return 0
}

func (x *MemberTaskListData) GetTaskIntegral() int32 {
	if x != nil {
		return x.TaskIntegral
	}
	return 0
}

func (x *MemberTaskListData) GetTaskType() int32 {
	if x != nil {
		return x.TaskType
	}
	return 0
}

func (x *MemberTaskListData) GetCompleteCount() int32 {
	if x != nil {
		return x.CompleteCount
	}
	return 0
}

func (x *MemberTaskListData) GetRewardType() int32 {
	if x != nil {
		return x.RewardType
	}
	return 0
}

func (x *MemberTaskListData) GetRewardParams() string {
	if x != nil {
		return x.RewardParams
	}
	return ""
}

func (x *MemberTaskListData) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *MemberTaskListData) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *MemberTaskListData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MemberTaskListData) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *MemberTaskListData) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *MemberTaskListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *MemberTaskListData) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *MemberTaskListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type QueryMemberTaskListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*MemberTaskListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryMemberTaskListResp) Reset() {
	*x = QueryMemberTaskListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberTaskListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberTaskListResp) ProtoMessage() {}

func (x *QueryMemberTaskListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberTaskListResp.ProtoReflect.Descriptor instead.
func (*QueryMemberTaskListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{166}
}

func (x *QueryMemberTaskListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryMemberTaskListResp) GetList() []*MemberTaskListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加会员任务关联
type AddMemberTaskRelationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                             //主键ID
	MemberId int64 `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` //会员ID
	TaskId   int64 `protobuf:"varint,3,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`       //任务ID
}

func (x *AddMemberTaskRelationReq) Reset() {
	*x = AddMemberTaskRelationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberTaskRelationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberTaskRelationReq) ProtoMessage() {}

func (x *AddMemberTaskRelationReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberTaskRelationReq.ProtoReflect.Descriptor instead.
func (*AddMemberTaskRelationReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{167}
}

func (x *AddMemberTaskRelationReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddMemberTaskRelationReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *AddMemberTaskRelationReq) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type AddMemberTaskRelationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddMemberTaskRelationResp) Reset() {
	*x = AddMemberTaskRelationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberTaskRelationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberTaskRelationResp) ProtoMessage() {}

func (x *AddMemberTaskRelationResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberTaskRelationResp.ProtoReflect.Descriptor instead.
func (*AddMemberTaskRelationResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{168}
}

func (x *AddMemberTaskRelationResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UpdateMemberTaskRelationStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateMemberTaskRelationStatusResp) Reset() {
	*x = UpdateMemberTaskRelationStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberTaskRelationStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberTaskRelationStatusResp) ProtoMessage() {}

func (x *UpdateMemberTaskRelationStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberTaskRelationStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateMemberTaskRelationStatusResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{169}
}

func (x *UpdateMemberTaskRelationStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询会员任务关联详情
type QueryMemberTaskRelationDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryMemberTaskRelationDetailReq) Reset() {
	*x = QueryMemberTaskRelationDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberTaskRelationDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberTaskRelationDetailReq) ProtoMessage() {}

func (x *QueryMemberTaskRelationDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberTaskRelationDetailReq.ProtoReflect.Descriptor instead.
func (*QueryMemberTaskRelationDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{170}
}

func (x *QueryMemberTaskRelationDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryMemberTaskRelationDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                  //主键ID
	MemberId   int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`      //会员ID
	TaskId     int64  `protobuf:"varint,3,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`            //任务ID
	CreateTime string `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` //创建时间
}

func (x *QueryMemberTaskRelationDetailResp) Reset() {
	*x = QueryMemberTaskRelationDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberTaskRelationDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberTaskRelationDetailResp) ProtoMessage() {}

func (x *QueryMemberTaskRelationDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberTaskRelationDetailResp.ProtoReflect.Descriptor instead.
func (*QueryMemberTaskRelationDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{171}
}

func (x *QueryMemberTaskRelationDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMemberTaskRelationDetailResp) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryMemberTaskRelationDetailResp) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *QueryMemberTaskRelationDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

// 分页查询会员任务关联列表
type QueryMemberTaskRelationListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId int64 `protobuf:"varint,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` //会员ID
	TaskId   int64 `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`       //任务ID
	PageNum  int32 `protobuf:"varint,3,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`    //第几页
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` //每页的数量
}

func (x *QueryMemberTaskRelationListReq) Reset() {
	*x = QueryMemberTaskRelationListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberTaskRelationListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberTaskRelationListReq) ProtoMessage() {}

func (x *QueryMemberTaskRelationListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberTaskRelationListReq.ProtoReflect.Descriptor instead.
func (*QueryMemberTaskRelationListReq) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{172}
}

func (x *QueryMemberTaskRelationListReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryMemberTaskRelationListReq) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *QueryMemberTaskRelationListReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryMemberTaskRelationListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type MemberTaskRelationListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                  //主键ID
	MemberId   int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`      //会员ID
	TaskId     int64  `protobuf:"varint,3,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`            //任务ID
	CreateTime string `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` //创建时间
}

func (x *MemberTaskRelationListData) Reset() {
	*x = MemberTaskRelationListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberTaskRelationListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberTaskRelationListData) ProtoMessage() {}

func (x *MemberTaskRelationListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberTaskRelationListData.ProtoReflect.Descriptor instead.
func (*MemberTaskRelationListData) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{173}
}

func (x *MemberTaskRelationListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberTaskRelationListData) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *MemberTaskRelationListData) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *MemberTaskRelationListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

type QueryMemberTaskRelationListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                         `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*MemberTaskRelationListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryMemberTaskRelationListResp) Reset() {
	*x = QueryMemberTaskRelationListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_ums_ums_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMemberTaskRelationListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberTaskRelationListResp) ProtoMessage() {}

func (x *QueryMemberTaskRelationListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_ums_ums_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberTaskRelationListResp.ProtoReflect.Descriptor instead.
func (*QueryMemberTaskRelationListResp) Descriptor() ([]byte, []int) {
	return file_rpc_ums_ums_proto_rawDescGZIP(), []int{174}
}

func (x *QueryMemberTaskRelationListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryMemberTaskRelationListResp) GetList() []*MemberTaskRelationListData {
	if x != nil {
		return x.List
	}
	return nil
}

var File_rpc_ums_ums_proto protoreflect.FileDescriptor

var file_rpc_ums_ums_proto_rawDesc = []byte{
	0x0a, 0x11, 0x72, 0x70, 0x63, 0x2f, 0x75, 0x6d, 0x73, 0x2f, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x09, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0xf5,
	0x01, 0x0a, 0x1f, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x70, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x12, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x15, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x12, 0x6d, 0x61, 0x78, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x50,
	0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x5f, 0x75,
	0x6e, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x75, 0x73, 0x65, 0x55, 0x6e,
	0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x36, 0x0a, 0x20, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x36,
	0x0a, 0x22, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x39, 0x0a, 0x23, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x22, 0xf8, 0x01, 0x0a, 0x22, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x15, 0x6d, 0x61,
	0x78, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x6d, 0x61, 0x78, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x75, 0x73, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x39, 0x0a, 0x23,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x59, 0x0a, 0x28, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x22, 0x3f, 0x0a, 0x29, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x22, 0x39, 0x0a, 0x27, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xfe,
	0x01, 0x0a, 0x28, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x64,
	0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x64, 0x65, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31, 0x0a,
	0x15, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x6d, 0x61,
	0x78, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x75, 0x73, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x5f, 0x0a, 0x25, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0xf7, 0x01, 0x0a, 0x21, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x15, 0x6d, 0x61, 0x78, 0x5f,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x6d, 0x61, 0x78, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x75,
	0x73, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x26, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x40, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x75, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xd3, 0x02,
	0x0a, 0x13, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x74, 0x61, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x22, 0x2a, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22,
	0x47, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0xd6, 0x02, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61,
	0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x22, 0x2d, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22,
	0x6a, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x33, 0x0a, 0x1d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x22, 0x4a, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0xbd, 0x03, 0x0a,
	0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73,
	0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61,
	0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x70, 0x0a, 0x19,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75,
	0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xb6,
	0x03, 0x0a, 0x15, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x25, 0x0a,
	0x0e, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x68, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x75, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0xc1, 0x01, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64,
	0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x43, 0x69, 0x74, 0x79, 0x22, 0x31, 0x0a, 0x1b, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x4d, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x74, 0x74,
	0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x34, 0x0a,
	0x22, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0xb6, 0x02, 0x0a, 0x23, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x63, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x43, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x3f, 0x0a, 0x20,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0xaf, 0x02,
	0x0a, 0x1c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x74, 0x74,
	0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x69, 0x63,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x6f, 0x12,
	0x1d, 0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x43, 0x69, 0x74, 0x79, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x76, 0x0a, 0x21, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3b, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x91, 0x02, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x47, 0x72,
	0x6f, 0x77, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x22, 0x2c, 0x0a, 0x16, 0x41,
	0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x2f, 0x0a, 0x1d, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x4c, 0x6f,
	0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xbb, 0x02, 0x0a, 0x1e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68,
	0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6d,
	0x61, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f,
	0x6e, 0x6f, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xb4, 0x01, 0x0a, 0x1b, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x4c, 0x6f,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22,
	0xb4, 0x02, 0x0a, 0x17, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68,
	0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d,
	0x61, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x6f,
	0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x6c, 0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x36, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x75, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x77, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0x75, 0x0a, 0x0b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x24, 0x0a, 0x0c, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x27, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x2a, 0x0a, 0x14, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0xc3, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x22, 0x2a, 0x0a, 0x14,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x4c, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x30, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x37, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x22, 0xcb, 0x05, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x21, 0x0a,
	0x0c, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x70, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0b, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f,
	0x74, 0x74, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0xd8, 0x01, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xc4, 0x05, 0x0a, 0x12, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12,
	0x21, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0b, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x62, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x31, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x66, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x21, 0x0a,
	0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x4c, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x2c,
	0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0xd1, 0x02, 0x0a,
	0x11, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c,
	0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x66, 0x72, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x66, 0x72, 0x65, 0x65,
	0x46, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x22, 0x28, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x28, 0x0a, 0x14, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x22, 0x2b, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x22, 0xd4, 0x02, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x5f, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x77,
	0x74, 0x68, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x66, 0x72, 0x65, 0x65, 0x5f, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x66, 0x72, 0x65, 0x65, 0x46, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67,
	0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c,
	0x65, 0x67, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x2b, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x4b, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x22, 0x31, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x2b, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x22, 0xd8, 0x03, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x67,
	0x72, 0x6f, 0x77, 0x74, 0x68, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x66, 0x72, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x66, 0x72, 0x65, 0x65, 0x46,
	0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x65, 0x0a,
	0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0xd1, 0x03, 0x0a, 0x13, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68,
	0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x67, 0x72,
	0x6f, 0x77, 0x74, 0x68, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x66, 0x72, 0x65, 0x65, 0x46, 0x72, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c,
	0x65, 0x67, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76,
	0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69,
	0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x64, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x48,
	0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x90, 0x01, 0x0a, 0x1a, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0xd2, 0x01, 0x0a, 0x16,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x6a, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x35, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x91, 0x02, 0x0a,
	0x15, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x12, 0x21, 0x0a,
	0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65,
	0x22, 0x2c, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x2f,
	0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0xbb, 0x02, 0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xb4, 0x01,
	0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0xb4, 0x02, 0x0a, 0x17, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x6c, 0x0a, 0x1c, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x36, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x82, 0x01, 0x0a, 0x23, 0x41, 0x64,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e,
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x3a,
	0x0a, 0x24, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x48, 0x0a, 0x29, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x25, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x88, 0x01, 0x0a, 0x2a,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x44, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xcb, 0x02, 0x0a, 0x1d, 0x41, 0x64, 0x64, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x69,
	0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x50, 0x69, 0x63, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73,
	0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x22, 0x34, 0x0a, 0x1e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x50, 0x0a, 0x20, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x21,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x37, 0x0a, 0x25, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xf5,
	0x02, 0x0a, 0x26, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x63, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x70,
	0x69, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x50, 0x69, 0x63, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x23, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19,
	0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x22, 0xee, 0x02, 0x0a, 0x1f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x69,
	0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x69, 0x63, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x69,
	0x63, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x75, 0x62,
	0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x7c, 0x0a, 0x24, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x3e, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0xc5, 0x02, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69,
	0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x70, 0x69, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x69, 0x63, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x75, 0x62, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x2e, 0x0a, 0x18, 0x41, 0x64, 0x64,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x4a, 0x0a, 0x1a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x31, 0x0a, 0x1f, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xef, 0x02, 0x0a, 0x20,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x10, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e,
	0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x69, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x69, 0x63, 0x12, 0x2a, 0x0a, 0x11, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53,
	0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x74, 0x0a,
	0x1d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19,
	0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x22, 0xe8, 0x02, 0x0a, 0x19, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28,
	0x0a, 0x10, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x69, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x69, 0x63, 0x12, 0x2a, 0x0a, 0x11,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x70,
	0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x61,
	0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0xdc, 0x02, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75,
	0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11,
	0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x64, 0x61,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75,
	0x65, 0x53, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x74,
	0x69, 0x6e, 0x75, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x53,
	0x69, 0x67, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x6f, 0x77, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x6c, 0x6f, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d,
	0x0a, 0x13, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6d, 0x61, 0x78,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a,
	0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22,
	0x2e, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22,
	0x2e, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22,
	0x31, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x22, 0xdf, 0x02, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x5f, 0x73, 0x69,
	0x67, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x6f,
	0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x79, 0x12, 0x2e, 0x0a,
	0x13, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74,
	0x69, 0x6e, 0x75, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2a, 0x0a,
	0x11, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x50, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x6f, 0x77,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x6f, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x10, 0x6d, 0x61, 0x78, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x62, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x22, 0x31, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x69, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x22, 0x37, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x31, 0x0a, 0x1f, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc4,
	0x03, 0x0a, 0x20, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75,
	0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x5f,
	0x73, 0x69, 0x67, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x79, 0x12,
	0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e,
	0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x63, 0x6f,
	0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6c,
	0x6f, 0x77, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x6f, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0xbd, 0x03, 0x0a, 0x19, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x5f, 0x73,
	0x69, 0x67, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63,
	0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x79, 0x12, 0x2e,
	0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x63, 0x6f, 0x6e,
	0x74, 0x69, 0x6e, 0x75, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2a,
	0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x50, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x6f,
	0x77, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x6f, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x70, 0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x38, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x75, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c,
	0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x9c, 0x01, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74,
	0x69, 0x6e, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x44, 0x61, 0x79, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x2a, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x22, 0x2d, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x53, 0x69, 0x67, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0xc6, 0x01, 0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x53, 0x69, 0x67, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x44, 0x61, 0x79, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x19, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x4c, 0x6f, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xbf, 0x01, 0x0a, 0x15, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x44, 0x61,
	0x79, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x68, 0x0a, 0x1a, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x4c, 0x6f,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x34, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x53, 0x69, 0x67, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x92, 0x05, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x61, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x61, 0x6e, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e,
	0x0a, 0x13, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a,
	0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x6e,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x31, 0x0a, 0x1b, 0x41, 0x64,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x41, 0x0a,
	0x22, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x9b, 0x05, 0x0a, 0x23, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x10, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x65,
	0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x61, 0x6e, 0x73, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x61, 0x6e,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e,
	0x0a, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32,
	0x0a, 0x15, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x11, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x5a,
	0x0a, 0x20, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x99, 0x05, 0x0a, 0x21, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a,
	0x12, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x66, 0x61, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x61, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32,
	0x0a, 0x15, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65,
	0x63, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x7b, 0x0a, 0x21, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x40, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0xf1, 0x01, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x67, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x10, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x11, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x26, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22,
	0x26, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54,
	0x61, 0x67, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x29, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x22, 0xf4, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x67,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x11, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x29, 0x0a, 0x13, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x22, 0x61, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x2f, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x29, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0xd9, 0x02, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a,
	0x12, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x66,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x82, 0x01, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54,
	0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x67,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0xd2, 0x02, 0x0a, 0x11, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54,
	0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61,
	0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61,
	0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x10, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x11, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x60, 0x0a, 0x16, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x5d, 0x0a, 0x17, 0x41,
	0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x18, 0x41, 0x64,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x31, 0x0a, 0x1f, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x87, 0x01,
	0x0a, 0x20, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x15, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x19, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x54, 0x61, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x70, 0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xaf, 0x03, 0x0a, 0x10, 0x41,
	0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x74, 0x61, 0x73, 0x6b, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x27, 0x0a, 0x11,
	0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x27, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x2a,
	0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0xb2, 0x03, 0x0a, 0x13, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x12, 0x23, 0x0a,
	0x0d, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22,
	0x2a, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x62, 0x0a, 0x19, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22,
	0x30, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54,
	0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x22, 0x2a, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x97, 0x04,
	0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73,
	0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73,
	0x6b, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x67, 0x72,
	0x6f, 0x77, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b,
	0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xfd, 0x01, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x90, 0x04, 0x0a, 0x12, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74,
	0x61, 0x73, 0x6b, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x62, 0x0a, 0x17, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x31, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x60,
	0x0a, 0x18, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64,
	0x22, 0x2f, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x22, 0x38, 0x0a, 0x22, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x32, 0x0a, 0x20, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x8a, 0x01, 0x0a, 0x21, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x8e, 0x01, 0x0a,
	0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x83, 0x01,
	0x0a, 0x1a, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x72, 0x0a, 0x1f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x39, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x75, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x32, 0xe0, 0x06, 0x0a, 0x20, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x79, 0x0a, 0x1c,
	0x41, 0x64, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2a, 0x2e, 0x75,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x82, 0x01, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2d, 0x2e, 0x75, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x75, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x82, 0x01, 0x0a,
	0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x2d, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x1a,
	0x2e, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x94, 0x01, 0x0a, 0x25, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x33, 0x2e, 0x75, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x34, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x91, 0x01, 0x0a, 0x24, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x32, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x33, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x8b, 0x01, 0x0a,
	0x22, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x30, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x31, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0xf7, 0x04, 0x0a, 0x14, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x13, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x21, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x13, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x21, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x19, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x28, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x18,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x26, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x1a, 0x27, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x16, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x75, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x32, 0x81, 0x04, 0x0a, 0x1b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x6a, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x25, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x73, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x42, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28,
	0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x82, 0x01, 0x0a, 0x1f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2d, 0x2e, 0x75, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x42, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x1d, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x74,
	0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x2e, 0x75, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x42, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0xd9, 0x02, 0x0a, 0x16, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x5b, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x12, 0x20, 0x2e, 0x75, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x77, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x75, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x73, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x77, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x28,
	0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x26, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x4c,
	0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x75, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x32, 0xbe, 0x05, 0x0a, 0x11, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x17,
	0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x10, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x2e,
	0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e,
	0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x55, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x24, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x64, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x23, 0x2e, 0x75, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x24,
	0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e,
	0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x22, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12,
	0x13, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x59, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x12, 0x20, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x21, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x32, 0xd1, 0x04, 0x0a, 0x12, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x0e,
	0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1c,
	0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x75,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x58, 0x0a,
	0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x1f, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1f, 0x2e, 0x75,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e,
	0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x6a, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x2e, 0x75,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x67, 0x0a,
	0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x24, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e,
	0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22,
	0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x23, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0xe6, 0x01, 0x0a, 0x15, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x61, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x12, 0x22, 0x2e, 0x75, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x1a,
	0x23, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x25, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x32, 0xd9, 0x02, 0x0a, 0x16, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x4c, 0x6f, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5b, 0x0a,
	0x12, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x4c, 0x6f, 0x67, 0x12, 0x20, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x1a, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x4c,
	0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x28, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x1a, 0x29, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x6d, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x2e, 0x75, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0xc8,
	0x02, 0x0a, 0x24, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x20, 0x41, 0x64, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x2e, 0x75,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x2f, 0x2e, 0x75,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x97, 0x01, 0x0a, 0x26, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x2e, 0x75, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x35, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0xa9, 0x04, 0x0a, 0x1e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x73, 0x0a, 0x1a,
	0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x75, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x7c, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a,
	0x2c, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x8b, 0x01, 0x0a, 0x22, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x30, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x31, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x85, 0x01,
	0x0a, 0x20, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x2e, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x2f, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0xd9, 0x03, 0x0a, 0x18, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x61, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x22, 0x2e, 0x75, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x23,
	0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x25, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x79, 0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x2a, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e,
	0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x1a,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x2e, 0x75, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x32, 0xc3, 0x05, 0x0a, 0x18, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x61,
	0x0a, 0x14, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x75, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x6a, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x25, 0x2e, 0x75,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6a, 0x0a,
	0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c,
	0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x25, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x1a,
	0x26, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x1d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x2e, 0x75, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2a, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x73, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x28, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x75, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0xc5, 0x02, 0x0a, 0x14, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x4c, 0x6f, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x55, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x69, 0x67,
	0x6e, 0x4c, 0x6f, 0x67, 0x12, 0x1e, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x26, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x4c,
	0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x75, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x24, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x4c, 0x6f, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x69,
	0x67, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32,
	0x8c, 0x03, 0x0a, 0x1b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x6a, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x2e, 0x75, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x1a, 0x26, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x82, 0x01, 0x0a, 0x1f,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x2d, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x2e,
	0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x7c, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x2b, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2c,
	0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0xab,
	0x04, 0x0a, 0x10, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x54, 0x61, 0x67, 0x12, 0x1a, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x1a,
	0x1b, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x52,
	0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61,
	0x67, 0x12, 0x1d, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71,
	0x1a, 0x1e, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x52, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x54, 0x61, 0x67, 0x12, 0x1d, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61,
	0x67, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x23, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x14,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x22, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x54, 0x61, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x5b, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54,
	0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0xed, 0x02, 0x0a,
	0x18, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x61, 0x0a, 0x14, 0x41, 0x64, 0x64,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x22, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x1c,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2a, 0x2e, 0x75,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x54, 0x61, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x29, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0xbe, 0x04, 0x0a,
	0x11, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54,
	0x61, 0x73, 0x6b, 0x12, 0x1b, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71,
	0x1a, 0x1c, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x55, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x54, 0x61, 0x73, 0x6b, 0x12, 0x1e, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1e, 0x2e, 0x75, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x75, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x67,
	0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61,
	0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x25,
	0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x23, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73,
	0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5e, 0x0a,
	0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54,
	0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0xf7, 0x02,
	0x0a, 0x19, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x64, 0x0a, 0x15, 0x41,
	0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x75, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x7c, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x2b, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a,
	0x2c, 0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x76, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29,
	0x2e, 0x75, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x75, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x75, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_ums_ums_proto_rawDescOnce sync.Once
	file_rpc_ums_ums_proto_rawDescData = file_rpc_ums_ums_proto_rawDesc
)

func file_rpc_ums_ums_proto_rawDescGZIP() []byte {
	file_rpc_ums_ums_proto_rawDescOnce.Do(func() {
		file_rpc_ums_ums_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_ums_ums_proto_rawDescData)
	})
	return file_rpc_ums_ums_proto_rawDescData
}

var file_rpc_ums_ums_proto_msgTypes = make([]protoimpl.MessageInfo, 175)
var file_rpc_ums_ums_proto_goTypes = []interface{}{
	(*AddIntegrationConsumeSettingReq)(nil),            // 0: umsclient.AddIntegrationConsumeSettingReq
	(*AddIntegrationConsumeSettingResp)(nil),           // 1: umsclient.AddIntegrationConsumeSettingResp
	(*DeleteIntegrationConsumeSettingReq)(nil),         // 2: umsclient.DeleteIntegrationConsumeSettingReq
	(*DeleteIntegrationConsumeSettingResp)(nil),        // 3: umsclient.DeleteIntegrationConsumeSettingResp
	(*UpdateIntegrationConsumeSettingReq)(nil),         // 4: umsclient.UpdateIntegrationConsumeSettingReq
	(*UpdateIntegrationConsumeSettingResp)(nil),        // 5: umsclient.UpdateIntegrationConsumeSettingResp
	(*UpdateIntegrationConsumeSettingStatusReq)(nil),   // 6: umsclient.UpdateIntegrationConsumeSettingStatusReq
	(*UpdateIntegrationConsumeSettingStatusResp)(nil),  // 7: umsclient.UpdateIntegrationConsumeSettingStatusResp
	(*QueryIntegrationConsumeSettingDetailReq)(nil),    // 8: umsclient.QueryIntegrationConsumeSettingDetailReq
	(*QueryIntegrationConsumeSettingDetailResp)(nil),   // 9: umsclient.QueryIntegrationConsumeSettingDetailResp
	(*QueryIntegrationConsumeSettingListReq)(nil),      // 10: umsclient.QueryIntegrationConsumeSettingListReq
	(*IntegrationConsumeSettingListData)(nil),          // 11: umsclient.IntegrationConsumeSettingListData
	(*QueryIntegrationConsumeSettingListResp)(nil),     // 12: umsclient.QueryIntegrationConsumeSettingListResp
	(*AddMemberAddressReq)(nil),                        // 13: umsclient.AddMemberAddressReq
	(*AddMemberAddressResp)(nil),                       // 14: umsclient.AddMemberAddressResp
	(*DeleteMemberAddressReq)(nil),                     // 15: umsclient.DeleteMemberAddressReq
	(*DeleteMemberAddressResp)(nil),                    // 16: umsclient.DeleteMemberAddressResp
	(*UpdateMemberAddressReq)(nil),                     // 17: umsclient.UpdateMemberAddressReq
	(*UpdateMemberAddressResp)(nil),                    // 18: umsclient.UpdateMemberAddressResp
	(*UpdateMemberAddressStatusReq)(nil),               // 19: umsclient.UpdateMemberAddressStatusReq
	(*UpdateMemberAddressStatusResp)(nil),              // 20: umsclient.UpdateMemberAddressStatusResp
	(*QueryMemberAddressDetailReq)(nil),                // 21: umsclient.QueryMemberAddressDetailReq
	(*QueryMemberAddressDetailResp)(nil),               // 22: umsclient.QueryMemberAddressDetailResp
	(*QueryMemberAddressListReq)(nil),                  // 23: umsclient.QueryMemberAddressListReq
	(*MemberAddressListData)(nil),                      // 24: umsclient.MemberAddressListData
	(*QueryMemberAddressListResp)(nil),                 // 25: umsclient.QueryMemberAddressListResp
	(*AddMemberBrandAttentionReq)(nil),                 // 26: umsclient.AddMemberBrandAttentionReq
	(*AddMemberBrandAttentionResp)(nil),                // 27: umsclient.AddMemberBrandAttentionResp
	(*DeleteMemberBrandAttentionReq)(nil),              // 28: umsclient.DeleteMemberBrandAttentionReq
	(*DeleteMemberBrandAttentionResp)(nil),             // 29: umsclient.DeleteMemberBrandAttentionResp
	(*QueryMemberBrandAttentionDetailReq)(nil),         // 30: umsclient.QueryMemberBrandAttentionDetailReq
	(*QueryMemberBrandAttentionDetailResp)(nil),        // 31: umsclient.QueryMemberBrandAttentionDetailResp
	(*QueryMemberBrandAttentionListReq)(nil),           // 32: umsclient.QueryMemberBrandAttentionListReq
	(*MemberBrandAttentionListData)(nil),               // 33: umsclient.MemberBrandAttentionListData
	(*QueryMemberBrandAttentionListResp)(nil),          // 34: umsclient.QueryMemberBrandAttentionListResp
	(*AddMemberGrowthLogReq)(nil),                      // 35: umsclient.AddMemberGrowthLogReq
	(*AddMemberGrowthLogResp)(nil),                     // 36: umsclient.AddMemberGrowthLogResp
	(*QueryMemberGrowthLogDetailReq)(nil),              // 37: umsclient.QueryMemberGrowthLogDetailReq
	(*QueryMemberGrowthLogDetailResp)(nil),             // 38: umsclient.QueryMemberGrowthLogDetailResp
	(*QueryMemberGrowthLogListReq)(nil),                // 39: umsclient.QueryMemberGrowthLogListReq
	(*MemberGrowthLogListData)(nil),                    // 40: umsclient.MemberGrowthLogListData
	(*QueryMemberGrowthLogListResp)(nil),               // 41: umsclient.QueryMemberGrowthLogListResp
	(*RegisterReq)(nil),                                // 42: umsclient.RegisterReq
	(*RegisterResp)(nil),                               // 43: umsclient.RegisterResp
	(*DeleteMemberInfoReq)(nil),                        // 44: umsclient.DeleteMemberInfoReq
	(*DeleteMemberInfoResp)(nil),                       // 45: umsclient.DeleteMemberInfoResp
	(*UpdateMemberInfoReq)(nil),                        // 46: umsclient.UpdateMemberInfoReq
	(*UpdateMemberInfoResp)(nil),                       // 47: umsclient.UpdateMemberInfoResp
	(*UpdateMemberInfoStatusReq)(nil),                  // 48: umsclient.UpdateMemberInfoStatusReq
	(*UpdateMemberInfoStatusResp)(nil),                 // 49: umsclient.UpdateMemberInfoStatusResp
	(*QueryMemberInfoDetailReq)(nil),                   // 50: umsclient.QueryMemberInfoDetailReq
	(*QueryMemberInfoDetailResp)(nil),                  // 51: umsclient.QueryMemberInfoDetailResp
	(*QueryMemberInfoListReq)(nil),                     // 52: umsclient.QueryMemberInfoListReq
	(*MemberInfoListData)(nil),                         // 53: umsclient.MemberInfoListData
	(*QueryMemberInfoListResp)(nil),                    // 54: umsclient.QueryMemberInfoListResp
	(*LoginReq)(nil),                                   // 55: umsclient.LoginReq
	(*LoginResp)(nil),                                  // 56: umsclient.LoginResp
	(*UpdateMemberPointsReq)(nil),                      // 57: umsclient.UpdateMemberPointsReq
	(*UpdateMemberPointsResp)(nil),                     // 58: umsclient.UpdateMemberPointsResp
	(*AddMemberLevelReq)(nil),                          // 59: umsclient.AddMemberLevelReq
	(*AddMemberLevelResp)(nil),                         // 60: umsclient.AddMemberLevelResp
	(*DeleteMemberLevelReq)(nil),                       // 61: umsclient.DeleteMemberLevelReq
	(*DeleteMemberLevelResp)(nil),                      // 62: umsclient.DeleteMemberLevelResp
	(*UpdateMemberLevelReq)(nil),                       // 63: umsclient.UpdateMemberLevelReq
	(*UpdateMemberLevelResp)(nil),                      // 64: umsclient.UpdateMemberLevelResp
	(*UpdateMemberLevelStatusReq)(nil),                 // 65: umsclient.UpdateMemberLevelStatusReq
	(*UpdateMemberLevelStatusResp)(nil),                // 66: umsclient.UpdateMemberLevelStatusResp
	(*QueryMemberLevelDetailReq)(nil),                  // 67: umsclient.QueryMemberLevelDetailReq
	(*QueryMemberLevelDetailResp)(nil),                 // 68: umsclient.QueryMemberLevelDetailResp
	(*QueryMemberLevelListReq)(nil),                    // 69: umsclient.QueryMemberLevelListReq
	(*MemberLevelListData)(nil),                        // 70: umsclient.MemberLevelListData
	(*QueryMemberLevelListResp)(nil),                   // 71: umsclient.QueryMemberLevelListResp
	(*DeleteMemberLoginLogReq)(nil),                    // 72: umsclient.DeleteMemberLoginLogReq
	(*DeleteMemberLoginLogResp)(nil),                   // 73: umsclient.DeleteMemberLoginLogResp
	(*QueryMemberLoginLogListReq)(nil),                 // 74: umsclient.QueryMemberLoginLogListReq
	(*MemberLoginLogListData)(nil),                     // 75: umsclient.MemberLoginLogListData
	(*QueryMemberLoginLogListResp)(nil),                // 76: umsclient.QueryMemberLoginLogListResp
	(*AddMemberPointsLogReq)(nil),                      // 77: umsclient.AddMemberPointsLogReq
	(*AddMemberPointsLogResp)(nil),                     // 78: umsclient.AddMemberPointsLogResp
	(*QueryMemberPointsLogDetailReq)(nil),              // 79: umsclient.QueryMemberPointsLogDetailReq
	(*QueryMemberPointsLogDetailResp)(nil),             // 80: umsclient.QueryMemberPointsLogDetailResp
	(*QueryMemberPointsLogListReq)(nil),                // 81: umsclient.QueryMemberPointsLogListReq
	(*MemberPointsLogListData)(nil),                    // 82: umsclient.MemberPointsLogListData
	(*QueryMemberPointsLogListResp)(nil),               // 83: umsclient.QueryMemberPointsLogListResp
	(*AddMemberProductCategoryRelationReq)(nil),        // 84: umsclient.AddMemberProductCategoryRelationReq
	(*AddMemberProductCategoryRelationResp)(nil),       // 85: umsclient.AddMemberProductCategoryRelationResp
	(*QueryMemberProductCategoryRelationListReq)(nil),  // 86: umsclient.QueryMemberProductCategoryRelationListReq
	(*MemberProductCategoryRelationListData)(nil),      // 87: umsclient.MemberProductCategoryRelationListData
	(*QueryMemberProductCategoryRelationListResp)(nil), // 88: umsclient.QueryMemberProductCategoryRelationListResp
	(*AddMemberProductCollectionReq)(nil),              // 89: umsclient.AddMemberProductCollectionReq
	(*AddMemberProductCollectionResp)(nil),             // 90: umsclient.AddMemberProductCollectionResp
	(*DeleteMemberProductCollectionReq)(nil),           // 91: umsclient.DeleteMemberProductCollectionReq
	(*DeleteMemberProductCollectionResp)(nil),          // 92: umsclient.DeleteMemberProductCollectionResp
	(*QueryMemberProductCollectionDetailReq)(nil),      // 93: umsclient.QueryMemberProductCollectionDetailReq
	(*QueryMemberProductCollectionDetailResp)(nil),     // 94: umsclient.QueryMemberProductCollectionDetailResp
	(*QueryMemberProductCollectionListReq)(nil),        // 95: umsclient.QueryMemberProductCollectionListReq
	(*MemberProductCollectionListData)(nil),            // 96: umsclient.MemberProductCollectionListData
	(*QueryMemberProductCollectionListResp)(nil),       // 97: umsclient.QueryMemberProductCollectionListResp
	(*AddMemberReadHistoryReq)(nil),                    // 98: umsclient.AddMemberReadHistoryReq
	(*AddMemberReadHistoryResp)(nil),                   // 99: umsclient.AddMemberReadHistoryResp
	(*DeleteMemberReadHistoryReq)(nil),                 // 100: umsclient.DeleteMemberReadHistoryReq
	(*DeleteMemberReadHistoryResp)(nil),                // 101: umsclient.DeleteMemberReadHistoryResp
	(*QueryMemberReadHistoryDetailReq)(nil),            // 102: umsclient.QueryMemberReadHistoryDetailReq
	(*QueryMemberReadHistoryDetailResp)(nil),           // 103: umsclient.QueryMemberReadHistoryDetailResp
	(*QueryMemberReadHistoryListReq)(nil),              // 104: umsclient.QueryMemberReadHistoryListReq
	(*MemberReadHistoryListData)(nil),                  // 105: umsclient.MemberReadHistoryListData
	(*QueryMemberReadHistoryListResp)(nil),             // 106: umsclient.QueryMemberReadHistoryListResp
	(*AddMemberRuleSettingReq)(nil),                    // 107: umsclient.AddMemberRuleSettingReq
	(*AddMemberRuleSettingResp)(nil),                   // 108: umsclient.AddMemberRuleSettingResp
	(*DeleteMemberRuleSettingReq)(nil),                 // 109: umsclient.DeleteMemberRuleSettingReq
	(*DeleteMemberRuleSettingResp)(nil),                // 110: umsclient.DeleteMemberRuleSettingResp
	(*UpdateMemberRuleSettingReq)(nil),                 // 111: umsclient.UpdateMemberRuleSettingReq
	(*UpdateMemberRuleSettingResp)(nil),                // 112: umsclient.UpdateMemberRuleSettingResp
	(*UpdateMemberRuleSettingStatusReq)(nil),           // 113: umsclient.UpdateMemberRuleSettingStatusReq
	(*UpdateMemberRuleSettingStatusResp)(nil),          // 114: umsclient.UpdateMemberRuleSettingStatusResp
	(*QueryMemberRuleSettingDetailReq)(nil),            // 115: umsclient.QueryMemberRuleSettingDetailReq
	(*QueryMemberRuleSettingDetailResp)(nil),           // 116: umsclient.QueryMemberRuleSettingDetailResp
	(*QueryMemberRuleSettingListReq)(nil),              // 117: umsclient.QueryMemberRuleSettingListReq
	(*MemberRuleSettingListData)(nil),                  // 118: umsclient.MemberRuleSettingListData
	(*QueryMemberRuleSettingListResp)(nil),             // 119: umsclient.QueryMemberRuleSettingListResp
	(*AddMemberSignLogReq)(nil),                        // 120: umsclient.AddMemberSignLogReq
	(*AddMemberSignLogResp)(nil),                       // 121: umsclient.AddMemberSignLogResp
	(*QueryMemberSignLogDetailReq)(nil),                // 122: umsclient.QueryMemberSignLogDetailReq
	(*QueryMemberSignLogDetailResp)(nil),               // 123: umsclient.QueryMemberSignLogDetailResp
	(*QueryMemberSignLogListReq)(nil),                  // 124: umsclient.QueryMemberSignLogListReq
	(*MemberSignLogListData)(nil),                      // 125: umsclient.MemberSignLogListData
	(*QueryMemberSignLogListResp)(nil),                 // 126: umsclient.QueryMemberSignLogListResp
	(*AddMemberStatisticsInfoReq)(nil),                 // 127: umsclient.AddMemberStatisticsInfoReq
	(*AddMemberStatisticsInfoResp)(nil),                // 128: umsclient.AddMemberStatisticsInfoResp
	(*QueryMemberStatisticsInfoDetailReq)(nil),         // 129: umsclient.QueryMemberStatisticsInfoDetailReq
	(*QueryMemberStatisticsInfoDetailResp)(nil),        // 130: umsclient.QueryMemberStatisticsInfoDetailResp
	(*QueryMemberStatisticsInfoListReq)(nil),           // 131: umsclient.QueryMemberStatisticsInfoListReq
	(*QueryMemberStatisticsInfoListData)(nil),          // 132: umsclient.QueryMemberStatisticsInfoListData
	(*QueryMemberStatisticsInfoListResp)(nil),          // 133: umsclient.QueryMemberStatisticsInfoListResp
	(*AddMemberTagReq)(nil),                            // 134: umsclient.AddMemberTagReq
	(*AddMemberTagResp)(nil),                           // 135: umsclient.AddMemberTagResp
	(*DeleteMemberTagReq)(nil),                         // 136: umsclient.DeleteMemberTagReq
	(*DeleteMemberTagResp)(nil),                        // 137: umsclient.DeleteMemberTagResp
	(*UpdateMemberTagReq)(nil),                         // 138: umsclient.UpdateMemberTagReq
	(*UpdateMemberTagResp)(nil),                        // 139: umsclient.UpdateMemberTagResp
	(*UpdateMemberTagStatusReq)(nil),                   // 140: umsclient.UpdateMemberTagStatusReq
	(*UpdateMemberTagStatusResp)(nil),                  // 141: umsclient.UpdateMemberTagStatusResp
	(*QueryMemberTagDetailReq)(nil),                    // 142: umsclient.QueryMemberTagDetailReq
	(*QueryMemberTagDetailResp)(nil),                   // 143: umsclient.QueryMemberTagDetailResp
	(*QueryMemberTagListReq)(nil),                      // 144: umsclient.QueryMemberTagListReq
	(*MemberTagListData)(nil),                          // 145: umsclient.MemberTagListData
	(*QueryMemberTagListResp)(nil),                     // 146: umsclient.QueryMemberTagListResp
	(*AddMemberTagRelationReq)(nil),                    // 147: umsclient.AddMemberTagRelationReq
	(*AddMemberTagRelationResp)(nil),                   // 148: umsclient.AddMemberTagRelationResp
	(*QueryMemberTagRelationDetailReq)(nil),            // 149: umsclient.QueryMemberTagRelationDetailReq
	(*QueryMemberTagRelationDetailResp)(nil),           // 150: umsclient.QueryMemberTagRelationDetailResp
	(*QueryMemberTagRelationListReq)(nil),              // 151: umsclient.QueryMemberTagRelationListReq
	(*MemberTagRelationListData)(nil),                  // 152: umsclient.MemberTagRelationListData
	(*QueryMemberTagRelationListResp)(nil),             // 153: umsclient.QueryMemberTagRelationListResp
	(*AddMemberTaskReq)(nil),                           // 154: umsclient.AddMemberTaskReq
	(*AddMemberTaskResp)(nil),                          // 155: umsclient.AddMemberTaskResp
	(*DeleteMemberTaskReq)(nil),                        // 156: umsclient.DeleteMemberTaskReq
	(*DeleteMemberTaskResp)(nil),                       // 157: umsclient.DeleteMemberTaskResp
	(*UpdateMemberTaskReq)(nil),                        // 158: umsclient.UpdateMemberTaskReq
	(*UpdateMemberTaskResp)(nil),                       // 159: umsclient.UpdateMemberTaskResp
	(*UpdateMemberTaskStatusReq)(nil),                  // 160: umsclient.UpdateMemberTaskStatusReq
	(*UpdateMemberTaskStatusResp)(nil),                 // 161: umsclient.UpdateMemberTaskStatusResp
	(*QueryMemberTaskDetailReq)(nil),                   // 162: umsclient.QueryMemberTaskDetailReq
	(*QueryMemberTaskDetailResp)(nil),                  // 163: umsclient.QueryMemberTaskDetailResp
	(*QueryMemberTaskListReq)(nil),                     // 164: umsclient.QueryMemberTaskListReq
	(*MemberTaskListData)(nil),                         // 165: umsclient.MemberTaskListData
	(*QueryMemberTaskListResp)(nil),                    // 166: umsclient.QueryMemberTaskListResp
	(*AddMemberTaskRelationReq)(nil),                   // 167: umsclient.AddMemberTaskRelationReq
	(*AddMemberTaskRelationResp)(nil),                  // 168: umsclient.AddMemberTaskRelationResp
	(*UpdateMemberTaskRelationStatusResp)(nil),         // 169: umsclient.UpdateMemberTaskRelationStatusResp
	(*QueryMemberTaskRelationDetailReq)(nil),           // 170: umsclient.QueryMemberTaskRelationDetailReq
	(*QueryMemberTaskRelationDetailResp)(nil),          // 171: umsclient.QueryMemberTaskRelationDetailResp
	(*QueryMemberTaskRelationListReq)(nil),             // 172: umsclient.QueryMemberTaskRelationListReq
	(*MemberTaskRelationListData)(nil),                 // 173: umsclient.MemberTaskRelationListData
	(*QueryMemberTaskRelationListResp)(nil),            // 174: umsclient.QueryMemberTaskRelationListResp
}
var file_rpc_ums_ums_proto_depIdxs = []int32{
	11,  // 0: umsclient.QueryIntegrationConsumeSettingListResp.list:type_name -> umsclient.IntegrationConsumeSettingListData
	24,  // 1: umsclient.QueryMemberAddressListResp.list:type_name -> umsclient.MemberAddressListData
	33,  // 2: umsclient.QueryMemberBrandAttentionListResp.list:type_name -> umsclient.MemberBrandAttentionListData
	40,  // 3: umsclient.QueryMemberGrowthLogListResp.list:type_name -> umsclient.MemberGrowthLogListData
	53,  // 4: umsclient.QueryMemberInfoListResp.list:type_name -> umsclient.MemberInfoListData
	70,  // 5: umsclient.QueryMemberLevelListResp.list:type_name -> umsclient.MemberLevelListData
	75,  // 6: umsclient.QueryMemberLoginLogListResp.list:type_name -> umsclient.MemberLoginLogListData
	82,  // 7: umsclient.QueryMemberPointsLogListResp.list:type_name -> umsclient.MemberPointsLogListData
	87,  // 8: umsclient.QueryMemberProductCategoryRelationListResp.list:type_name -> umsclient.MemberProductCategoryRelationListData
	96,  // 9: umsclient.QueryMemberProductCollectionListResp.list:type_name -> umsclient.MemberProductCollectionListData
	105, // 10: umsclient.QueryMemberReadHistoryListResp.list:type_name -> umsclient.MemberReadHistoryListData
	118, // 11: umsclient.QueryMemberRuleSettingListResp.list:type_name -> umsclient.MemberRuleSettingListData
	125, // 12: umsclient.QueryMemberSignLogListResp.list:type_name -> umsclient.MemberSignLogListData
	132, // 13: umsclient.QueryMemberStatisticsInfoListResp.list:type_name -> umsclient.QueryMemberStatisticsInfoListData
	145, // 14: umsclient.QueryMemberTagListResp.list:type_name -> umsclient.MemberTagListData
	152, // 15: umsclient.QueryMemberTagRelationListResp.list:type_name -> umsclient.MemberTagRelationListData
	165, // 16: umsclient.QueryMemberTaskListResp.list:type_name -> umsclient.MemberTaskListData
	173, // 17: umsclient.QueryMemberTaskRelationListResp.list:type_name -> umsclient.MemberTaskRelationListData
	0,   // 18: umsclient.IntegrationConsumeSettingService.AddIntegrationConsumeSetting:input_type -> umsclient.AddIntegrationConsumeSettingReq
	2,   // 19: umsclient.IntegrationConsumeSettingService.DeleteIntegrationConsumeSetting:input_type -> umsclient.DeleteIntegrationConsumeSettingReq
	4,   // 20: umsclient.IntegrationConsumeSettingService.UpdateIntegrationConsumeSetting:input_type -> umsclient.UpdateIntegrationConsumeSettingReq
	6,   // 21: umsclient.IntegrationConsumeSettingService.UpdateIntegrationConsumeSettingStatus:input_type -> umsclient.UpdateIntegrationConsumeSettingStatusReq
	8,   // 22: umsclient.IntegrationConsumeSettingService.QueryIntegrationConsumeSettingDetail:input_type -> umsclient.QueryIntegrationConsumeSettingDetailReq
	10,  // 23: umsclient.IntegrationConsumeSettingService.QueryIntegrationConsumeSettingList:input_type -> umsclient.QueryIntegrationConsumeSettingListReq
	13,  // 24: umsclient.MemberAddressService.AddMemberAddress:input_type -> umsclient.AddMemberAddressReq
	15,  // 25: umsclient.MemberAddressService.DeleteMemberAddress:input_type -> umsclient.DeleteMemberAddressReq
	17,  // 26: umsclient.MemberAddressService.UpdateMemberAddress:input_type -> umsclient.UpdateMemberAddressReq
	19,  // 27: umsclient.MemberAddressService.UpdateMemberAddressStatus:input_type -> umsclient.UpdateMemberAddressStatusReq
	21,  // 28: umsclient.MemberAddressService.QueryMemberAddressDetail:input_type -> umsclient.QueryMemberAddressDetailReq
	23,  // 29: umsclient.MemberAddressService.QueryMemberAddressList:input_type -> umsclient.QueryMemberAddressListReq
	26,  // 30: umsclient.MemberBrandAttentionService.AddMemberBrandAttention:input_type -> umsclient.AddMemberBrandAttentionReq
	28,  // 31: umsclient.MemberBrandAttentionService.DeleteMemberBrandAttention:input_type -> umsclient.DeleteMemberBrandAttentionReq
	30,  // 32: umsclient.MemberBrandAttentionService.QueryMemberBrandAttentionDetail:input_type -> umsclient.QueryMemberBrandAttentionDetailReq
	32,  // 33: umsclient.MemberBrandAttentionService.QueryMemberBrandAttentionList:input_type -> umsclient.QueryMemberBrandAttentionListReq
	35,  // 34: umsclient.MemberGrowthLogService.AddMemberGrowthLog:input_type -> umsclient.AddMemberGrowthLogReq
	37,  // 35: umsclient.MemberGrowthLogService.QueryMemberGrowthLogDetail:input_type -> umsclient.QueryMemberGrowthLogDetailReq
	39,  // 36: umsclient.MemberGrowthLogService.QueryMemberGrowthLogList:input_type -> umsclient.QueryMemberGrowthLogListReq
	42,  // 37: umsclient.MemberInfoService.Register:input_type -> umsclient.RegisterReq
	44,  // 38: umsclient.MemberInfoService.DeleteMemberInfo:input_type -> umsclient.DeleteMemberInfoReq
	46,  // 39: umsclient.MemberInfoService.UpdateMemberInfo:input_type -> umsclient.UpdateMemberInfoReq
	48,  // 40: umsclient.MemberInfoService.UpdateMemberInfoStatus:input_type -> umsclient.UpdateMemberInfoStatusReq
	50,  // 41: umsclient.MemberInfoService.QueryMemberInfoDetail:input_type -> umsclient.QueryMemberInfoDetailReq
	52,  // 42: umsclient.MemberInfoService.QueryMemberInfoList:input_type -> umsclient.QueryMemberInfoListReq
	55,  // 43: umsclient.MemberInfoService.Login:input_type -> umsclient.LoginReq
	57,  // 44: umsclient.MemberInfoService.UpdateMemberPoints:input_type -> umsclient.UpdateMemberPointsReq
	59,  // 45: umsclient.MemberLevelService.AddMemberLevel:input_type -> umsclient.AddMemberLevelReq
	61,  // 46: umsclient.MemberLevelService.DeleteMemberLevel:input_type -> umsclient.DeleteMemberLevelReq
	63,  // 47: umsclient.MemberLevelService.UpdateMemberLevel:input_type -> umsclient.UpdateMemberLevelReq
	65,  // 48: umsclient.MemberLevelService.UpdateMemberLevelStatus:input_type -> umsclient.UpdateMemberLevelStatusReq
	67,  // 49: umsclient.MemberLevelService.QueryMemberLevelDetail:input_type -> umsclient.QueryMemberLevelDetailReq
	69,  // 50: umsclient.MemberLevelService.QueryMemberLevelList:input_type -> umsclient.QueryMemberLevelListReq
	72,  // 51: umsclient.MemberLoginLogService.DeleteMemberLoginLog:input_type -> umsclient.DeleteMemberLoginLogReq
	74,  // 52: umsclient.MemberLoginLogService.QueryMemberLoginLogList:input_type -> umsclient.QueryMemberLoginLogListReq
	77,  // 53: umsclient.MemberPointsLogService.AddMemberPointsLog:input_type -> umsclient.AddMemberPointsLogReq
	79,  // 54: umsclient.MemberPointsLogService.QueryMemberPointsLogDetail:input_type -> umsclient.QueryMemberPointsLogDetailReq
	81,  // 55: umsclient.MemberPointsLogService.QueryMemberPointsLogList:input_type -> umsclient.QueryMemberPointsLogListReq
	84,  // 56: umsclient.MemberProductCategoryRelationService.AddMemberProductCategoryRelation:input_type -> umsclient.AddMemberProductCategoryRelationReq
	86,  // 57: umsclient.MemberProductCategoryRelationService.QueryMemberProductCategoryRelationList:input_type -> umsclient.QueryMemberProductCategoryRelationListReq
	89,  // 58: umsclient.MemberProductCollectionService.AddMemberProductCollection:input_type -> umsclient.AddMemberProductCollectionReq
	91,  // 59: umsclient.MemberProductCollectionService.DeleteMemberProductCollection:input_type -> umsclient.DeleteMemberProductCollectionReq
	93,  // 60: umsclient.MemberProductCollectionService.QueryMemberProductCollectionDetail:input_type -> umsclient.QueryMemberProductCollectionDetailReq
	95,  // 61: umsclient.MemberProductCollectionService.QueryMemberProductCollectionList:input_type -> umsclient.QueryMemberProductCollectionListReq
	98,  // 62: umsclient.MemberReadHistoryService.AddMemberReadHistory:input_type -> umsclient.AddMemberReadHistoryReq
	100, // 63: umsclient.MemberReadHistoryService.DeleteMemberReadHistory:input_type -> umsclient.DeleteMemberReadHistoryReq
	102, // 64: umsclient.MemberReadHistoryService.QueryMemberReadHistoryDetail:input_type -> umsclient.QueryMemberReadHistoryDetailReq
	104, // 65: umsclient.MemberReadHistoryService.QueryMemberReadHistoryList:input_type -> umsclient.QueryMemberReadHistoryListReq
	107, // 66: umsclient.MemberRuleSettingService.AddMemberRuleSetting:input_type -> umsclient.AddMemberRuleSettingReq
	109, // 67: umsclient.MemberRuleSettingService.DeleteMemberRuleSetting:input_type -> umsclient.DeleteMemberRuleSettingReq
	111, // 68: umsclient.MemberRuleSettingService.UpdateMemberRuleSetting:input_type -> umsclient.UpdateMemberRuleSettingReq
	113, // 69: umsclient.MemberRuleSettingService.UpdateMemberRuleSettingStatus:input_type -> umsclient.UpdateMemberRuleSettingStatusReq
	115, // 70: umsclient.MemberRuleSettingService.QueryMemberRuleSettingDetail:input_type -> umsclient.QueryMemberRuleSettingDetailReq
	117, // 71: umsclient.MemberRuleSettingService.QueryMemberRuleSettingList:input_type -> umsclient.QueryMemberRuleSettingListReq
	120, // 72: umsclient.MemberSignLogService.AddMemberSignLog:input_type -> umsclient.AddMemberSignLogReq
	122, // 73: umsclient.MemberSignLogService.QueryMemberSignLogDetail:input_type -> umsclient.QueryMemberSignLogDetailReq
	124, // 74: umsclient.MemberSignLogService.QueryMemberSignLogList:input_type -> umsclient.QueryMemberSignLogListReq
	127, // 75: umsclient.MemberStatisticsInfoService.AddMemberStatisticsInfo:input_type -> umsclient.AddMemberStatisticsInfoReq
	129, // 76: umsclient.MemberStatisticsInfoService.QueryMemberStatisticsInfoDetail:input_type -> umsclient.QueryMemberStatisticsInfoDetailReq
	131, // 77: umsclient.MemberStatisticsInfoService.QueryMemberStatisticsInfoList:input_type -> umsclient.QueryMemberStatisticsInfoListReq
	134, // 78: umsclient.MemberTagService.AddMemberTag:input_type -> umsclient.AddMemberTagReq
	136, // 79: umsclient.MemberTagService.DeleteMemberTag:input_type -> umsclient.DeleteMemberTagReq
	138, // 80: umsclient.MemberTagService.UpdateMemberTag:input_type -> umsclient.UpdateMemberTagReq
	140, // 81: umsclient.MemberTagService.UpdateMemberTagStatus:input_type -> umsclient.UpdateMemberTagStatusReq
	142, // 82: umsclient.MemberTagService.QueryMemberTagDetail:input_type -> umsclient.QueryMemberTagDetailReq
	144, // 83: umsclient.MemberTagService.QueryMemberTagList:input_type -> umsclient.QueryMemberTagListReq
	147, // 84: umsclient.MemberTagRelationService.AddMemberTagRelation:input_type -> umsclient.AddMemberTagRelationReq
	149, // 85: umsclient.MemberTagRelationService.QueryMemberTagRelationDetail:input_type -> umsclient.QueryMemberTagRelationDetailReq
	151, // 86: umsclient.MemberTagRelationService.QueryMemberTagRelationList:input_type -> umsclient.QueryMemberTagRelationListReq
	154, // 87: umsclient.MemberTaskService.AddMemberTask:input_type -> umsclient.AddMemberTaskReq
	156, // 88: umsclient.MemberTaskService.DeleteMemberTask:input_type -> umsclient.DeleteMemberTaskReq
	158, // 89: umsclient.MemberTaskService.UpdateMemberTask:input_type -> umsclient.UpdateMemberTaskReq
	160, // 90: umsclient.MemberTaskService.UpdateMemberTaskStatus:input_type -> umsclient.UpdateMemberTaskStatusReq
	162, // 91: umsclient.MemberTaskService.QueryMemberTaskDetail:input_type -> umsclient.QueryMemberTaskDetailReq
	164, // 92: umsclient.MemberTaskService.QueryMemberTaskList:input_type -> umsclient.QueryMemberTaskListReq
	167, // 93: umsclient.MemberTaskRelationService.AddMemberTaskRelation:input_type -> umsclient.AddMemberTaskRelationReq
	170, // 94: umsclient.MemberTaskRelationService.QueryMemberTaskRelationDetail:input_type -> umsclient.QueryMemberTaskRelationDetailReq
	172, // 95: umsclient.MemberTaskRelationService.QueryMemberTaskRelationList:input_type -> umsclient.QueryMemberTaskRelationListReq
	1,   // 96: umsclient.IntegrationConsumeSettingService.AddIntegrationConsumeSetting:output_type -> umsclient.AddIntegrationConsumeSettingResp
	3,   // 97: umsclient.IntegrationConsumeSettingService.DeleteIntegrationConsumeSetting:output_type -> umsclient.DeleteIntegrationConsumeSettingResp
	5,   // 98: umsclient.IntegrationConsumeSettingService.UpdateIntegrationConsumeSetting:output_type -> umsclient.UpdateIntegrationConsumeSettingResp
	7,   // 99: umsclient.IntegrationConsumeSettingService.UpdateIntegrationConsumeSettingStatus:output_type -> umsclient.UpdateIntegrationConsumeSettingStatusResp
	9,   // 100: umsclient.IntegrationConsumeSettingService.QueryIntegrationConsumeSettingDetail:output_type -> umsclient.QueryIntegrationConsumeSettingDetailResp
	12,  // 101: umsclient.IntegrationConsumeSettingService.QueryIntegrationConsumeSettingList:output_type -> umsclient.QueryIntegrationConsumeSettingListResp
	14,  // 102: umsclient.MemberAddressService.AddMemberAddress:output_type -> umsclient.AddMemberAddressResp
	16,  // 103: umsclient.MemberAddressService.DeleteMemberAddress:output_type -> umsclient.DeleteMemberAddressResp
	18,  // 104: umsclient.MemberAddressService.UpdateMemberAddress:output_type -> umsclient.UpdateMemberAddressResp
	20,  // 105: umsclient.MemberAddressService.UpdateMemberAddressStatus:output_type -> umsclient.UpdateMemberAddressStatusResp
	22,  // 106: umsclient.MemberAddressService.QueryMemberAddressDetail:output_type -> umsclient.QueryMemberAddressDetailResp
	25,  // 107: umsclient.MemberAddressService.QueryMemberAddressList:output_type -> umsclient.QueryMemberAddressListResp
	27,  // 108: umsclient.MemberBrandAttentionService.AddMemberBrandAttention:output_type -> umsclient.AddMemberBrandAttentionResp
	29,  // 109: umsclient.MemberBrandAttentionService.DeleteMemberBrandAttention:output_type -> umsclient.DeleteMemberBrandAttentionResp
	31,  // 110: umsclient.MemberBrandAttentionService.QueryMemberBrandAttentionDetail:output_type -> umsclient.QueryMemberBrandAttentionDetailResp
	34,  // 111: umsclient.MemberBrandAttentionService.QueryMemberBrandAttentionList:output_type -> umsclient.QueryMemberBrandAttentionListResp
	36,  // 112: umsclient.MemberGrowthLogService.AddMemberGrowthLog:output_type -> umsclient.AddMemberGrowthLogResp
	38,  // 113: umsclient.MemberGrowthLogService.QueryMemberGrowthLogDetail:output_type -> umsclient.QueryMemberGrowthLogDetailResp
	41,  // 114: umsclient.MemberGrowthLogService.QueryMemberGrowthLogList:output_type -> umsclient.QueryMemberGrowthLogListResp
	43,  // 115: umsclient.MemberInfoService.Register:output_type -> umsclient.RegisterResp
	45,  // 116: umsclient.MemberInfoService.DeleteMemberInfo:output_type -> umsclient.DeleteMemberInfoResp
	47,  // 117: umsclient.MemberInfoService.UpdateMemberInfo:output_type -> umsclient.UpdateMemberInfoResp
	49,  // 118: umsclient.MemberInfoService.UpdateMemberInfoStatus:output_type -> umsclient.UpdateMemberInfoStatusResp
	51,  // 119: umsclient.MemberInfoService.QueryMemberInfoDetail:output_type -> umsclient.QueryMemberInfoDetailResp
	54,  // 120: umsclient.MemberInfoService.QueryMemberInfoList:output_type -> umsclient.QueryMemberInfoListResp
	56,  // 121: umsclient.MemberInfoService.Login:output_type -> umsclient.LoginResp
	58,  // 122: umsclient.MemberInfoService.UpdateMemberPoints:output_type -> umsclient.UpdateMemberPointsResp
	60,  // 123: umsclient.MemberLevelService.AddMemberLevel:output_type -> umsclient.AddMemberLevelResp
	62,  // 124: umsclient.MemberLevelService.DeleteMemberLevel:output_type -> umsclient.DeleteMemberLevelResp
	64,  // 125: umsclient.MemberLevelService.UpdateMemberLevel:output_type -> umsclient.UpdateMemberLevelResp
	66,  // 126: umsclient.MemberLevelService.UpdateMemberLevelStatus:output_type -> umsclient.UpdateMemberLevelStatusResp
	68,  // 127: umsclient.MemberLevelService.QueryMemberLevelDetail:output_type -> umsclient.QueryMemberLevelDetailResp
	71,  // 128: umsclient.MemberLevelService.QueryMemberLevelList:output_type -> umsclient.QueryMemberLevelListResp
	73,  // 129: umsclient.MemberLoginLogService.DeleteMemberLoginLog:output_type -> umsclient.DeleteMemberLoginLogResp
	76,  // 130: umsclient.MemberLoginLogService.QueryMemberLoginLogList:output_type -> umsclient.QueryMemberLoginLogListResp
	78,  // 131: umsclient.MemberPointsLogService.AddMemberPointsLog:output_type -> umsclient.AddMemberPointsLogResp
	80,  // 132: umsclient.MemberPointsLogService.QueryMemberPointsLogDetail:output_type -> umsclient.QueryMemberPointsLogDetailResp
	83,  // 133: umsclient.MemberPointsLogService.QueryMemberPointsLogList:output_type -> umsclient.QueryMemberPointsLogListResp
	85,  // 134: umsclient.MemberProductCategoryRelationService.AddMemberProductCategoryRelation:output_type -> umsclient.AddMemberProductCategoryRelationResp
	88,  // 135: umsclient.MemberProductCategoryRelationService.QueryMemberProductCategoryRelationList:output_type -> umsclient.QueryMemberProductCategoryRelationListResp
	90,  // 136: umsclient.MemberProductCollectionService.AddMemberProductCollection:output_type -> umsclient.AddMemberProductCollectionResp
	92,  // 137: umsclient.MemberProductCollectionService.DeleteMemberProductCollection:output_type -> umsclient.DeleteMemberProductCollectionResp
	94,  // 138: umsclient.MemberProductCollectionService.QueryMemberProductCollectionDetail:output_type -> umsclient.QueryMemberProductCollectionDetailResp
	97,  // 139: umsclient.MemberProductCollectionService.QueryMemberProductCollectionList:output_type -> umsclient.QueryMemberProductCollectionListResp
	99,  // 140: umsclient.MemberReadHistoryService.AddMemberReadHistory:output_type -> umsclient.AddMemberReadHistoryResp
	101, // 141: umsclient.MemberReadHistoryService.DeleteMemberReadHistory:output_type -> umsclient.DeleteMemberReadHistoryResp
	103, // 142: umsclient.MemberReadHistoryService.QueryMemberReadHistoryDetail:output_type -> umsclient.QueryMemberReadHistoryDetailResp
	106, // 143: umsclient.MemberReadHistoryService.QueryMemberReadHistoryList:output_type -> umsclient.QueryMemberReadHistoryListResp
	108, // 144: umsclient.MemberRuleSettingService.AddMemberRuleSetting:output_type -> umsclient.AddMemberRuleSettingResp
	110, // 145: umsclient.MemberRuleSettingService.DeleteMemberRuleSetting:output_type -> umsclient.DeleteMemberRuleSettingResp
	112, // 146: umsclient.MemberRuleSettingService.UpdateMemberRuleSetting:output_type -> umsclient.UpdateMemberRuleSettingResp
	114, // 147: umsclient.MemberRuleSettingService.UpdateMemberRuleSettingStatus:output_type -> umsclient.UpdateMemberRuleSettingStatusResp
	116, // 148: umsclient.MemberRuleSettingService.QueryMemberRuleSettingDetail:output_type -> umsclient.QueryMemberRuleSettingDetailResp
	119, // 149: umsclient.MemberRuleSettingService.QueryMemberRuleSettingList:output_type -> umsclient.QueryMemberRuleSettingListResp
	121, // 150: umsclient.MemberSignLogService.AddMemberSignLog:output_type -> umsclient.AddMemberSignLogResp
	123, // 151: umsclient.MemberSignLogService.QueryMemberSignLogDetail:output_type -> umsclient.QueryMemberSignLogDetailResp
	126, // 152: umsclient.MemberSignLogService.QueryMemberSignLogList:output_type -> umsclient.QueryMemberSignLogListResp
	128, // 153: umsclient.MemberStatisticsInfoService.AddMemberStatisticsInfo:output_type -> umsclient.AddMemberStatisticsInfoResp
	130, // 154: umsclient.MemberStatisticsInfoService.QueryMemberStatisticsInfoDetail:output_type -> umsclient.QueryMemberStatisticsInfoDetailResp
	133, // 155: umsclient.MemberStatisticsInfoService.QueryMemberStatisticsInfoList:output_type -> umsclient.QueryMemberStatisticsInfoListResp
	135, // 156: umsclient.MemberTagService.AddMemberTag:output_type -> umsclient.AddMemberTagResp
	137, // 157: umsclient.MemberTagService.DeleteMemberTag:output_type -> umsclient.DeleteMemberTagResp
	139, // 158: umsclient.MemberTagService.UpdateMemberTag:output_type -> umsclient.UpdateMemberTagResp
	141, // 159: umsclient.MemberTagService.UpdateMemberTagStatus:output_type -> umsclient.UpdateMemberTagStatusResp
	143, // 160: umsclient.MemberTagService.QueryMemberTagDetail:output_type -> umsclient.QueryMemberTagDetailResp
	146, // 161: umsclient.MemberTagService.QueryMemberTagList:output_type -> umsclient.QueryMemberTagListResp
	148, // 162: umsclient.MemberTagRelationService.AddMemberTagRelation:output_type -> umsclient.AddMemberTagRelationResp
	150, // 163: umsclient.MemberTagRelationService.QueryMemberTagRelationDetail:output_type -> umsclient.QueryMemberTagRelationDetailResp
	153, // 164: umsclient.MemberTagRelationService.QueryMemberTagRelationList:output_type -> umsclient.QueryMemberTagRelationListResp
	155, // 165: umsclient.MemberTaskService.AddMemberTask:output_type -> umsclient.AddMemberTaskResp
	157, // 166: umsclient.MemberTaskService.DeleteMemberTask:output_type -> umsclient.DeleteMemberTaskResp
	159, // 167: umsclient.MemberTaskService.UpdateMemberTask:output_type -> umsclient.UpdateMemberTaskResp
	161, // 168: umsclient.MemberTaskService.UpdateMemberTaskStatus:output_type -> umsclient.UpdateMemberTaskStatusResp
	163, // 169: umsclient.MemberTaskService.QueryMemberTaskDetail:output_type -> umsclient.QueryMemberTaskDetailResp
	166, // 170: umsclient.MemberTaskService.QueryMemberTaskList:output_type -> umsclient.QueryMemberTaskListResp
	168, // 171: umsclient.MemberTaskRelationService.AddMemberTaskRelation:output_type -> umsclient.AddMemberTaskRelationResp
	171, // 172: umsclient.MemberTaskRelationService.QueryMemberTaskRelationDetail:output_type -> umsclient.QueryMemberTaskRelationDetailResp
	174, // 173: umsclient.MemberTaskRelationService.QueryMemberTaskRelationList:output_type -> umsclient.QueryMemberTaskRelationListResp
	96,  // [96:174] is the sub-list for method output_type
	18,  // [18:96] is the sub-list for method input_type
	18,  // [18:18] is the sub-list for extension type_name
	18,  // [18:18] is the sub-list for extension extendee
	0,   // [0:18] is the sub-list for field type_name
}

func init() { file_rpc_ums_ums_proto_init() }
func file_rpc_ums_ums_proto_init() {
	if File_rpc_ums_ums_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_ums_ums_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddIntegrationConsumeSettingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddIntegrationConsumeSettingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteIntegrationConsumeSettingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteIntegrationConsumeSettingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIntegrationConsumeSettingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIntegrationConsumeSettingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIntegrationConsumeSettingStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIntegrationConsumeSettingStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryIntegrationConsumeSettingDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryIntegrationConsumeSettingDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryIntegrationConsumeSettingListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegrationConsumeSettingListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryIntegrationConsumeSettingListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberAddressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberAddressResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberAddressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberAddressResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberAddressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberAddressResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberAddressStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberAddressStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberAddressDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberAddressDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberAddressListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberAddressListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberAddressListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberBrandAttentionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberBrandAttentionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberBrandAttentionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberBrandAttentionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberBrandAttentionDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberBrandAttentionDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberBrandAttentionListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberBrandAttentionListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberBrandAttentionListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberGrowthLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberGrowthLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberGrowthLogDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberGrowthLogDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberGrowthLogListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberGrowthLogListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberGrowthLogListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberInfoStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberInfoStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberInfoDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberInfoDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberInfoListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberInfoListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberInfoListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberPointsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberPointsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberLevelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberLevelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberLevelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberLevelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberLevelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberLevelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberLevelStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberLevelStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberLevelDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberLevelDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberLevelListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberLevelListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberLevelListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberLoginLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberLoginLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberLoginLogListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberLoginLogListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberLoginLogListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberPointsLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberPointsLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberPointsLogDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberPointsLogDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberPointsLogListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberPointsLogListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberPointsLogListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberProductCategoryRelationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberProductCategoryRelationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberProductCategoryRelationListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberProductCategoryRelationListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberProductCategoryRelationListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberProductCollectionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberProductCollectionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberProductCollectionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberProductCollectionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberProductCollectionDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberProductCollectionDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberProductCollectionListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberProductCollectionListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberProductCollectionListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberReadHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberReadHistoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberReadHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberReadHistoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberReadHistoryDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberReadHistoryDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberReadHistoryListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberReadHistoryListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberReadHistoryListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberRuleSettingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberRuleSettingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberRuleSettingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberRuleSettingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberRuleSettingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberRuleSettingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberRuleSettingStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberRuleSettingStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberRuleSettingDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberRuleSettingDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberRuleSettingListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberRuleSettingListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberRuleSettingListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberSignLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberSignLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberSignLogDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberSignLogDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberSignLogListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberSignLogListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberSignLogListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberStatisticsInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberStatisticsInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberStatisticsInfoDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberStatisticsInfoDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberStatisticsInfoListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberStatisticsInfoListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberStatisticsInfoListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberTagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberTagResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberTagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberTagResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberTagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberTagResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberTagStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberTagStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberTagDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberTagDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberTagListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberTagListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberTagListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberTagRelationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberTagRelationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberTagRelationDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberTagRelationDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberTagRelationListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberTagRelationListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberTagRelationListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberTaskResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemberTaskResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberTaskResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberTaskStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberTaskStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberTaskDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberTaskDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberTaskListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberTaskListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberTaskListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberTaskRelationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberTaskRelationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberTaskRelationStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberTaskRelationDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[171].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberTaskRelationDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[172].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberTaskRelationListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[173].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberTaskRelationListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_ums_ums_proto_msgTypes[174].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMemberTaskRelationListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_ums_ums_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   175,
			NumExtensions: 0,
			NumServices:   18,
		},
		GoTypes:           file_rpc_ums_ums_proto_goTypes,
		DependencyIndexes: file_rpc_ums_ums_proto_depIdxs,
		MessageInfos:      file_rpc_ums_ums_proto_msgTypes,
	}.Build()
	File_rpc_ums_ums_proto = out.File
	file_rpc_ums_ums_proto_rawDesc = nil
	file_rpc_ums_ums_proto_goTypes = nil
	file_rpc_ums_ums_proto_depIdxs = nil
}
