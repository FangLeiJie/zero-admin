// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: sms.proto

package server

import (
	"context"

	"github.com/feihua/zero-admin/rpc/sms/internal/logic/seckillactivityservice"
	"github.com/feihua/zero-admin/rpc/sms/internal/svc"
	"github.com/feihua/zero-admin/rpc/sms/smsclient"
)

type SeckillActivityServiceServer struct {
	svcCtx *svc.ServiceContext
	smsclient.UnimplementedSeckillActivityServiceServer
}

func NewSeckillActivityServiceServer(svcCtx *svc.ServiceContext) *SeckillActivityServiceServer {
	return &SeckillActivityServiceServer{
		svcCtx: svcCtx,
	}
}

// 添加秒杀活动
func (s *SeckillActivityServiceServer) AddSeckillActivity(ctx context.Context, in *smsclient.AddSeckillActivityReq) (*smsclient.AddSeckillActivityResp, error) {
	l := seckillactivityservicelogic.NewAddSeckillActivityLogic(ctx, s.svcCtx)
	return l.AddSeckillActivity(in)
}

// 删除秒杀活动
func (s *SeckillActivityServiceServer) DeleteSeckillActivity(ctx context.Context, in *smsclient.DeleteSeckillActivityReq) (*smsclient.DeleteSeckillActivityResp, error) {
	l := seckillactivityservicelogic.NewDeleteSeckillActivityLogic(ctx, s.svcCtx)
	return l.DeleteSeckillActivity(in)
}

// 更新秒杀活动
func (s *SeckillActivityServiceServer) UpdateSeckillActivity(ctx context.Context, in *smsclient.UpdateSeckillActivityReq) (*smsclient.UpdateSeckillActivityResp, error) {
	l := seckillactivityservicelogic.NewUpdateSeckillActivityLogic(ctx, s.svcCtx)
	return l.UpdateSeckillActivity(in)
}

// 更新秒杀活动状态
func (s *SeckillActivityServiceServer) UpdateSeckillActivityStatus(ctx context.Context, in *smsclient.UpdateSeckillActivityStatusReq) (*smsclient.UpdateSeckillActivityStatusResp, error) {
	l := seckillactivityservicelogic.NewUpdateSeckillActivityStatusLogic(ctx, s.svcCtx)
	return l.UpdateSeckillActivityStatus(in)
}

// 查询秒杀活动详情
func (s *SeckillActivityServiceServer) QuerySeckillActivityDetail(ctx context.Context, in *smsclient.QuerySeckillActivityDetailReq) (*smsclient.QuerySeckillActivityDetailResp, error) {
	l := seckillactivityservicelogic.NewQuerySeckillActivityDetailLogic(ctx, s.svcCtx)
	return l.QuerySeckillActivityDetail(in)
}

// 查询秒杀活动列表
func (s *SeckillActivityServiceServer) QuerySeckillActivityList(ctx context.Context, in *smsclient.QuerySeckillActivityListReq) (*smsclient.QuerySeckillActivityListResp, error) {
	l := seckillactivityservicelogic.NewQuerySeckillActivityListLogic(ctx, s.svcCtx)
	return l.QuerySeckillActivityList(in)
}

// 查询当前时间是否有秒杀活动
func (s *SeckillActivityServiceServer) QuerySeckillActivityListByDate(ctx context.Context, in *smsclient.QuerySeckillActivityListByDateReq) (*smsclient.QueryFlashPromotionListByDateResp, error) {
	l := seckillactivityservicelogic.NewQuerySeckillActivityListByDateLogic(ctx, s.svcCtx)
	return l.QuerySeckillActivityListByDate(in)
}
