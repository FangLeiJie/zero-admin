// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: sms.proto

package server

import (
	"context"

	"github.com/feihua/zero-admin/rpc/sms/internal/logic/seckillproductservice"
	"github.com/feihua/zero-admin/rpc/sms/internal/svc"
	"github.com/feihua/zero-admin/rpc/sms/smsclient"
)

type SeckillProductServiceServer struct {
	svcCtx *svc.ServiceContext
	smsclient.UnimplementedSeckillProductServiceServer
}

func NewSeckillProductServiceServer(svcCtx *svc.ServiceContext) *SeckillProductServiceServer {
	return &SeckillProductServiceServer{
		svcCtx: svcCtx,
	}
}

// 添加秒杀商品
func (s *SeckillProductServiceServer) AddSeckillProduct(ctx context.Context, in *smsclient.AddSeckillProductReq) (*smsclient.AddSeckillProductResp, error) {
	l := seckillproductservicelogic.NewAddSeckillProductLogic(ctx, s.svcCtx)
	return l.AddSeckillProduct(in)
}

// 删除秒杀商品
func (s *SeckillProductServiceServer) DeleteSeckillProduct(ctx context.Context, in *smsclient.DeleteSeckillProductReq) (*smsclient.DeleteSeckillProductResp, error) {
	l := seckillproductservicelogic.NewDeleteSeckillProductLogic(ctx, s.svcCtx)
	return l.DeleteSeckillProduct(in)
}

// 更新秒杀商品
func (s *SeckillProductServiceServer) UpdateSeckillProduct(ctx context.Context, in *smsclient.UpdateSeckillProductReq) (*smsclient.UpdateSeckillProductResp, error) {
	l := seckillproductservicelogic.NewUpdateSeckillProductLogic(ctx, s.svcCtx)
	return l.UpdateSeckillProduct(in)
}

// 更新秒杀商品状态
func (s *SeckillProductServiceServer) UpdateSeckillProductStatus(ctx context.Context, in *smsclient.UpdateSeckillProductStatusReq) (*smsclient.UpdateSeckillProductStatusResp, error) {
	l := seckillproductservicelogic.NewUpdateSeckillProductStatusLogic(ctx, s.svcCtx)
	return l.UpdateSeckillProductStatus(in)
}

// 查询秒杀商品详情
func (s *SeckillProductServiceServer) QuerySeckillProductDetail(ctx context.Context, in *smsclient.QuerySeckillProductDetailReq) (*smsclient.QuerySeckillProductDetailResp, error) {
	l := seckillproductservicelogic.NewQuerySeckillProductDetailLogic(ctx, s.svcCtx)
	return l.QuerySeckillProductDetail(in)
}

// 查询秒杀商品列表
func (s *SeckillProductServiceServer) QuerySeckillProductList(ctx context.Context, in *smsclient.QuerySeckillProductListReq) (*smsclient.QuerySeckillProductListResp, error) {
	l := seckillproductservicelogic.NewQuerySeckillProductListLogic(ctx, s.svcCtx)
	return l.QuerySeckillProductList(in)
}

// 查询秒杀商品详情(app)
func (s *SeckillProductServiceServer) QuerySeckillProductByProductId(ctx context.Context, in *smsclient.QuerySeckillProductByProductIdReq) (*smsclient.QuerySeckillProductDetailResp, error) {
	l := seckillproductservicelogic.NewQuerySeckillProductByProductIdLogic(ctx, s.svcCtx)
	return l.QuerySeckillProductByProductId(in)
}
