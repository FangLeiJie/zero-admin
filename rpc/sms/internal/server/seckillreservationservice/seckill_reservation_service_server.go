// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: sms.proto

package server

import (
	"context"

	"github.com/feihua/zero-admin/rpc/sms/internal/logic/seckillreservationservice"
	"github.com/feihua/zero-admin/rpc/sms/internal/svc"
	"github.com/feihua/zero-admin/rpc/sms/smsclient"
)

type SeckillReservationServiceServer struct {
	svcCtx *svc.ServiceContext
	smsclient.UnimplementedSeckillReservationServiceServer
}

func NewSeckillReservationServiceServer(svcCtx *svc.ServiceContext) *SeckillReservationServiceServer {
	return &SeckillReservationServiceServer{
		svcCtx: svcCtx,
	}
}

// 添加秒杀预约
func (s *SeckillReservationServiceServer) AddSeckillReservation(ctx context.Context, in *smsclient.AddSeckillReservationReq) (*smsclient.AddSeckillReservationResp, error) {
	l := seckillreservationservicelogic.NewAddSeckillReservationLogic(ctx, s.svcCtx)
	return l.AddSeckillReservation(in)
}

// 删除秒杀预约
func (s *SeckillReservationServiceServer) DeleteSeckillReservation(ctx context.Context, in *smsclient.DeleteSeckillReservationReq) (*smsclient.DeleteSeckillReservationResp, error) {
	l := seckillreservationservicelogic.NewDeleteSeckillReservationLogic(ctx, s.svcCtx)
	return l.DeleteSeckillReservation(in)
}

// 更新秒杀预约
func (s *SeckillReservationServiceServer) UpdateSeckillReservation(ctx context.Context, in *smsclient.UpdateSeckillReservationReq) (*smsclient.UpdateSeckillReservationResp, error) {
	l := seckillreservationservicelogic.NewUpdateSeckillReservationLogic(ctx, s.svcCtx)
	return l.UpdateSeckillReservation(in)
}

// 更新秒杀预约状态
func (s *SeckillReservationServiceServer) UpdateSeckillReservationStatus(ctx context.Context, in *smsclient.UpdateSeckillReservationStatusReq) (*smsclient.UpdateSeckillReservationStatusResp, error) {
	l := seckillreservationservicelogic.NewUpdateSeckillReservationStatusLogic(ctx, s.svcCtx)
	return l.UpdateSeckillReservationStatus(in)
}

// 查询秒杀预约详情
func (s *SeckillReservationServiceServer) QuerySeckillReservationDetail(ctx context.Context, in *smsclient.QuerySeckillReservationDetailReq) (*smsclient.QuerySeckillReservationDetailResp, error) {
	l := seckillreservationservicelogic.NewQuerySeckillReservationDetailLogic(ctx, s.svcCtx)
	return l.QuerySeckillReservationDetail(in)
}

// 查询秒杀预约列表
func (s *SeckillReservationServiceServer) QuerySeckillReservationList(ctx context.Context, in *smsclient.QuerySeckillReservationListReq) (*smsclient.QuerySeckillReservationListResp, error) {
	l := seckillreservationservicelogic.NewQuerySeckillReservationListLogic(ctx, s.svcCtx)
	return l.QuerySeckillReservationList(in)
}
