// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: sms.proto

package server

import (
	"context"

	"github.com/feihua/zero-admin/rpc/sms/internal/logic/couponscopeservice"
	"github.com/feihua/zero-admin/rpc/sms/internal/svc"
	"github.com/feihua/zero-admin/rpc/sms/smsclient"
)

type CouponScopeServiceServer struct {
	svcCtx *svc.ServiceContext
	smsclient.UnimplementedCouponScopeServiceServer
}

func NewCouponScopeServiceServer(svcCtx *svc.ServiceContext) *CouponScopeServiceServer {
	return &CouponScopeServiceServer{
		svcCtx: svcCtx,
	}
}

// 添加优惠券使用范围
func (s *CouponScopeServiceServer) AddCouponScope(ctx context.Context, in *smsclient.AddCouponScopeReq) (*smsclient.AddCouponScopeResp, error) {
	l := couponscopeservicelogic.NewAddCouponScopeLogic(ctx, s.svcCtx)
	return l.AddCouponScope(in)
}

// 删除优惠券使用范围
func (s *CouponScopeServiceServer) DeleteCouponScope(ctx context.Context, in *smsclient.DeleteCouponScopeReq) (*smsclient.DeleteCouponScopeResp, error) {
	l := couponscopeservicelogic.NewDeleteCouponScopeLogic(ctx, s.svcCtx)
	return l.DeleteCouponScope(in)
}

// 更新优惠券使用范围
func (s *CouponScopeServiceServer) UpdateCouponScope(ctx context.Context, in *smsclient.UpdateCouponScopeReq) (*smsclient.UpdateCouponScopeResp, error) {
	l := couponscopeservicelogic.NewUpdateCouponScopeLogic(ctx, s.svcCtx)
	return l.UpdateCouponScope(in)
}

// 查询优惠券使用范围详情
func (s *CouponScopeServiceServer) QueryCouponScopeDetail(ctx context.Context, in *smsclient.QueryCouponScopeDetailReq) (*smsclient.QueryCouponScopeDetailResp, error) {
	l := couponscopeservicelogic.NewQueryCouponScopeDetailLogic(ctx, s.svcCtx)
	return l.QueryCouponScopeDetail(in)
}

// 查询优惠券使用范围列表
func (s *CouponScopeServiceServer) QueryCouponScopeList(ctx context.Context, in *smsclient.QueryCouponScopeListReq) (*smsclient.QueryCouponScopeListResp, error) {
	l := couponscopeservicelogic.NewQueryCouponScopeListLogic(ctx, s.svcCtx)
	return l.QueryCouponScopeList(in)
}
